{"version":3,"sources":["../../../../src/core/Debug.js"],"names":[],"mappings":"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","file":"Debug.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from './EventBus';\nimport Events from './events/Events';\nimport FactoryMaker from './FactoryMaker';\n\nconst LOG_LEVEL_NONE = 0;\nconst LOG_LEVEL_FATAL = 1;\nconst LOG_LEVEL_ERROR = 2;\nconst LOG_LEVEL_WARNING = 3;\nconst LOG_LEVEL_INFO = 4;\nconst LOG_LEVEL_DEBUG = 5;\n\n/**\n * @module Debug\n */\nfunction Debug() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    const logFn = [];\n\n    let instance,\n        showLogTimestamp,\n        showCalleeName,\n        startTime,\n        logLevel;\n\n    function setup() {\n        showLogTimestamp = true;\n        showCalleeName = true;\n        logLevel = LOG_LEVEL_WARNING;\n        startTime = new Date().getTime();\n\n        if (typeof window !== 'undefined' && window.console) {\n            logFn[LOG_LEVEL_FATAL] = getLogFn(window.console.error);\n            logFn[LOG_LEVEL_ERROR] = getLogFn(window.console.error);\n            logFn[LOG_LEVEL_WARNING] = getLogFn(window.console.warn);\n            logFn[LOG_LEVEL_INFO] = getLogFn(window.console.info);\n            logFn[LOG_LEVEL_DEBUG] = getLogFn(window.console.debug);\n        }\n    }\n\n    function getLogFn(fn) {\n        if (fn && fn.bind) {\n            return fn.bind(window.console);\n        }\n        // if not define, return the default function for reporting logs\n        return window.console.log.bind(window.console);\n    }\n\n    /**\n     * Retrieves a logger which can be used to write logging information in browser console.\n     * @param {object} instance Object for which the logger is created. It is used\n     * to include calle object information in log messages.\n     * @memberof module:Debug\n     * @returns {Logger}\n     * @instance\n     */\n    function getLogger(instance) {\n        return {\n            fatal: fatal.bind(instance),\n            error: error.bind(instance),\n            warn: warn.bind(instance),\n            info: info.bind(instance),\n            debug: debug.bind(instance)\n        };\n    }\n\n    /**\n     * Sets up the log level. The levels are cumulative. For example, if you set the log level\n     * to dashjs.Debug.LOG_LEVEL_WARNING all warnings, errors and fatals will be logged. Possible values\n     *\n     * <ul>\n     * <li>dashjs.Debug.LOG_LEVEL_NONE<br/>\n     * No message is written in the browser console.\n     *\n     * <li>dashjs.Debug.LOG_LEVEL_FATAL<br/>\n     * Log fatal errors. An error is considered fatal when it causes playback to fail completely.\n     *\n     * <li>dashjs.Debug.LOG_LEVEL_ERROR<br/>\n     * Log error messages.\n     *\n     * <li>dashjs.Debug.LOG_LEVEL_WARNING<br/>\n     * Log warning messages.\n     *\n     * <li>dashjs.Debug.LOG_LEVEL_INFO<br/>\n     * Log info messages.\n     *\n     * <li>dashjs.Debug.LOG_LEVEL_DEBUG<br/>\n     * Log debug messages.\n     * </ul>\n     * @param {number} value Log level\n     * @default true\n     * @memberof module:Debug\n     * @instance\n     */\n    function setLogLevel(value) {\n        logLevel = value;\n    }\n\n    /**\n     * Use this method to get the current log level.\n     * @memberof module:Debug\n     * @instance\n     */\n    function getLogLevel() {\n        return logLevel;\n    }\n\n    /**\n     * Prepends a timestamp in milliseconds to each log message.\n     * @param {boolean} value Set to true if you want to see a timestamp in each log message.\n     * @default LOG_LEVEL_WARNING\n     * @memberof module:Debug\n     * @instance\n     */\n    function setLogTimestampVisible(value) {\n        showLogTimestamp = value;\n    }\n    /**\n     * Prepends the callee object name, and media type if available, to each log message.\n     * @param {boolean} value Set to true if you want to see the callee object name and media type in each log message.\n     * @default true\n     * @memberof module:Debug\n     * @instance\n     */\n    function setCalleeNameVisible(value) {\n        showCalleeName = value;\n    }\n    /**\n     * Toggles logging to the browser's javascript console.  If you set to false you will still receive a log event with the same message.\n     * @param {boolean} value Set to false if you want to turn off logging to the browser's console.\n     * @default true\n     * @memberof module:Debug\n     * @instance\n     * @deprecated\n     */\n    function setLogToBrowserConsole(value) {\n        // Replicate functionality previous to log levels feature\n        if (value) {\n            logLevel = LOG_LEVEL_DEBUG;\n        } else {\n            logLevel = LOG_LEVEL_NONE;\n        }\n    }\n    /**\n     * Use this method to get the state of logToBrowserConsole.\n     * @returns {boolean} The current value of logToBrowserConsole\n     * @memberof module:Debug\n     * @instance\n     * @deprecated\n     */\n    function getLogToBrowserConsole() {\n        return logLevel !== LOG_LEVEL_NONE;\n    }\n\n    function fatal(...params) {\n        doLog(LOG_LEVEL_FATAL, this, ...params);\n    }\n\n    function error(...params) {\n        doLog(LOG_LEVEL_ERROR, this, ...params);\n    }\n\n    function warn(...params) {\n        doLog(LOG_LEVEL_WARNING, this, ...params);\n    }\n\n    function info(...params) {\n        doLog(LOG_LEVEL_INFO, this, ...params);\n    }\n\n    function debug(...params) {\n        doLog(LOG_LEVEL_DEBUG, this, ...params);\n    }\n\n    function doLog(level, _this, ...params) {\n        if (logLevel < level) {\n            return;\n        }\n\n        let message = '';\n        let logTime = null;\n\n        if (showLogTimestamp) {\n            logTime = new Date().getTime();\n            message += '[' + (logTime - startTime) + ']';\n        }\n\n        if (showCalleeName && _this && _this.getClassName) {\n            message += '[' + _this.getClassName() + ']';\n            if (_this.getType) {\n                message += '[' + _this.getType() + ']';\n            }\n        }\n\n        if (message.length > 0) {\n            message += ' ';\n        }\n\n        Array.apply(null, params).forEach(function (item) {\n            message += item + ' ';\n        });\n\n        if (logFn[level]) {\n            logFn[level](message);\n        }\n\n        // TODO: To be removed\n        eventBus.trigger(Events.LOG, {message: message});\n    }\n\n    instance = {\n        getLogger: getLogger,\n        setLogTimestampVisible: setLogTimestampVisible,\n        setCalleeNameVisible: setCalleeNameVisible,\n        setLogToBrowserConsole: setLogToBrowserConsole,\n        getLogToBrowserConsole: getLogToBrowserConsole,\n        setLogLevel: setLogLevel,\n        getLogLevel: getLogLevel\n    };\n\n    setup();\n\n    return instance;\n}\n\nDebug.__dashjs_factory_name = 'Debug';\n\nconst factory = FactoryMaker.getSingletonFactory(Debug);\nfactory.LOG_LEVEL_NONE = LOG_LEVEL_NONE;\nfactory.LOG_LEVEL_FATAL = LOG_LEVEL_FATAL;\nfactory.LOG_LEVEL_ERROR = LOG_LEVEL_ERROR;\nfactory.LOG_LEVEL_WARNING = LOG_LEVEL_WARNING;\nfactory.LOG_LEVEL_INFO = LOG_LEVEL_INFO;\nfactory.LOG_LEVEL_DEBUG = LOG_LEVEL_DEBUG;\nFactoryMaker.updateSingletonFactory(Debug.__dashjs_factory_name, factory);\nexport default factory;\n"]}