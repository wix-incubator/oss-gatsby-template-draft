{"version":3,"sources":["../../../../src/streaming/ManifestUpdater.js"],"names":[],"mappings":"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","file":"ManifestUpdater.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport EventBus from '../core/EventBus';\nimport Events from '../core/events/Events';\nimport FactoryMaker from '../core/FactoryMaker';\nimport Debug from '../core/Debug';\n\nfunction ManifestUpdater() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        refreshDelay,\n        refreshTimer,\n        isPaused,\n        isUpdating,\n        manifestLoader,\n        manifestModel,\n        dashManifestModel,\n        mediaPlayerModel,\n        errHandler;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n        if (config.manifestLoader) {\n            manifestLoader = config.manifestLoader;\n        }\n        if (config.errHandler) {\n            errHandler = config.errHandler;\n        }\n    }\n\n    function initialize() {\n        resetInitialSettings();\n\n        eventBus.on(Events.STREAMS_COMPOSED, onStreamsComposed, this);\n        eventBus.on(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\n        eventBus.on(Events.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.on(Events.INTERNAL_MANIFEST_LOADED, onManifestLoaded, this);\n    }\n\n    function setManifest(manifest) {\n        update(manifest);\n    }\n\n    function resetInitialSettings() {\n        refreshDelay = NaN;\n        isUpdating = false;\n        isPaused = true;\n        stopManifestRefreshTimer();\n    }\n\n    function reset() {\n\n        eventBus.off(Events.PLAYBACK_STARTED, onPlaybackStarted, this);\n        eventBus.off(Events.PLAYBACK_PAUSED, onPlaybackPaused, this);\n        eventBus.off(Events.STREAMS_COMPOSED, onStreamsComposed, this);\n        eventBus.off(Events.INTERNAL_MANIFEST_LOADED, onManifestLoaded, this);\n\n        resetInitialSettings();\n    }\n\n    function stopManifestRefreshTimer() {\n        if (refreshTimer !== null) {\n            clearInterval(refreshTimer);\n            refreshTimer = null;\n        }\n    }\n\n    function startManifestRefreshTimer(delay) {\n        stopManifestRefreshTimer();\n\n        if (isNaN(delay) && !isNaN(refreshDelay)) {\n            delay = refreshDelay * 1000;\n        }\n\n        if (!isNaN(delay)) {\n            logger.debug('Refresh manifest in ' + delay + ' milliseconds.');\n            refreshTimer = setTimeout(onRefreshTimer, delay);\n        }\n    }\n\n    function refreshManifest() {\n        isUpdating = true;\n        const manifest = manifestModel.getValue();\n        let url = manifest.url;\n        const location = dashManifestModel.getLocation(manifest);\n        if (location) {\n            url = location;\n        }\n        manifestLoader.load(url);\n    }\n\n    function update(manifest) {\n\n        manifestModel.setValue(manifest);\n\n        const date = new Date();\n        const latencyOfLastUpdate = (date.getTime() - manifest.loadedTime.getTime()) / 1000;\n        refreshDelay = dashManifestModel.getManifestUpdatePeriod(manifest, latencyOfLastUpdate);\n        // setTimeout uses a 32 bit number to store the delay. Any number greater than it\n        // will cause event associated with setTimeout to trigger immediately\n        if (refreshDelay * 1000 > 0x7FFFFFFF) {\n            refreshDelay = 0x7FFFFFFF / 1000;\n        }\n        eventBus.trigger(Events.MANIFEST_UPDATED, {manifest: manifest});\n        logger.info('Manifest has been refreshed at ' + date + '[' + date.getTime() / 1000 + '] ');\n\n        if (!isPaused) {\n            startManifestRefreshTimer();\n        }\n    }\n\n    function onRefreshTimer() {\n        if (isPaused && !mediaPlayerModel.getScheduleWhilePaused()) {\n            return;\n        }\n        if (isUpdating) {\n            startManifestRefreshTimer(mediaPlayerModel.getManifestUpdateRetryInterval());\n            return;\n        }\n        refreshManifest();\n    }\n\n    function onManifestLoaded(e) {\n        if (!e.error) {\n            update(e.manifest);\n        } else {\n            errHandler.manifestError(e.error.message, e.error.code);\n        }\n    }\n\n    function onPlaybackStarted (/*e*/) {\n        isPaused = false;\n        startManifestRefreshTimer();\n    }\n\n    function onPlaybackPaused(/*e*/) {\n        isPaused = true;\n        stopManifestRefreshTimer();\n    }\n\n    function onStreamsComposed(/*e*/) {\n        // When streams are ready we can consider manifest update completed. Resolve the update promise.\n        isUpdating = false;\n    }\n\n    instance = {\n        initialize: initialize,\n        setManifest: setManifest,\n        refreshManifest: refreshManifest,\n        setConfig: setConfig,\n        reset: reset\n    };\n\n    setup();\n    return instance;\n}\nManifestUpdater.__dashjs_factory_name = 'ManifestUpdater';\nexport default FactoryMaker.getClassFactory(ManifestUpdater);\n"]}