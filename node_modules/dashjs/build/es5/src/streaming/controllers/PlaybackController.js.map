{"version":3,"sources":["../../../../../src/streaming/controllers/PlaybackController.js"],"names":[],"mappings":"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","file":"PlaybackController.js","sourcesContent":["/**\n * The copyright in this software is being made available under the BSD License,\n * included below. This software may be subject to other third party and contributor\n * rights, including patent rights, and no such rights are granted under this license.\n *\n * Copyright (c) 2013, Dash Industry Forum.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted provided that the following conditions are met:\n *  * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation and/or\n *  other materials provided with the distribution.\n *  * Neither the name of Dash Industry Forum nor the names of its\n *  contributors may be used to endorse or promote products derived from this software\n *  without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\nimport Constants from '../constants/Constants';\nimport BufferController from './BufferController';\nimport URIFragmentModel from '../models/URIFragmentModel';\nimport EventBus from '../../core/EventBus';\nimport Events from '../../core/events/Events';\nimport FactoryMaker from '../../core/FactoryMaker';\nimport Debug from '../../core/Debug';\n\nconst LIVE_UPDATE_PLAYBACK_TIME_INTERVAL_MS = 500;\nconst DEFAULT_CATCHUP_PLAYBACK_RATE = 0.05;\n\n// Start catching up mechanism for low latency live streaming\n// when latency goes beyong targetDelay * (1 + LIVE_CATCHUP_START_THRESHOLD)\nconst LIVE_CATCHUP_START_THRESHOLD = 0.35;\n\nfunction PlaybackController() {\n\n    const context = this.context;\n    const eventBus = EventBus(context).getInstance();\n\n    let instance,\n        logger,\n        streamController,\n        metricsModel,\n        dashMetrics,\n        manifestModel,\n        dashManifestModel,\n        adapter,\n        videoModel,\n        currentTime,\n        liveStartTime,\n        wallclockTimeIntervalId,\n        commonEarliestTime,\n        liveDelay,\n        bufferedRange,\n        streamInfo,\n        isDynamic,\n        mediaPlayerModel,\n        playOnceInitialized,\n        lastLivePlaybackTime,\n        originalPlaybackRate,\n        availabilityStartTime,\n        compatibleWithPreviousStream;\n\n    let catchUpPlaybackRate = DEFAULT_CATCHUP_PLAYBACK_RATE;\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n        reset();\n    }\n\n    function initialize(StreamInfo, compatible) {\n        streamInfo = StreamInfo;\n        addAllListeners();\n        isDynamic = streamInfo.manifestInfo.isDynamic;\n        liveStartTime = streamInfo.start;\n        compatibleWithPreviousStream = compatible;\n        eventBus.on(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n        eventBus.on(Events.BYTES_APPENDED_END_FRAGMENT, onBytesAppended, this);\n        eventBus.on(Events.BUFFER_LEVEL_STATE_CHANGED, onBufferLevelStateChanged, this);\n        eventBus.on(Events.PERIOD_SWITCH_STARTED, onPeriodSwitchStarted, this);\n        eventBus.on(Events.PLAYBACK_PROGRESS, onPlaybackProgression, this);\n        eventBus.on(Events.PLAYBACK_TIME_UPDATED, onPlaybackProgression, this);\n        eventBus.on(Events.PLAYBACK_ENDED, onPlaybackEnded, this);\n\n        if (playOnceInitialized) {\n            playOnceInitialized = false;\n            play();\n        }\n    }\n\n    function onPeriodSwitchStarted(e) {\n        if (!isDynamic && e.fromStreamInfo && commonEarliestTime[e.fromStreamInfo.id] !== undefined) {\n            delete bufferedRange[e.fromStreamInfo.id];\n            delete commonEarliestTime[e.fromStreamInfo.id];\n        }\n    }\n\n    function getTimeToStreamEnd() {\n        return parseFloat(( getStreamEndTime() - getTime()).toFixed(5));\n    }\n\n    function getStreamEndTime() {\n        const startTime = getStreamStartTime(true);\n        const offset = isDynamic ? startTime - streamInfo.start : 0;\n        return startTime + (streamInfo.duration - offset);\n    }\n\n    function play() {\n        if (streamInfo && videoModel && videoModel.getElement()) {\n            videoModel.play();\n        } else {\n            playOnceInitialized = true;\n        }\n    }\n\n    function isPaused() {\n        return streamInfo && videoModel ? videoModel.isPaused() : null;\n    }\n\n    function pause() {\n        if (streamInfo && videoModel) {\n            videoModel.pause();\n        }\n    }\n\n    function isSeeking() {\n        return streamInfo && videoModel ? videoModel.isSeeking() : null;\n    }\n\n    function seek(time, stickToBuffered, internalSeek) {\n        if (streamInfo && videoModel) {\n            if (internalSeek === true) {\n                if (time !== videoModel.getTime()) {\n                    // Internal seek = seek video model only (disable 'seeking' listener),\n                    // buffer(s) are already appended at given time (see onBytesAppended())\n                    videoModel.removeEventListener('seeking', onPlaybackSeeking);\n                    logger.info('Requesting seek to time: ' + time);\n                    videoModel.setCurrentTime(time, stickToBuffered);\n                }\n            } else {\n                eventBus.trigger(Events.PLAYBACK_SEEK_ASKED);\n                logger.info('Requesting seek to time: ' + time);\n                videoModel.setCurrentTime(time, stickToBuffered);\n            }\n        }\n    }\n\n    function getTime() {\n        return streamInfo && videoModel ? videoModel.getTime() : null;\n    }\n\n    function getPlaybackRate() {\n        return streamInfo && videoModel ? videoModel.getPlaybackRate() : null;\n    }\n\n    function getPlayedRanges() {\n        return streamInfo && videoModel ? videoModel.getPlayedRanges() : null;\n    }\n\n    function getEnded() {\n        return streamInfo && videoModel ? videoModel.getEnded() : null;\n    }\n\n    function getIsDynamic() {\n        return isDynamic;\n    }\n\n    function getStreamController() {\n        return streamController;\n    }\n\n    function setLiveStartTime(value) {\n        liveStartTime = value;\n    }\n\n    function getLiveStartTime() {\n        return liveStartTime;\n    }\n\n    function setCatchUpPlaybackRate(value) {\n        catchUpPlaybackRate = value;\n\n        // If value == 0.0, deactivate catchup mechanism\n        if (value === 0.0 && getPlaybackRate() > 1.0) {\n            stopPlaybackCatchUp();\n        }\n    }\n\n    function getCatchUpPlaybackRate() {\n        return catchUpPlaybackRate;\n    }\n\n    /**\n     * Computes the desirable delay for the live edge to avoid a risk of getting 404 when playing at the bleeding edge\n     * @param {number} fragmentDuration - seconds?\n     * @param {number} dvrWindowSize - seconds?\n     * @returns {number} object\n     * @memberof PlaybackController#\n     */\n    function computeLiveDelay(fragmentDuration, dvrWindowSize) {\n        const mpd = dashManifestModel.getMpd(manifestModel.getValue());\n\n        let delay;\n        let ret;\n        const END_OF_PLAYLIST_PADDING = 10;\n\n        if (mediaPlayerModel.getUseSuggestedPresentationDelay() && mpd.hasOwnProperty(Constants.SUGGESTED_PRESENTATION_DELAY)) {\n            delay = mpd.suggestedPresentationDelay;\n        } else if (mediaPlayerModel.getLowLatencyEnabled()) {\n            delay = 0;\n        } else if (mediaPlayerModel.getLiveDelay()) {\n            delay = mediaPlayerModel.getLiveDelay(); // If set by user, this value takes precedence\n        } else if (!isNaN(fragmentDuration)) {\n            delay = fragmentDuration * mediaPlayerModel.getLiveDelayFragmentCount();\n        } else {\n            delay = streamInfo.manifestInfo.minBufferTime * 2;\n        }\n\n        if (mpd.availabilityStartTime) {\n            availabilityStartTime = mpd.availabilityStartTime.getTime();\n        }\n\n        if (dvrWindowSize > 0) {\n            // cap target latency to:\n            // - dvrWindowSize / 2 for short playlists\n            // - dvrWindowSize - END_OF_PLAYLIST_PADDING for longer playlists\n            const targetDelayCapping = Math.max(dvrWindowSize - END_OF_PLAYLIST_PADDING, dvrWindowSize / 2);\n            ret = Math.min(delay, targetDelayCapping);\n        } else {\n            ret = delay;\n        }\n        liveDelay = ret;\n        return ret;\n    }\n\n    function getLiveDelay() {\n        return liveDelay;\n    }\n\n    function getCurrentLiveLatency() {\n        if (!isDynamic || isNaN(availabilityStartTime)) {\n            return NaN;\n        }\n        const currentTime = getTime();\n        if (isNaN(currentTime) || currentTime === 0) {\n            return 0;\n        }\n\n        return ((Math.round(new Date().getTime() - (currentTime * 1000 + availabilityStartTime))) / 1000).toFixed(3);\n    }\n\n    function startPlaybackCatchUp() {\n        if (videoModel) {\n            const playbackRate = 1 + getCatchUpPlaybackRate();\n            const currentRate = getPlaybackRate();\n            if (playbackRate !== currentRate) {\n                logger.info('Starting live catchup mechanism. Setting playback rate to', playbackRate);\n                originalPlaybackRate = currentRate;\n                videoModel.getElement().playbackRate = playbackRate;\n\n                eventBus.trigger(Events.PLAYBACK_CATCHUP_START, { sender: instance });\n            }\n        }\n    }\n\n    function stopPlaybackCatchUp() {\n        if (videoModel) {\n            const playbackRate = originalPlaybackRate || 1;\n            if (playbackRate !== getPlaybackRate()) {\n                logger.info('Stopping live catchup mechanism. Setting playback rate to', playbackRate);\n                videoModel.getElement().playbackRate = playbackRate;\n\n                eventBus.trigger(Events.PLAYBACK_CATCHUP_END, { sender: instance });\n            }\n        }\n    }\n\n    function reset() {\n        currentTime = 0;\n        liveStartTime = NaN;\n        playOnceInitialized = false;\n        commonEarliestTime = {};\n        liveDelay = 0;\n        availabilityStartTime = 0;\n        catchUpPlaybackRate = DEFAULT_CATCHUP_PLAYBACK_RATE;\n        bufferedRange = {};\n        if (videoModel) {\n            eventBus.off(Events.DATA_UPDATE_COMPLETED, onDataUpdateCompleted, this);\n            eventBus.off(Events.BUFFER_LEVEL_STATE_CHANGED, onBufferLevelStateChanged, this);\n            eventBus.off(Events.BYTES_APPENDED_END_FRAGMENT, onBytesAppended, this);\n            eventBus.off(Events.PERIOD_SWITCH_STARTED, onPeriodSwitchStarted, this);\n            eventBus.off(Events.PLAYBACK_PROGRESS, onPlaybackProgression, this);\n            eventBus.off(Events.PLAYBACK_TIME_UPDATED, onPlaybackProgression, this);\n            eventBus.off(Events.PLAYBACK_ENDED, onPlaybackEnded, this);\n            stopUpdatingWallclockTime();\n            removeAllListeners();\n        }\n        wallclockTimeIntervalId = null;\n        videoModel = null;\n        streamInfo = null;\n        isDynamic = null;\n    }\n\n    function setConfig(config) {\n        if (!config) return;\n\n        if (config.streamController) {\n            streamController = config.streamController;\n        }\n        if (config.metricsModel) {\n            metricsModel = config.metricsModel;\n        }\n        if (config.dashMetrics) {\n            dashMetrics = config.dashMetrics;\n        }\n        if (config.manifestModel) {\n            manifestModel = config.manifestModel;\n        }\n        if (config.dashManifestModel) {\n            dashManifestModel = config.dashManifestModel;\n        }\n        if (config.mediaPlayerModel) {\n            mediaPlayerModel = config.mediaPlayerModel;\n        }\n        if (config.adapter) {\n            adapter = config.adapter;\n        }\n        if (config.videoModel) {\n            videoModel = config.videoModel;\n        }\n    }\n\n    function getStartTimeFromUriParameters() {\n        const fragData = URIFragmentModel(context).getInstance().getURIFragmentData();\n        let uriParameters;\n        if (fragData) {\n            uriParameters = {};\n            const r = parseInt(fragData.r, 10);\n            if (r >= 0 && streamInfo && r < streamInfo.manifestInfo.DVRWindowSize && fragData.t === null) {\n                fragData.t = Math.floor(Date.now() / 1000) - streamInfo.manifestInfo.DVRWindowSize + r;\n            }\n            uriParameters.fragS = parseFloat(fragData.s);\n            uriParameters.fragT = parseFloat(fragData.t);\n        }\n        return uriParameters;\n    }\n\n    /**\n     * @param {boolean} ignoreStartOffset - ignore URL fragment start offset if true\n     * @param {number} liveEdge - liveEdge value\n     * @returns {number} object\n     * @memberof PlaybackController#\n     */\n    function getStreamStartTime(ignoreStartOffset, liveEdge) {\n        let presentationStartTime;\n        let startTimeOffset = NaN;\n        const uriParameters = getStartTimeFromUriParameters();\n\n        if (uriParameters) {\n            if (!ignoreStartOffset) {\n                startTimeOffset = !isNaN(uriParameters.fragS) ? uriParameters.fragS : uriParameters.fragT;\n            } else {\n                startTimeOffset = streamInfo.start;\n            }\n        } else {\n            // handle case where no media fragments are parsed from the manifest URL\n            startTimeOffset = 0;\n        }\n\n        if (isDynamic) {\n            if (!isNaN(startTimeOffset)) {\n                presentationStartTime = startTimeOffset - (streamInfo.manifestInfo.availableFrom.getTime() / 1000);\n\n                if (presentationStartTime > liveStartTime ||\n                    presentationStartTime < (!isNaN(liveEdge) ? (liveEdge - streamInfo.manifestInfo.DVRWindowSize) : NaN)) {\n                    presentationStartTime = null;\n                }\n            }\n            presentationStartTime = presentationStartTime || liveStartTime;\n\n        } else {\n            if (!isNaN(startTimeOffset) && startTimeOffset < Math.max(streamInfo.manifestInfo.duration, streamInfo.duration) && startTimeOffset >= 0) {\n                presentationStartTime = startTimeOffset;\n            } else {\n                let earliestTime = commonEarliestTime[streamInfo.id]; //set by ready bufferStart after first onBytesAppended\n                presentationStartTime = earliestTime !== undefined ? Math.max(earliestTime.audio !== undefined ? earliestTime.audio : 0, earliestTime.video !== undefined ? earliestTime.video : 0, streamInfo.start) : streamInfo.start;\n            }\n        }\n\n        return presentationStartTime;\n    }\n\n    function getActualPresentationTime(currentTime) {\n        const metrics = metricsModel.getReadOnlyMetricsFor(Constants.VIDEO) || metricsModel.getReadOnlyMetricsFor(Constants.AUDIO);\n        const DVRMetrics = dashMetrics.getCurrentDVRInfo(metrics);\n        const DVRWindow = DVRMetrics ? DVRMetrics.range : null;\n        let actualTime;\n\n        if (!DVRWindow) return NaN;\n        if (currentTime > DVRWindow.end) {\n            actualTime = Math.max(DVRWindow.end - streamInfo.manifestInfo.minBufferTime * 2, DVRWindow.start);\n        } else if (currentTime + 0.250 < DVRWindow.start) {\n            // Checking currentTime plus 250ms as the 'timeupdate' is fired with a frequency between 4Hz and 66Hz\n            // https://developer.mozilla.org/en-US/docs/Web/Events/timeupdate\n            // http://w3c.github.io/html/single-page.html#offsets-into-the-media-resource\n            actualTime = DVRWindow.start;\n        } else {\n            return currentTime;\n        }\n\n        return actualTime;\n    }\n\n    function startUpdatingWallclockTime() {\n        if (wallclockTimeIntervalId !== null) return;\n\n        const tick = function () {\n            onWallclockTime();\n        };\n\n        wallclockTimeIntervalId = setInterval(tick, mediaPlayerModel.getWallclockTimeUpdateInterval());\n    }\n\n    function stopUpdatingWallclockTime() {\n        clearInterval(wallclockTimeIntervalId);\n        wallclockTimeIntervalId = null;\n    }\n\n    function updateCurrentTime() {\n        if (isPaused() || !isDynamic || videoModel.getReadyState() === 0) return;\n        const currentTime = getTime();\n        const actualTime = getActualPresentationTime(currentTime);\n        const timeChanged = (!isNaN(actualTime) && actualTime !== currentTime);\n        if (timeChanged) {\n            seek(actualTime);\n        }\n    }\n\n    function onDataUpdateCompleted(e) {\n        if (e.error) return;\n\n        const representationInfo = adapter.convertDataToRepresentationInfo(e.currentRepresentation);\n        const info = representationInfo.mediaInfo.streamInfo;\n\n        if (streamInfo.id !== info.id) return;\n        streamInfo = info;\n\n        updateCurrentTime();\n    }\n\n    function onCanPlay() {\n        eventBus.trigger(Events.CAN_PLAY);\n    }\n\n    function onPlaybackStart() {\n        logger.info('Native video element event: play');\n        updateCurrentTime();\n        startUpdatingWallclockTime();\n        eventBus.trigger(Events.PLAYBACK_STARTED, {\n            startTime: getTime()\n        });\n    }\n\n    function onPlaybackWaiting() {\n        logger.info('Native video element event: waiting');\n        eventBus.trigger(Events.PLAYBACK_WAITING, {\n            playingTime: getTime()\n        });\n    }\n\n    function onPlaybackPlaying() {\n        logger.info('Native video element event: playing');\n        eventBus.trigger(Events.PLAYBACK_PLAYING, {\n            playingTime: getTime()\n        });\n    }\n\n    function onPlaybackPaused() {\n        logger.info('Native video element event: pause');\n        eventBus.trigger(Events.PLAYBACK_PAUSED, {\n            ended: getEnded()\n        });\n    }\n\n    function onPlaybackSeeking() {\n        const seekTime = getTime();\n        logger.info('Seeking to: ' + seekTime);\n        startUpdatingWallclockTime();\n        eventBus.trigger(Events.PLAYBACK_SEEKING, {\n            seekTime: seekTime\n        });\n    }\n\n    function onPlaybackSeeked() {\n        logger.info('Native video element event: seeked');\n        eventBus.trigger(Events.PLAYBACK_SEEKED);\n        // Reactivate 'seeking' event listener (see seek())\n        videoModel.addEventListener('seeking', onPlaybackSeeking);\n    }\n\n    function onPlaybackTimeUpdated() {\n        const time = getTime();\n        currentTime = time;\n        eventBus.trigger(Events.PLAYBACK_TIME_UPDATED, {\n            timeToEnd: getTimeToStreamEnd(),\n            time: time\n        });\n    }\n\n    function updateLivePlaybackTime() {\n        const now = Date.now();\n        if (!lastLivePlaybackTime || now > lastLivePlaybackTime + LIVE_UPDATE_PLAYBACK_TIME_INTERVAL_MS) {\n            lastLivePlaybackTime = now;\n            onPlaybackTimeUpdated();\n        }\n    }\n\n    function onPlaybackProgress() {\n        eventBus.trigger(Events.PLAYBACK_PROGRESS);\n    }\n\n    function onPlaybackRateChanged() {\n        const rate = getPlaybackRate();\n        logger.info('Native video element event: ratechange: ', rate);\n        eventBus.trigger(Events.PLAYBACK_RATE_CHANGED, {\n            playbackRate: rate\n        });\n    }\n\n    function onPlaybackMetaDataLoaded() {\n        logger.info('Native video element event: loadedmetadata');\n        eventBus.trigger(Events.PLAYBACK_METADATA_LOADED);\n        startUpdatingWallclockTime();\n    }\n\n    // Event to handle the native video element ended event\n    function onNativePlaybackEnded() {\n        logger.info('Native video element event: ended');\n        pause();\n        stopUpdatingWallclockTime();\n        eventBus.trigger(Events.PLAYBACK_ENDED, {'isLast': streamController.getActiveStreamInfo().isLast});\n    }\n\n    // Handle DASH PLAYBACK_ENDED event\n    function onPlaybackEnded(e) {\n        if (wallclockTimeIntervalId && e.isLast) {\n            // PLAYBACK_ENDED was triggered elsewhere, react.\n            logger.info('[PlaybackController] onPlaybackEnded -- PLAYBACK_ENDED but native video element didn\\'t fire ended');\n            videoModel.setCurrentTime(getStreamEndTime());\n            pause();\n            stopUpdatingWallclockTime();\n        }\n    }\n\n    function onPlaybackError(event) {\n        const target = event.target || event.srcElement;\n        eventBus.trigger(Events.PLAYBACK_ERROR, {\n            error: target.error\n        });\n    }\n\n    function onWallclockTime() {\n        eventBus.trigger(Events.WALLCLOCK_TIME_UPDATED, {\n            isDynamic: isDynamic,\n            time: new Date()\n        });\n\n        // Updates playback time for paused dynamic streams\n        // (video element doesn't call timeupdate when the playback is paused)\n        if (getIsDynamic() && isPaused()) {\n            updateLivePlaybackTime();\n        }\n    }\n\n    function checkTimeInRanges(time, ranges) {\n        if (ranges && ranges.length > 0) {\n            for (let i = 0, len = ranges.length; i < len; i++) {\n                if (time >= ranges.start(i) && time < ranges.end(i)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    function onPlaybackProgression() {\n        if (isDynamic && mediaPlayerModel.getLowLatencyEnabled() && getCatchUpPlaybackRate() > 0.0) {\n            if (!isCatchingUp() && needToCatchUp()) {\n                startPlaybackCatchUp();\n            } else if (stopCatchingUp()) {\n                stopPlaybackCatchUp();\n            }\n        }\n    }\n\n    function needToCatchUp() {\n        return getCurrentLiveLatency() > (mediaPlayerModel.getLiveDelay() * (1 + LIVE_CATCHUP_START_THRESHOLD));\n    }\n\n    function stopCatchingUp() {\n        return getCurrentLiveLatency() <= (mediaPlayerModel.getLiveDelay() );\n    }\n\n    function isCatchingUp() {\n        return getCatchUpPlaybackRate() + 1 === getPlaybackRate();\n    }\n\n    function onBytesAppended(e) {\n        let earliestTime,\n            initialStartTime;\n        let ranges = e.bufferedRanges;\n        if (!ranges || !ranges.length) return;\n        if (commonEarliestTime[streamInfo.id] && commonEarliestTime[streamInfo.id].started === true) {\n            //stream has already been started.\n            return;\n        }\n\n        const type = e.sender.getType();\n\n        if (bufferedRange[streamInfo.id] === undefined) {\n            bufferedRange[streamInfo.id] = [];\n        }\n\n        bufferedRange[streamInfo.id][type] = ranges;\n\n        if (commonEarliestTime[streamInfo.id] === undefined) {\n            commonEarliestTime[streamInfo.id] = [];\n            commonEarliestTime[streamInfo.id].started = false;\n        }\n\n        if (commonEarliestTime[streamInfo.id][type] === undefined) {\n            commonEarliestTime[streamInfo.id][type] = Math.max(ranges.start(0), streamInfo.start);\n        }\n\n        const hasVideoTrack = streamController.isVideoTrackPresent();\n        const hasAudioTrack = streamController.isAudioTrackPresent();\n\n        initialStartTime = getStreamStartTime(false);\n        if (hasAudioTrack && hasVideoTrack) {\n            //current stream has audio and video contents\n            if (!isNaN(commonEarliestTime[streamInfo.id].audio) && !isNaN(commonEarliestTime[streamInfo.id].video)) {\n\n                if (commonEarliestTime[streamInfo.id].audio < commonEarliestTime[streamInfo.id].video) {\n                    // common earliest is video time\n                    // check buffered audio range has video time, if ok, we seek, otherwise, we wait some other data\n                    earliestTime = commonEarliestTime[streamInfo.id].video > initialStartTime ? commonEarliestTime[streamInfo.id].video : initialStartTime;\n                    ranges = bufferedRange[streamInfo.id].audio;\n                } else {\n                    // common earliest is audio time\n                    // check buffered video range has audio time, if ok, we seek, otherwise, we wait some other data\n                    earliestTime = commonEarliestTime[streamInfo.id].audio > initialStartTime ? commonEarliestTime[streamInfo.id].audio : initialStartTime;\n                    ranges = bufferedRange[streamInfo.id].video;\n                }\n                if (checkTimeInRanges(earliestTime, ranges)) {\n                    if (!isSeeking() && !compatibleWithPreviousStream && earliestTime !== 0) {\n                        seek(earliestTime, true, true);\n                    }\n                    commonEarliestTime[streamInfo.id].started = true;\n                }\n            }\n        } else {\n            //current stream has only audio or only video content\n            if (commonEarliestTime[streamInfo.id][type]) {\n                earliestTime = commonEarliestTime[streamInfo.id][type] > initialStartTime ? commonEarliestTime[streamInfo.id][type] : initialStartTime;\n                if (!isSeeking() && !compatibleWithPreviousStream) {\n                    seek(earliestTime, false, true);\n                }\n                commonEarliestTime[streamInfo.id].started = true;\n            }\n        }\n    }\n\n    function onBufferLevelStateChanged(e) {\n        // do not stall playback when get an event from Stream that is not active\n        if (e.streamInfo.id !== streamInfo.id) return;\n        videoModel.setStallState(e.mediaType, e.state === BufferController.BUFFER_EMPTY);\n    }\n\n    function onPlaybackStalled(e) {\n        eventBus.trigger(Events.PLAYBACK_STALLED, {\n            e: e\n        });\n    }\n\n    function addAllListeners() {\n        videoModel.addEventListener('canplay', onCanPlay);\n        videoModel.addEventListener('play', onPlaybackStart);\n        videoModel.addEventListener('waiting', onPlaybackWaiting);\n        videoModel.addEventListener('playing', onPlaybackPlaying);\n        videoModel.addEventListener('pause', onPlaybackPaused);\n        videoModel.addEventListener('error', onPlaybackError);\n        videoModel.addEventListener('seeking', onPlaybackSeeking);\n        videoModel.addEventListener('seeked', onPlaybackSeeked);\n        videoModel.addEventListener('timeupdate', onPlaybackTimeUpdated);\n        videoModel.addEventListener('progress', onPlaybackProgress);\n        videoModel.addEventListener('ratechange', onPlaybackRateChanged);\n        videoModel.addEventListener('loadedmetadata', onPlaybackMetaDataLoaded);\n        videoModel.addEventListener('stalled', onPlaybackStalled);\n        videoModel.addEventListener('ended', onNativePlaybackEnded);\n    }\n\n    function removeAllListeners() {\n        videoModel.removeEventListener('canplay', onCanPlay);\n        videoModel.removeEventListener('play', onPlaybackStart);\n        videoModel.removeEventListener('waiting', onPlaybackWaiting);\n        videoModel.removeEventListener('playing', onPlaybackPlaying);\n        videoModel.removeEventListener('pause', onPlaybackPaused);\n        videoModel.removeEventListener('error', onPlaybackError);\n        videoModel.removeEventListener('seeking', onPlaybackSeeking);\n        videoModel.removeEventListener('seeked', onPlaybackSeeked);\n        videoModel.removeEventListener('timeupdate', onPlaybackTimeUpdated);\n        videoModel.removeEventListener('progress', onPlaybackProgress);\n        videoModel.removeEventListener('ratechange', onPlaybackRateChanged);\n        videoModel.removeEventListener('loadedmetadata', onPlaybackMetaDataLoaded);\n        videoModel.removeEventListener('stalled', onPlaybackStalled);\n        videoModel.removeEventListener('ended', onNativePlaybackEnded);\n    }\n\n    instance = {\n        initialize: initialize,\n        setConfig: setConfig,\n        getStartTimeFromUriParameters: getStartTimeFromUriParameters,\n        getStreamStartTime: getStreamStartTime,\n        getTimeToStreamEnd: getTimeToStreamEnd,\n        getTime: getTime,\n        getPlaybackRate: getPlaybackRate,\n        getPlayedRanges: getPlayedRanges,\n        getEnded: getEnded,\n        getIsDynamic: getIsDynamic,\n        getStreamController: getStreamController,\n        setCatchUpPlaybackRate: setCatchUpPlaybackRate,\n        setLiveStartTime: setLiveStartTime,\n        getLiveStartTime: getLiveStartTime,\n        computeLiveDelay: computeLiveDelay,\n        getLiveDelay: getLiveDelay,\n        getCurrentLiveLatency: getCurrentLiveLatency,\n        play: play,\n        isPaused: isPaused,\n        pause: pause,\n        isSeeking: isSeeking,\n        seek: seek,\n        reset: reset\n    };\n\n    setup();\n\n    return instance;\n}\n\nPlaybackController.__dashjs_factory_name = 'PlaybackController';\nexport default FactoryMaker.getSingletonFactory(PlaybackController);\n"]}