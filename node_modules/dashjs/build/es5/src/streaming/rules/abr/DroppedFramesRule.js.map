{"version":3,"sources":["../../../../../../src/streaming/rules/abr/DroppedFramesRule.js"],"names":[],"mappings":"2LACyB,4BAA4B,8FAC3B,kBAAkB,oFAC1B,qBAAqB,qDAEvC,SAAS,iBAAiB,EAAG,CAEzB,IAAM,OAAO,CAAG,IAAI,CAAC,OAAO,CAAC,AAC7B,IAAI,QAAQ,UAAA,CACR,MAAM,UAAA,CAAC,AAEX,IAAM,yBAAyB,CAAG,IAAI,CAAC,AACvC,IAAM,gBAAgB,CAAG,GAAG,CAAC;AAE7B,SAAS,KAAK,EAAG,CACb,MAAM,GAAG,2BAAM,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAC7D,AAED,SAAS,WAAW,CAAC,YAAY,CAAE,CAC/B,IAAM,oBAAoB,CAAG,YAAY,CAAC,uBAAuB,EAAE,CAAC,AACpE,GAAI,oBAAoB,CAAE,CACtB,IAAM,GAAG,CAAG,oBAAoB,CAAC,eAAe,EAAE,CAAC,AACnD,IAAI,aAAa,CAAG,CAAC,CAAC,AACtB,IAAI,WAAW,CAAG,CAAC,CAAC,AACpB,IAAI,QAAQ,CAAG,2BAAc,SAAS,CAAC,AACvC,IAAK,IAAI,CAAC,CAAG,CAAC,CAAE,CAAC,GAAG,GAAG,CAAC,MAAM,CAAE,CAAC,EAAE,EAAE;AACjC,GAAI,GAAG,CAAC,CAAC,CAAC,CAAE,CACR,aAAa,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,AAC1C,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,AAEtC,GAAI,WAAW,GAAG,gBAAgB,IAAI,aAAa,GAAG,WAAW,GAAG,yBAAyB,CAAE,CAC3F,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,AACjB,MAAM,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,GAAG,mBAAmB,GAAG,aAAa,GAAG,iBAAiB,GAAG,WAAW,CAAC,CAAC,AAC3G,MAAM,CACT,CACJ,CACJ,AACD,OAAO,+BAAc,OAAO,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAE,CAAC,aAAa,CAAE,aAAa,CAAC,CAAC,CAAC,CAClF,AAED,OAAO,+BAAc,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC,CAC1C,AAED,QAAQ,GAAG,CACP,WAAW,CAAE,WAAW,CAC3B,CAAC,AAEF,KAAK,EAAE,CAAC,AAER,OAAO,QAAQ,CAAC,CACnB,AAED,iBAAiB,CAAC,qBAAqB,GAAG,mBAAmB,CAAC,qBAC/C,8BAAa,eAAe,CAAC,iBAAiB,CAAC","file":"DroppedFramesRule.js","sourcesContent":["\nimport FactoryMaker from '../../../core/FactoryMaker';\nimport SwitchRequest from '../SwitchRequest';\nimport Debug from '../../../core/Debug';\n\nfunction DroppedFramesRule() {\n\n    const context = this.context;\n    let instance,\n        logger;\n\n    const DROPPED_PERCENTAGE_FORBID = 0.15;\n    const GOOD_SAMPLE_SIZE = 375; //Don't apply the rule until this many frames have been rendered(and counted under those indices).\n\n    function setup() {\n        logger = Debug(context).getInstance().getLogger(instance);\n    }\n\n    function getMaxIndex(rulesContext) {\n        const droppedFramesHistory = rulesContext.getDroppedFramesHistory();\n        if (droppedFramesHistory) {\n            const dfh = droppedFramesHistory.getFrameHistory();\n            let droppedFrames = 0;\n            let totalFrames = 0;\n            let maxIndex = SwitchRequest.NO_CHANGE;\n            for (let i = 1; i < dfh.length; i++) { //No point in measuring dropped frames for the zeroeth index.\n                if (dfh[i]) {\n                    droppedFrames = dfh[i].droppedVideoFrames;\n                    totalFrames = dfh[i].totalVideoFrames;\n\n                    if (totalFrames > GOOD_SAMPLE_SIZE && droppedFrames / totalFrames > DROPPED_PERCENTAGE_FORBID) {\n                        maxIndex = i - 1;\n                        logger.debug('index: ' + maxIndex + ' Dropped Frames: ' + droppedFrames + ' Total Frames: ' + totalFrames);\n                        break;\n                    }\n                }\n            }\n            return SwitchRequest(context).create(maxIndex, {droppedFrames: droppedFrames});\n        }\n\n        return SwitchRequest(context).create();\n    }\n\n    instance = {\n        getMaxIndex: getMaxIndex\n    };\n\n    setup();\n\n    return instance;\n}\n\nDroppedFramesRule.__dashjs_factory_name = 'DroppedFramesRule';\nexport default FactoryMaker.getClassFactory(DroppedFramesRule);"]}