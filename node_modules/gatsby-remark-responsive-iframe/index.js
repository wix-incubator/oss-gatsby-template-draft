"use strict";

var visit = require("unist-util-visit");
var cheerio = require("cheerio");
var Promise = require("bluebird");
var _ = require("lodash");

module.exports = function (_ref) {
  var markdownAST = _ref.markdownAST;
  var pluginOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return new Promise(function (resolve) {
    var defaults = {
      wrapperStyle: ""
    };
    var options = _.defaults(pluginOptions, defaults);
    visit(markdownAST, "html", function (node) {
      var $ = cheerio.load(node.value);
      var iframe = $("iframe, object");
      if (iframe) {
        var width = iframe.attr("width");
        var height = iframe.attr("height");
        var src = iframe.attr("src");
        if (width && height) {
          $("iframe, object").attr("style", "\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          ");
          $("iframe, object").attr("width", null).attr("height", null);
          var newIframe = $.html();

          // TODO add youtube preview image as background-image.

          var rawHTML = "\n          <div\n            class=\"gatsby-resp-iframe-wrapper\"\n            style=\"padding-bottom: " + height / width * 100 + "%; position: relative; height: 0; overflow: hidden;" + options.wrapperStyle + "\"\n          >\n            " + newIframe + "\n          </div>\n          ";

          node.data = {
            hChildren: [{ type: "raw", value: rawHTML }]
            // Set type to unknown so mdast-util-to-hast will treat this node as a
            // div not an iframe â€” it gets quite confused otherwise.
          };node.type = "unknown";

          // Also apparently, for html node types, you have to delete the value
          // in order for mdast-util-to-hast to use hChildren. If even if
          // you change the node type to unknown...
          delete node.value;
        }
      }
    });

    return resolve(markdownAST);
  });
};