"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var player_api_decorator_1 = tslib_1.__importDefault(require("../../../../core/player-api-decorator"));
var keyboard_interceptor_1 = tslib_1.__importStar(require("../../../../utils/keyboard-interceptor"));
var constants_1 = require("../../../../constants");
var logo_view_1 = tslib_1.__importDefault(require("./logo.view"));
var Logo = /** @class */ (function () {
    function Logo(_a) {
        var eventEmitter = _a.eventEmitter, config = _a.config, textMap = _a.textMap, tooltipService = _a.tooltipService;
        this._eventEmitter = eventEmitter;
        this._textMap = textMap;
        this._tooltipService = tooltipService;
        this._bindCallbacks();
        this._initUI();
        this._initInterceptor();
        var logoConfig = tslib_1.__assign({}, (typeof config.logo === 'object' ? config.logo : {}));
        this.setLogo(logoConfig.src);
        this.setLogoClickCallback(logoConfig.callback);
    }
    Object.defineProperty(Logo.prototype, "node", {
        get: function () {
            return this.view.getNode();
        },
        enumerable: true,
        configurable: true
    });
    Logo.prototype._bindCallbacks = function () {
        this._triggerCallback = this._triggerCallback.bind(this);
    };
    Logo.prototype._initUI = function () {
        var config = {
            callbacks: {
                onLogoClick: this._triggerCallback,
            },
            textMap: this._textMap,
            tooltipService: this._tooltipService,
        };
        this.view = new Logo.View(config);
    };
    Logo.prototype._initInterceptor = function () {
        var _this = this;
        var _a;
        this._interceptor = new keyboard_interceptor_1.default(this.node, (_a = {},
            _a[keyboard_interceptor_1.KEYCODES.SPACE_BAR] = function (e) {
                e.stopPropagation();
                _this._eventEmitter.emit(constants_1.UI_EVENTS.KEYBOARD_KEYDOWN_INTERCEPTED);
                _this._triggerCallback();
            },
            _a[keyboard_interceptor_1.KEYCODES.ENTER] = function (e) {
                e.stopPropagation();
                _this._eventEmitter.emit(constants_1.UI_EVENTS.KEYBOARD_KEYDOWN_INTERCEPTED);
                _this._triggerCallback();
            },
            _a));
    };
    Logo.prototype._destroyInterceptor = function () {
        this._interceptor.destroy();
    };
    Logo.prototype._triggerCallback = function () {
        if (this._callback) {
            this._callback();
        }
    };
    /**
     * Method for setting source of image, that would be used as logo
     * @param src - Source of logo
     * @example
     * player.setLogo('https://example.com/logo.png');
     *
     */
    Logo.prototype.setLogo = function (src) {
        this.view.setLogo(src);
    };
    /**
     * Method for attaching callback for click on logo
     *
     * @param callback - Your function
     *
     * @example
     * const callback = () => {
     *   console.log('Click on title);
     * }
     * player.setLogoClickCallback(callback);
     *
     */
    Logo.prototype.setLogoClickCallback = function (callback) {
        this._callback = callback;
        this.view.setDisplayAsLink(Boolean(this._callback));
    };
    Logo.prototype.hide = function () {
        this.isHidden = true;
        this.view.hide();
    };
    Logo.prototype.show = function () {
        this.isHidden = false;
        this.view.show();
    };
    Logo.prototype.destroy = function () {
        this._destroyInterceptor();
        this.view.destroy();
        this.view = null;
        this._eventEmitter = null;
        this._textMap = null;
    };
    Logo.moduleName = 'logo';
    Logo.View = logo_view_1.default;
    Logo.dependencies = ['config', 'eventEmitter', 'textMap', 'tooltipService'];
    tslib_1.__decorate([
        player_api_decorator_1.default()
    ], Logo.prototype, "setLogo", null);
    tslib_1.__decorate([
        player_api_decorator_1.default()
    ], Logo.prototype, "setLogoClickCallback", null);
    return Logo;
}());
exports.default = Logo;
//# sourceMappingURL=logo.js.map