"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var view_1 = tslib_1.__importDefault(require("../core/view"));
var templates_1 = require("./templates");
var htmlToElement_1 = tslib_1.__importDefault(require("../core/htmlToElement"));
var getElementByHook_1 = tslib_1.__importDefault(require("../core/getElementByHook"));
var overlay_theme_1 = tslib_1.__importDefault(require("./overlay.theme"));
var overlay_scss_1 = tslib_1.__importDefault(require("./overlay.scss"));
var OverlayView = /** @class */ (function (_super) {
    tslib_1.__extends(OverlayView, _super);
    function OverlayView(config) {
        var _this = _super.call(this, config.theme) || this;
        var callbacks = config.callbacks, src = config.src;
        _this._callbacks = callbacks;
        _this._initDOM();
        _this._bindEvents();
        _this.setPoster(src);
        return _this;
    }
    OverlayView.prototype._initDOM = function () {
        this._$node = htmlToElement_1.default(templates_1.overlayTemplate({
            styles: this.styleNames,
            themeStyles: this.themeStyles,
        }));
        this._$content = getElementByHook_1.default(this._$node, 'overlay-content');
        this._$playButton = getElementByHook_1.default(this._$node, 'overlay-play-button');
    };
    OverlayView.prototype._bindEvents = function () {
        this._$playButton.addEventListener('click', this._callbacks.onPlayClick);
    };
    OverlayView.prototype._unbindEvents = function () {
        this._$playButton.removeEventListener('click', this._callbacks.onPlayClick);
    };
    OverlayView.prototype.getNode = function () {
        return this._$node;
    };
    OverlayView.prototype.hideContent = function () {
        this._$node.classList.remove(this.styleNames.active);
    };
    OverlayView.prototype.showContent = function () {
        this._$node.classList.add(this.styleNames.active);
    };
    OverlayView.prototype.hide = function () {
        this._$node.classList.add(this.styleNames.hidden);
    };
    OverlayView.prototype.show = function () {
        this._$node.classList.remove(this.styleNames.hidden);
    };
    OverlayView.prototype.setPoster = function (src) {
        this._$content.style.backgroundImage = src ? "url('" + src + "')" : 'none';
    };
    OverlayView.prototype.destroy = function () {
        this._unbindEvents();
        if (this._$node.parentNode) {
            this._$node.parentNode.removeChild(this._$node);
        }
        this._$node = null;
        this._$content = null;
        this._$playButton = null;
    };
    return OverlayView;
}(view_1.default));
OverlayView.setTheme(overlay_theme_1.default);
OverlayView.extendStyleNames(overlay_scss_1.default);
exports.default = OverlayView;
//# sourceMappingURL=overlay.view.js.map