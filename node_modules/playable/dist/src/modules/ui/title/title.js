"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var title_view_1 = tslib_1.__importDefault(require("./title.view"));
var player_api_decorator_1 = tslib_1.__importDefault(require("../../../core/player-api-decorator"));
var TitleControl = /** @class */ (function () {
    function TitleControl(_a) {
        var config = _a.config, theme = _a.theme;
        this._theme = theme;
        this._bindCallbacks();
        this._initUI();
        if (typeof config.title === 'object') {
            this.setTitleClickCallback(config.title.callback || null);
            this.setTitle(config.title.text);
        }
        else if (config.title === false) {
            this.hide();
        }
    }
    Object.defineProperty(TitleControl.prototype, "node", {
        get: function () {
            return this.view.getNode();
        },
        enumerable: true,
        configurable: true
    });
    TitleControl.prototype._bindCallbacks = function () {
        this._triggerCallback = this._triggerCallback.bind(this);
    };
    TitleControl.prototype._initUI = function () {
        var config = {
            theme: this._theme,
            callbacks: {
                onClick: this._triggerCallback,
            },
        };
        this.view = new TitleControl.View(config);
        this.view.setTitle();
    };
    /**
     * Display title text over the video. If you want to have clickable title, use `setTitleClickCallback`
     *
     * @param title - Text for the video title
     *
     * @example
     * player.setTitle('Your awesome video title here');
     *
     * @note
     * [Live Demo](https://jsfiddle.net/bodia/243k6m0u/)
     */
    TitleControl.prototype.setTitle = function (title) {
        this.view.setTitle(title);
    };
    /**
     * Method for attaching callback for click on title
     *
     * @param callback - Your function
     *
     * @example
     * const callback = () => {
     *   console.log('Click on title);
     * }
     * player.setTitleClickCallback(callback);
     *
     */
    TitleControl.prototype.setTitleClickCallback = function (callback) {
        this._callback = callback;
        this.view.setDisplayAsLink(Boolean(this._callback));
    };
    TitleControl.prototype._triggerCallback = function () {
        if (this._callback) {
            this._callback();
        }
    };
    TitleControl.prototype.hide = function () {
        this.isHidden = true;
        this.view.hide();
    };
    TitleControl.prototype.show = function () {
        this.isHidden = false;
        this.view.show();
    };
    TitleControl.prototype.destroy = function () {
        this.view.destroy();
        this.view = null;
    };
    TitleControl.moduleName = 'title';
    TitleControl.View = title_view_1.default;
    TitleControl.dependencies = ['config', 'theme'];
    tslib_1.__decorate([
        player_api_decorator_1.default()
    ], TitleControl.prototype, "setTitle", null);
    tslib_1.__decorate([
        player_api_decorator_1.default()
    ], TitleControl.prototype, "setTitleClickCallback", null);
    return TitleControl;
}());
exports.default = TitleControl;
//# sourceMappingURL=title.js.map