"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var view_1 = tslib_1.__importDefault(require("../core/view"));
var htmlToElement_1 = tslib_1.__importDefault(require("../core/htmlToElement"));
var getElementByHook_1 = tslib_1.__importDefault(require("../core/getElementByHook"));
var templates_1 = require("./templates");
var top_block_scss_1 = tslib_1.__importDefault(require("./top-block.scss"));
var TopBlockView = /** @class */ (function (_super) {
    tslib_1.__extends(TopBlockView, _super);
    function TopBlockView(config) {
        var _this = _super.call(this) || this;
        var elements = config.elements;
        _this._initDOM(elements);
        _this._bindEvents();
        return _this;
    }
    TopBlockView.prototype._initDOM = function (elements) {
        this._$node = htmlToElement_1.default(templates_1.topBlockTemplate({
            styles: this.styleNames,
        }));
        var $titleContainer = getElementByHook_1.default(this._$node, 'title-container');
        var $liveIndicatorContainer = getElementByHook_1.default(this._$node, 'live-indicator-container');
        $titleContainer.appendChild(elements.title);
        $liveIndicatorContainer.appendChild(elements.liveIndicator);
    };
    TopBlockView.prototype._preventClickPropagation = function (e) {
        e.stopPropagation();
    };
    TopBlockView.prototype._bindEvents = function () {
        this._$node.addEventListener('click', this._preventClickPropagation);
    };
    TopBlockView.prototype._unbindEvents = function () {
        this._$node.removeEventListener('click', this._preventClickPropagation);
    };
    TopBlockView.prototype.show = function () {
        this._$node.classList.remove(this.styleNames.hidden);
    };
    TopBlockView.prototype.hide = function () {
        this._$node.classList.add(this.styleNames.hidden);
    };
    TopBlockView.prototype.getNode = function () {
        return this._$node;
    };
    TopBlockView.prototype.showContent = function () {
        this._$node.classList.add(this.styleNames.activated);
    };
    TopBlockView.prototype.hideContent = function () {
        this._$node.classList.remove(this.styleNames.activated);
    };
    TopBlockView.prototype.destroy = function () {
        this._unbindEvents();
        if (this._$node.parentNode) {
            this._$node.parentNode.removeChild(this._$node);
        }
        this._$node = null;
    };
    return TopBlockView;
}(view_1.default));
TopBlockView.extendStyleNames(top_block_scss_1.default);
exports.default = TopBlockView;
//# sourceMappingURL=top-block.view.js.map