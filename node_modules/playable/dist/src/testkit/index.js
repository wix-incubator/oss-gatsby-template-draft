"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
require("jsdom-global/register");
var player_factory_1 = require("../core/player-factory");
var dependency_container_1 = tslib_1.__importDefault(require("../core/dependency-container"));
var asClass = dependency_container_1.default.asClass;
function setProperty(target, propertyKey, propertyValue) {
    Reflect.defineProperty(target, propertyKey, tslib_1.__assign({}, Reflect.getOwnPropertyDescriptor(target.constructor.prototype, propertyKey), { get: function () { return propertyValue; } }));
}
exports.setProperty = setProperty;
function resetProperty(target, propertyKey) {
    Reflect.deleteProperty(target, propertyKey);
}
exports.resetProperty = resetProperty;
function createPlayerTestkit(config, adapters) {
    if (config === void 0) { config = {}; }
    if (adapters === void 0) { adapters = []; }
    var _config = config;
    var scope = player_factory_1.container.createScope();
    scope.registerValue('config', _config);
    scope.registerValue('themeConfig', null);
    scope.registerValue('availablePlaybackAdapters', adapters.slice());
    return {
        getModule: function (name) {
            return scope.resolve(name);
        },
        registerModule: function (name, fn) {
            scope.register(name, asClass(fn));
        },
        registerModuleAsSingleton: function (name, fn) {
            scope.register(name, asClass(fn).scoped());
        },
        setConfig: function (config) {
            scope.registerValue('config', tslib_1.__assign({}, config));
        },
        setPlaybackAdapters: function (adapters) {
            scope.registerValue('availablePlaybackAdapters', adapters.slice());
        },
    };
}
exports.default = createPlayerTestkit;
//# sourceMappingURL=index.js.map