"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
require("jsdom-global/register");
var chai_1 = require("chai");
//@ts-ignore
var sinon = tslib_1.__importStar(require("sinon"));
var keyboard_interceptor_1 = tslib_1.__importDefault(require("./keyboard-interceptor"));
describe('KeyboardInterceptor', function () {
    var node;
    var callbacks;
    var interceptor;
    var keydownEvent = new Event('keydown');
    var testKeyCode1 = 10;
    var testKeyCode2 = 20;
    beforeEach(function () {
        var _a;
        node = document.createElement('div');
        callbacks = (_a = {},
            _a[testKeyCode1] = sinon.spy(),
            _a[testKeyCode2] = sinon.spy(),
            _a);
        interceptor = new keyboard_interceptor_1.default(node, callbacks);
    });
    it('should intercept and broadcast keydown events', function () {
        keydownEvent.keyCode = testKeyCode1;
        node.dispatchEvent(keydownEvent);
        chai_1.expect(callbacks[testKeyCode1].calledWith(keydownEvent)).to.be.true;
        chai_1.expect(callbacks[testKeyCode2].called).to.be.false;
        keydownEvent.keyCode = testKeyCode2;
        node.dispatchEvent(keydownEvent);
        chai_1.expect(callbacks[testKeyCode2].calledWith(keydownEvent)).to.be.true;
    });
    it('should clear everything on destroy', function () {
        interceptor.destroy();
        keydownEvent.keyCode = testKeyCode1;
        node.dispatchEvent(keydownEvent);
        chai_1.expect(callbacks[testKeyCode1].called).to.be.false;
    });
});
//# sourceMappingURL=keyboard-interceptor.spec.js.map