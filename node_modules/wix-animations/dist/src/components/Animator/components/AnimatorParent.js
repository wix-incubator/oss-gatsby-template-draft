'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _TransitionGroup = require('react-transition-group/TransitionGroup');

var _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);

var _formatProps = require('../helpers/format-props');

var _formatProps2 = _interopRequireDefault(_formatProps);

var _CSSTransitionWrapper = require('./CSSTransitionWrapper');

var _CSSTransitionWrapper2 = _interopRequireDefault(_CSSTransitionWrapper);

var _Debug = require('./Debug');

var _Debug2 = _interopRequireDefault(_Debug);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AnimatorParent = function (_React$Component) {
  _inherits(AnimatorParent, _React$Component);

  function AnimatorParent(props) {
    _classCallCheck(this, AnimatorParent);

    var _this = _possibleConstructorReturn(this, (AnimatorParent.__proto__ || Object.getPrototypeOf(AnimatorParent)).call(this, props));

    _this.state = {
      debug: false
    };
    return _this;
  }

  _createClass(AnimatorParent, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          className = _props.className,
          dataHook = _props.dataHook;

      var animatorProps = (0, _formatProps2.default)(this.props);
      animatorProps.debug = this.state.debug;
      return _react2.default.createElement(
        _TransitionGroup2.default,
        { 'data-hook': dataHook, className: className },
        animatorProps.children.map(function (item, index) {
          return _react2.default.createElement(
            _CSSTransitionWrapper2.default,
            _extends({ key: item.key || index, index: index }, item.props, { animatorProps: animatorProps }),
            item
          );
        }),
        this.props.debug && _react2.default.createElement(_Debug2.default, { hasChildren: !!animatorProps.children.length, onSelect: function onSelect(debug) {
            return _this2.setState({ debug: debug });
          } })
      );
    }
  }]);

  return AnimatorParent;
}(_react2.default.Component);

AnimatorParent.propTypes = {
  sequence: (0, _propTypes.oneOfType)([_propTypes.bool, _propTypes.string]),
  translate: _propTypes.any,
  children: _propTypes.node,
  className: _propTypes.any,
  show: _propTypes.any,
  dataHook: _propTypes.any,
  debug: _propTypes.bool
};

exports.default = AnimatorParent;