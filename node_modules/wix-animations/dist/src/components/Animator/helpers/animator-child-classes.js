'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _classBuilder = require('../builders/class-builder');

var _classBuilder2 = _interopRequireDefault(_classBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var AnimatorChildClasses = function () {
  function AnimatorChildClasses(props) {
    _classCallCheck(this, AnimatorChildClasses);

    this.props = props;

    this.classes = [this.getFirstLayer(), this.getSecondLayer(), this.getThirdLayer()];
  }

  _createClass(AnimatorChildClasses, [{
    key: 'getFirstLayer',
    value: function getFirstLayer() {
      var _props$animatorProps = this.props.animatorProps,
          debug = _props$animatorProps.debug,
          sequence = _props$animatorProps.sequence,
          delay = _props$animatorProps.delay,
          childClassName = _props$animatorProps.childClassName;
      var animatorChildClassName = this.props.animatorChildClassName;


      return new _classBuilder2.default().withChildLayer(1).withDebug(debug).withClassName(childClassName).withClassName(animatorChildClassName).withSequence(sequence || delay).build();
    }
  }, {
    key: 'getSecondLayer',
    value: function getSecondLayer() {
      var _props$animatorProps2 = this.props.animatorProps,
          translate = _props$animatorProps2.translate,
          opacity = _props$animatorProps2.opacity,
          scale = _props$animatorProps2.scale,
          timing = _props$animatorProps2.timing,
          height = _props$animatorProps2.height,
          width = _props$animatorProps2.width;


      return new _classBuilder2.default().withChildLayer(2).withOpacity(opacity).withScale(scale).withTranslateWrapper(translate).withHeight(height).withWidth(width).withTiming(timing).build();
    }
  }, {
    key: 'getThirdLayer',
    value: function getThirdLayer() {
      var translate = this.props.animatorProps.translate;


      return new _classBuilder2.default().withChildLayer(3).withTranslate(translate).build();
    }
  }, {
    key: 'get',
    value: function get() {
      return this.classes;
    }
  }]);

  return AnimatorChildClasses;
}();

exports.default = AnimatorChildClasses;