'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _timeClass = require('../class/time-class');

var _styleBuilder = require('../builders/style-builder');

var _styleBuilder2 = _interopRequireDefault(_styleBuilder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var AnimationChildStyles = function () {
  function AnimationChildStyles(props, dimensions) {
    _classCallCheck(this, AnimationChildStyles);

    this.props = props;
    this.animatorProps = this.props.animatorProps;

    var animatorProps = props.animatorProps,
        sequenceIndex = props.sequenceIndex;


    this.dimensions = {
      height: dimensions.height,
      width: dimensions.width
    };

    var time = new _timeClass.ChildTime(animatorProps, this.props.transition, sequenceIndex);
    this.delay = time.getDelay();
    this.duration = time.getDuration();

    this.styles = [this.getFirstLayer(), this.getSecondLayer(), this.getThirdLayer()];
  }

  _createClass(AnimationChildStyles, [{
    key: 'getFirstLayer',
    value: function getFirstLayer() {
      var _this = this;

      var startStyles = function startStyles() {
        return new _styleBuilder2.default().withTransitionDelay(_this.delay).withAnimationDelay(_this.duration).build();
      };

      return {
        base: _extends({}, this.props.animatorProps.childStyle, this.props.animatorChildStyle),
        enter: startStyles,
        entering: function entering() {
          return {};
        },
        exit: startStyles,
        exiting: {}
      };
    }
  }, {
    key: 'getSecondLayer',
    value: function getSecondLayer() {
      var _this2 = this;

      var _dimensions = this.dimensions,
          height = _dimensions.height,
          width = _dimensions.width;
      var _animatorProps = this.animatorProps,
          scale = _animatorProps.scale,
          isHeight = _animatorProps.height,
          isWidth = _animatorProps.width;


      var startStyles = function startStyles() {
        return new _styleBuilder2.default().withTransitionDelay(_this2.delay).build();
      };

      var dimensionsStyles = function dimensionsStyles(_height, _width) {
        return new _styleBuilder2.default().withWidth(isWidth, _width).withHeight(isHeight, _height);
      };

      var hideDimensions = function hideDimensions() {
        return dimensionsStyles(0, 0).build();
      };

      var showDimensions = function showDimensions() {
        return dimensionsStyles(height, width).build();
      };

      var hideScale = function hideScale() {
        return new _styleBuilder2.default().withScale(scale).build();
      };

      var showScale = function showScale() {
        return new _styleBuilder2.default().withScale(scale && 1).build();
      };

      return {
        base: {},
        enter: function enter() {
          return _extends({}, startStyles(), hideScale(), hideDimensions());
        },
        entering: function entering() {
          return _extends({}, showScale(), showDimensions());
        },
        exit: function exit() {
          return _extends({}, startStyles(), showScale(), showDimensions());
        },
        exiting: function exiting() {
          return _extends({}, hideScale(), hideDimensions());
        }
      };
    }
  }, {
    key: 'getThirdLayer',
    value: function getThirdLayer() {
      var _this3 = this;

      var translate = this.animatorProps.translate;


      var startStyles = function startStyles() {
        return new _styleBuilder2.default().withTransitionDelay(_this3.delay).build();
      };

      var translateOut = function translateOut() {
        return new _styleBuilder2.default().withTranslate(translate, 'out').build();
      };

      var translateIn = function translateIn() {
        return new _styleBuilder2.default().withTranslate(translate, 'in').build();
      };

      return {
        base: {},
        enter: function enter() {
          return _extends({}, startStyles(), translateIn());
        },
        entering: {},
        exit: function exit() {
          return startStyles();
        },
        exiting: function exiting() {
          return translateOut();
        }
      };
    }
  }, {
    key: 'getStyle',
    value: function getStyle(name, callback) {
      return this.props.transition[name] && typeof callback === 'function' && callback();
    }
  }, {
    key: 'mergeStyles',
    value: function mergeStyles(_ref) {
      var base = _ref.base,
          enter = _ref.enter,
          entering = _ref.entering,
          exit = _ref.exit,
          exiting = _ref.exiting;


      return _extends({}, base, this.getStyle('enter', enter), this.getStyle('entering', entering), this.getStyle('exit', exit), this.getStyle('exiting', exiting));
    }
  }, {
    key: 'get',
    value: function get() {
      var _this4 = this;

      return this.styles.map(function (style) {
        return _this4.mergeStyles(style);
      });
    }
  }]);

  return AnimationChildStyles;
}();

exports.default = AnimationChildStyles;