'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Grid = require('../../src/Grid');

var _ToggleSwitch = require('../../src/ToggleSwitch');

var _ToggleSwitch2 = _interopRequireDefault(_ToggleSwitch);

var _Dropdown = require('../../src/Dropdown');

var _Dropdown2 = _interopRequireDefault(_Dropdown);

var _Animator = require('../../src/components/Animator');

var _Animator2 = _interopRequireDefault(_Animator);

var _Example = require('./Example.scss');

var css = _interopRequireWildcard(_Example);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var createSizeArray = function createSizeArray(size) {
  return new Array(size + 1).fill(0).map(function (element, id) {
    return { id: id * 10, value: id * 10 };
  });
};

var MockDiv = function MockDiv(_ref) {
  var children = _ref.children;

  return _react2.default.createElement(
    'div',
    { className: css.shukiInner, style: { overflow: 'hidden' } },
    children
  );
};

MockDiv.propTypes = {
  children: _propTypes2.default.element.isRequired
};

var AnimatedExample = function (_React$Component) {
  _inherits(AnimatedExample, _React$Component);

  function AnimatedExample(props) {
    _classCallCheck(this, AnimatedExample);

    var _this = _possibleConstructorReturn(this, (AnimatedExample.__proto__ || Object.getPrototypeOf(AnimatedExample)).call(this, props));

    _this.state = {
      opacity: false,
      scale: true,
      height: false,
      width: false,
      translate: true,
      sequence: true,
      debug: 'none',
      sequenceOption: 'default',
      translateSizeIn: 100,
      translateSizeOut: 100,
      direction: 'top',
      timing: 'large',
      show: true
    };

    _this.options = [{ id: 'micro', value: 'Micro - 120ms' }, { id: 'small', value: 'Small - 150ms' }, { id: 'medium', value: 'Medium - 200ms' }, { id: 'large', value: 'Large - 300ms' }, { id: 'debug', value: 'Debug - 10000ms' }, { id: 'none', value: 'None' }];

    _this.sizeOptions = createSizeArray(10);
    _this.directionOptions = [{ id: 'top', value: 'Top' }, { id: 'bottom', value: 'Bottom' }, { id: 'left', value: 'Left' }, { id: 'right', value: 'Right' }];

    _this.sequenceOptions = [{ id: 'default', value: 'Default (exit empty)' }, { id: 'flip', value: 'Flip' }, { id: 'reverse', value: 'Reverse' }, { id: 'reverse-flip', value: 'Reverse Flip' }];

    _this.debugOptions = [{ id: 'none', value: 'None' }, { id: 'enter', value: 'Enter Stage' }, { id: 'entering', value: 'Entering Stage' }, { id: 'exit', value: 'exit Stage' }, { id: 'exiting', value: 'exiting Stage' }];

    return _this;
  }

  _createClass(AnimatedExample, [{
    key: 'myToggle',
    value: function myToggle(option) {
      var _this2 = this;

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(_ToggleSwitch2.default, { checked: this.state[option], onChange: function onChange() {
            return _this2.setState(_defineProperty({}, option, !_this2.state[option]));
          } }),
        option
      );
    }
  }, {
    key: 'getSequenceValue',
    value: function getSequenceValue() {
      if (!this.state.sequence) {
        return false;
      }
      return this.state.sequenceOption !== 'default' ? this.state.sequenceOption : true;
    }
  }, {
    key: 'buildTranslateString',
    value: function buildTranslateString() {
      var _state = this.state,
          translateSizeIn = _state.translateSizeIn,
          translateSizeOut = _state.translateSizeOut;

      var size = translateSizeIn === translateSizeOut ? '{size: ' + translateSizeIn + '}' : '{size: {in: ' + translateSizeIn + ', out: ' + translateSizeOut;

      return ' translate={' + size + ', to: "' + this.state.direction + '"}}';
    }
  }, {
    key: 'buildTranslateObject',
    value: function buildTranslateObject() {
      var _state2 = this.state,
          translateSizeIn = _state2.translateSizeIn,
          translateSizeOut = _state2.translateSizeOut,
          direction = _state2.direction;


      return {
        to: direction,
        size: translateSizeIn === translateSizeOut ? translateSizeIn : { in: translateSizeIn, out: translateSizeOut }
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      return _react2.default.createElement(
        'div',
        { style: { height: '250px' } },
        _react2.default.createElement(
          _Grid.Container,
          null,
          _react2.default.createElement(
            _Grid.Row,
            null,
            ' ',
            _react2.default.createElement(
              _Grid.Col,
              { span: '' },
              'Animation component '
            )
          ),
          _react2.default.createElement(
            _Grid.Row,
            null,
            _react2.default.createElement(
              _Grid.Col,
              { span: '4' },
              _react2.default.createElement(
                _Grid.Row,
                null,
                _react2.default.createElement(_ToggleSwitch2.default, { checked: this.state.show, onChange: function onChange() {
                    return _this3.setState({ show: !_this3.state.show });
                  } }),
                ' Show Element'
              ),
              _react2.default.createElement(
                _Grid.Row,
                null,
                this.myToggle('opacity')
              ),
              _react2.default.createElement(
                _Grid.Row,
                null,
                this.myToggle('scale')
              ),
              _react2.default.createElement(
                _Grid.Row,
                null,
                this.myToggle('height')
              ),
              _react2.default.createElement(
                _Grid.Row,
                null,
                this.myToggle('width')
              ),
              _react2.default.createElement(
                _Grid.Row,
                null,
                this.myToggle('translate')
              ),
              this.state.translate && _react2.default.createElement(
                _Grid.Row,
                null,
                _react2.default.createElement(
                  _Grid.Col,
                  { span: '12' },
                  'Translate Options'
                ),
                _react2.default.createElement(
                  _Grid.Col,
                  { span: '6' },
                  'Size In',
                  _react2.default.createElement(_Dropdown2.default, {
                    selectedId: this.state.translateSizeIn,
                    onSelect: function onSelect(option) {
                      return _this3.setState({ translateSizeIn: option.id });
                    },
                    options: this.sizeOptions
                  }),
                  'Size Out',
                  _react2.default.createElement(_Dropdown2.default, {
                    selectedId: this.state.translateSizeOut,
                    onSelect: function onSelect(option) {
                      return _this3.setState({ translateSizeOut: option.id });
                    },
                    options: this.sizeOptions
                  })
                ),
                _react2.default.createElement(
                  _Grid.Col,
                  { span: '6' },
                  'Direction To Show',
                  _react2.default.createElement(_Dropdown2.default, {
                    selectedId: this.state.direction,
                    onSelect: function onSelect(option) {
                      return _this3.setState({ direction: option.id });
                    },
                    options: this.directionOptions
                  })
                )
              ),
              _react2.default.createElement(
                _Grid.Row,
                null,
                this.myToggle('sequence'),
                'Sequence Options',
                this.state.sequence && _react2.default.createElement(_Dropdown2.default, {
                  selectedId: this.state.sequenceOption,
                  onSelect: function onSelect(option) {
                    return _this3.setState({ sequenceOption: option.id });
                  },
                  options: this.sequenceOptions
                })
              ),
              _react2.default.createElement(
                _Grid.Row,
                null,
                'Timing',
                _react2.default.createElement(_Dropdown2.default, {
                  selectedId: 'large',
                  onSelect: function onSelect(option) {
                    return _this3.setState({ timing: option.id });
                  },
                  options: this.options
                })
              ),
              _react2.default.createElement(
                _Grid.Row,
                null,
                'Debug',
                _react2.default.createElement(_Dropdown2.default, {
                  selectedId: 'none',
                  onSelect: function onSelect(option) {
                    return _this3.setState({ debug: option.id });
                  },
                  options: this.debugOptions
                })
              )
            ),
            _react2.default.createElement(
              _Grid.Col,
              { span: '8' },
              _react2.default.createElement(
                'pre',
                null,
                '<Animator',
                this.state.timing !== 'large' ? ' timing="' + this.state.timing + '"' : '',
                this.state.opacity ? ' opacity' : '',
                this.state.scale ? ' scale' : '',
                this.state.height ? ' height' : '',
                this.state.width ? ' width' : '',
                this.state.translate ? this.buildTranslateString() : '',
                this.state.sequence ? ' sequence' : '',
                this.state.sequence && this.state.sequenceOption !== 'default' ? '="' + this.state.sequenceOption + '"' : '',
                this.state.debug !== 'none' ? ' debug="' + this.state.debug + '"' : '',
                '></Animator>'
              ),
              _react2.default.createElement('br', null),
              _react2.default.createElement(
                _Animator2.default,
                {
                  opacity: this.state.opacity,
                  className: css.shukiWrapper,
                  scale: this.state.scale,
                  height: this.state.height,
                  width: this.state.width,
                  debug: this.state.debug === 'none' ? false : this.state.debug,
                  translate: this.state.translate ? this.buildTranslateObject() : false,
                  sequence: this.getSequenceValue(),
                  timing: this.state.timing === 'large' ? false : this.state.timing
                },
                this.state.show && _react2.default.createElement(
                  MockDiv,
                  { animatorChildStyle: { flexGrow: 2 }, animatorChildClassName: css.shukiChild },
                  _react2.default.createElement(
                    'div',
                    null,
                    'Some Content in Here'
                  ),
                  _react2.default.createElement(
                    'div',
                    null,
                    'Some Content in Here'
                  ),
                  _react2.default.createElement(
                    'div',
                    null,
                    'Some Content in Here'
                  )
                ),
                this.state.show && _react2.default.createElement(
                  MockDiv,
                  { animatorChildStyle: { flexGrow: 2 }, animatorChildClassName: css.shukiChild },
                  _react2.default.createElement(
                    'div',
                    null,
                    'Some Content in Here'
                  ),
                  _react2.default.createElement(
                    'div',
                    null,
                    'Some Content in Here'
                  ),
                  _react2.default.createElement(
                    'div',
                    null,
                    'Some Content in Here'
                  )
                ),
                this.state.show && _react2.default.createElement(
                  MockDiv,
                  { animatorChildStyle: { flexGrow: 2 }, animatorChildClassName: css.shukiChild },
                  _react2.default.createElement(
                    'div',
                    null,
                    'Some Content in Here'
                  ),
                  _react2.default.createElement(
                    'div',
                    null,
                    'Some Content in Here'
                  ),
                  _react2.default.createElement(
                    'div',
                    null,
                    'Some Content in Here'
                  )
                ),
                this.state.show && _react2.default.createElement(
                  MockDiv,
                  { animatorChildStyle: { flexGrow: 2 }, animatorChildClassName: css.shukiChild },
                  _react2.default.createElement(
                    'div',
                    null,
                    'Some Content in Here'
                  ),
                  _react2.default.createElement(
                    'div',
                    null,
                    'Some Content in Here'
                  ),
                  _react2.default.createElement(
                    'div',
                    null,
                    'Some Content in Here'
                  )
                ),
                this.state.show && _react2.default.createElement(
                  MockDiv,
                  { animatorChildStyle: { flexGrow: 2 }, animatorChildClassName: css.shukiChild },
                  _react2.default.createElement(
                    'div',
                    null,
                    'Some Content in Here'
                  ),
                  _react2.default.createElement(
                    'div',
                    null,
                    'Some Content in Here'
                  ),
                  _react2.default.createElement(
                    'div',
                    null,
                    'Some Content in Here'
                  )
                )
              )
            )
          ),
          _react2.default.createElement(
            _Grid.Row,
            null,
            _react2.default.createElement(
              _Grid.Col,
              { span: 12 },
              'Rules: 1. Translate - The height and width belongs to the parent and not the child so it translates according to them'
            )
          )
        )
      );
    }
  }]);

  return AnimatedExample;
}(_react2.default.Component);

exports.default = function () {
  return _react2.default.createElement(AnimatedExample, null);
};