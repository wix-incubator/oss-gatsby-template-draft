'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactDocgen = require('react-docgen');

var _Markdown = require('../Markdown');

var _Markdown2 = _interopRequireDefault(_Markdown);

var _componentResolver = require('./component-resolver');

var _componentResolver2 = _interopRequireDefault(_componentResolver);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var shouldHideForE2E = process.env.STORYBOOK_E2E;

var prepareParsedProps = function prepareParsedProps(props) {
  var asList = Object.keys(props).map(function (key) {
    return _extends({}, props[key], { name: key });
  });

  var required = asList.filter(function (prop) {
    return prop.required;
  });
  var notRequired = asList.filter(function (prop) {
    return !prop.required;
  });

  // required props go first
  return required.concat(notRequired);
};

var renderPropType = function renderPropType() {
  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var wrap = function wrap(name) {
    return function (children) {
      return _react2.default.createElement(
        'span',
        null,
        name,
        ' [',
        children,
        ']'
      );
    };
  };

  var failSafe = function failSafe(type) {
    return function () {
      return _react2.default.createElement(
        'span',
        null,
        'Sorry, unable to parse this propType:',
        _react2.default.createElement(
          'pre',
          null,
          JSON.stringify(type, null, 2)
        )
      );
    };
  };

  var typeHandlers = {
    custom: function custom() {
      return wrap('custom')();
    },

    enum: function _enum(value) {
      return wrap('oneOf')(value.map(function (v, i, allValues) {
        return _react2.default.createElement(
          'span',
          { key: i },
          _react2.default.createElement(
            'code',
            null,
            v.value
          ),
          allValues[i + 1] && ', '
        );
      }));
    },

    union: function union(value) {
      return wrap('oneOfType')(value.map(function (v, i, allValues) {
        return _react2.default.createElement(
          'span',
          { key: i },
          renderPropType(v),
          allValues[i + 1] && ', '
        );
      }));
    },

    shape: function shape(value) {
      return wrap('shape')(_react2.default.createElement(
        'ul',
        null,
        Object.keys(value).map(function (key) {
          return _extends({}, value[key], { key: key });
        }).map(function (v, i) {
          return _react2.default.createElement(
            'li',
            { key: i },
            v.key,
            ':\xA0',
            renderPropType(v)
          );
        })
      ));
    },

    arrayOf: function arrayOf(value) {
      return wrap('arrayOf')(renderPropType(value));
    }
  };

  if (type.value) {
    return (typeHandlers[type.name] || failSafe(type))(type.value);
  }

  return _react2.default.createElement(
    'span',
    null,
    type.name
  );
};

var AutoDocs = function AutoDocs(_ref) {
  var _ref$source = _ref.source,
      source = _ref$source === undefined ? '' : _ref$source;

  var _parse = (0, _reactDocgen.parse)(source, _componentResolver2.default),
      description = _parse.description,
      displayName = _parse.displayName,
      props = _parse.props;

  var propRow = function propRow(prop, index) {
    return _react2.default.createElement(
      'tr',
      { key: index },
      _react2.default.createElement(
        'td',
        null,
        prop.name || '-'
      ),
      _react2.default.createElement(
        'td',
        null,
        renderPropType(prop.type)
      ),
      _react2.default.createElement(
        'td',
        null,
        prop.defaultValue && prop.defaultValue.value && _react2.default.createElement(_Markdown2.default, { source: '`' + prop.defaultValue.value + '`' })
      ),
      _react2.default.createElement(
        'td',
        null,
        prop.required && 'Required'
      ),
      _react2.default.createElement(
        'td',
        null,
        prop.description && _react2.default.createElement(_Markdown2.default, { source: prop.description })
      )
    );
  };

  return !shouldHideForE2E && _react2.default.createElement(
    'div',
    { className: 'markdown-body' },
    _react2.default.createElement(
      'div',
      null,
      _react2.default.createElement(
        'h1',
        null,
        displayName && _react2.default.createElement(
          'code',
          null,
          '<' + displayName + '/>'
        ),
        'Component'
      )
    ),
    !displayName && _react2.default.createElement(
      'blockquote',
      null,
      'This component has no ',
      _react2.default.createElement(
        'code',
        null,
        'displayName'
      )
    ),
    description && _react2.default.createElement(_Markdown2.default, { source: description }),
    _react2.default.createElement(
      'h2',
      null,
      'Component ',
      _react2.default.createElement(
        'code',
        null,
        'props'
      )
    ),
    _react2.default.createElement(
      'table',
      null,
      _react2.default.createElement(
        'thead',
        null,
        _react2.default.createElement(
          'tr',
          null,
          _react2.default.createElement(
            'th',
            null,
            'Name'
          ),
          _react2.default.createElement(
            'th',
            null,
            'Type'
          ),
          _react2.default.createElement(
            'th',
            null,
            'Default Value'
          ),
          _react2.default.createElement(
            'th',
            null,
            'Required'
          ),
          _react2.default.createElement(
            'th',
            null,
            'Description'
          )
        )
      ),
      _react2.default.createElement(
        'tbody',
        null,
        prepareParsedProps(props).map(propRow)
      )
    )
  );
};

AutoDocs.propTypes = {
  source: _propTypes2.default.string.isRequired
};

exports.default = AutoDocs;