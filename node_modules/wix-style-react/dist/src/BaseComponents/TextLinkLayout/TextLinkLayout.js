'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ThemeOptions = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Typography = require('../../Typography');

var _Typography2 = _interopRequireDefault(_Typography);

var _WixComponent2 = require('../../BaseComponents/WixComponent');

var _WixComponent3 = _interopRequireDefault(_WixComponent2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ThemeOptions = exports.ThemeOptions = {
  NORMAL: { type: 'normal', color: { hover: '#4eb7f5', normal: '#3899ec' } },
  DARK_BACKGROUND: { type: 'darkBackground', color: { hover: '#f0f4f7', normal: '#f0f4f7' } },
  GREYSCALE: { type: 'greyScale', color: { hover: '#162d3d', normal: '#162d3d' } },
  DISABLED: { type: 'disabled', color: { hover: '#cbd3dc', normal: '#cbd3dc' } }
};

var TextLinkLayout = function (_WixComponent) {
  _inherits(TextLinkLayout, _WixComponent);

  function TextLinkLayout(props) {
    _classCallCheck(this, TextLinkLayout);

    var _this = _possibleConstructorReturn(this, (TextLinkLayout.__proto__ || Object.getPrototypeOf(TextLinkLayout)).call(this, props));

    _this.state = {
      isHover: false
    };

    _this.setHover = _this.setHover.bind(_this);
    return _this;
  }

  _createClass(TextLinkLayout, [{
    key: 'setHover',
    value: function setHover(hover) {
      this.setState({
        isHover: hover
      });
    }
  }, {
    key: 'getColor',
    value: function getColor() {
      var _props = this.props,
          theme = _props.theme,
          darkBackground = _props.darkBackground,
          disabled = _props.disabled;
      var isHover = this.state.isHover;


      if (disabled) {
        return ThemeOptions.DISABLED.color.normal;
      }

      //this should be deprecated
      if (darkBackground) {
        return ThemeOptions.DARK_BACKGROUND.color.normal;
      }

      switch (theme) {
        case ThemeOptions.DARK_BACKGROUND.type:
          return ThemeOptions.DARK_BACKGROUND.color.normal;
        case ThemeOptions.GREYSCALE.type:
          return ThemeOptions.GREYSCALE.color.normal;
        default:
          {
            var color = ThemeOptions.NORMAL.color;

            return isHover ? color.hover : color.normal;
          }
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var isHover = this.state.isHover;
      var _props2 = this.props,
          underlineStyle = _props2.underlineStyle,
          size = _props2.size,
          children = _props2.children,
          display = _props2.display,
          disabled = _props2.disabled;

      var color = this.getColor();

      var style = {
        color: color,
        display: display,
        background: 'none',
        cursor: disabled ? 'default' : 'pointer',
        textDecoration: underlineStyle === 'hover' && isHover && !disabled || underlineStyle === 'always' ? 'underline' : 'none'
      };

      var className = size === 'medium' ? _Typography2.default.t1_3 : _Typography2.default.t3_3;

      return _react2.default.createElement(
        'div',
        {
          role: 'link',
          className: className,
          style: style,
          onMouseLeave: function onMouseLeave() {
            return _this2.setHover(false);
          },
          onMouseEnter: function onMouseEnter() {
            return _this2.setHover(true);
          }
        },
        children
      );
    }
  }]);

  return TextLinkLayout;
}(_WixComponent3.default);

TextLinkLayout.propTypes = {
  children: _propTypes2.default.node,
  underlineStyle: _propTypes2.default.oneOf(['always', 'hover', 'never']),
  darkBackground: _propTypes2.default.bool,
  theme: _propTypes2.default.oneOf(['normal', 'darkBackground', 'greyScale']),
  size: _propTypes2.default.oneOf(['small', 'medium']),
  display: _propTypes2.default.oneOf(['block', 'inline-block']),
  disabled: _propTypes2.default.bool
};
TextLinkLayout.defaultProps = {
  underlineStyle: 'hover',
  darkBackground: false, //TODO - this should be deprecated
  theme: ThemeOptions.NORMAL.type,
  size: 'medium',
  display: 'block',
  disabled: false
};
exports.default = TextLinkLayout;