'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _ButtonHeader = require('./ButtonHeader.scss');

var _ButtonHeader2 = _interopRequireDefault(_ButtonHeader);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Button = require('../../../src/Backoffice/Button');

var _Button2 = _interopRequireDefault(_Button);

var _WixComponent2 = require('../../BaseComponents/WixComponent');

var _WixComponent3 = _interopRequireDefault(_WixComponent2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ButtonHeader = function (_WixComponent) {
  _inherits(ButtonHeader, _WixComponent);

  function ButtonHeader() {
    _classCallCheck(this, ButtonHeader);

    return _possibleConstructorReturn(this, (ButtonHeader.__proto__ || Object.getPrototypeOf(ButtonHeader)).apply(this, arguments));
  }

  _createClass(ButtonHeader, [{
    key: 'render',
    value: function render() {
      var _classNames, _classNames2;

      var _props = this.props,
          title = _props.title,
          subtitle = _props.subtitle,
          buttonOnClick = _props.buttonOnClick,
          buttonTitle = _props.buttonTitle,
          buttonPrefix = _props.buttonPrefix,
          buttonSuffix = _props.buttonSuffix,
          withoutDivider = _props.withoutDivider,
          tooltip = _props.tooltip,
          theme = _props.theme;


      var headerClasses = (0, _classnames2.default)((_classNames = {}, _defineProperty(_classNames, _ButtonHeader2.default.headerOnlyTitle, !subtitle), _defineProperty(_classNames, _ButtonHeader2.default.headerTitleSubtitle, subtitle), _defineProperty(_classNames, _ButtonHeader2.default.withDivider, !withoutDivider), _classNames));

      var buttonClass = (0, _classnames2.default)((_classNames2 = {}, _defineProperty(_classNames2, _ButtonHeader2.default.button, theme === 'standard'), _defineProperty(_classNames2, _ButtonHeader2.default.buttonSmall, theme !== 'standard'), _classNames2));

      var height = theme === 'standard' ? 'medium' : 'small';
      var buttonTheme = void 0;
      switch (theme) {
        case 'standard':
          {
            buttonTheme = 'whiteblueprimary';
            break;
          }
        case 'emptyblue':
          {
            buttonTheme = 'emptyblue';
            break;
          }
        case 'fullblue':
        default:
          {
            buttonTheme = 'fullblue';
            break;
          }
      }
      var buttonElement = _react2.default.createElement(
        'div',
        { className: buttonClass },
        _react2.default.createElement(
          _Button2.default,
          {
            withNewIcons: this.props.withNewIcons,
            dataHook: 'button',
            height: height,
            suffixIcon: buttonSuffix,
            prefixIcon: buttonPrefix,
            onClick: buttonOnClick,
            theme: buttonTheme
          },
          buttonTitle
        )
      );

      var tooltipElement = tooltip ? _react2.default.cloneElement(tooltip, {}, buttonElement) : null;

      var actionElement = tooltipElement ? tooltipElement : buttonElement;

      var titleElement = _react2.default.createElement(
        'div',
        { 'data-hook': 'title', className: _ButtonHeader2.default.title },
        title
      );

      var subtitleElement = subtitle ? _react2.default.createElement(
        'div',
        { 'data-hook': 'subtitle', className: _ButtonHeader2.default.subtitle },
        this.props.subtitle
      ) : null;

      return _react2.default.createElement(
        'div',
        { className: headerClasses },
        _react2.default.createElement(
          'div',
          null,
          titleElement,
          subtitleElement
        ),
        actionElement
      );
    }
  }]);

  return ButtonHeader;
}(_WixComponent3.default);

ButtonHeader.propTypes = {
  withNewIcons: _propTypes.bool,
  title: _propTypes.node.isRequired,
  buttonTitle: _propTypes.string.isRequired,
  buttonOnClick: _propTypes.func.isRequired,
  buttonPrefix: _propTypes.node,
  buttonSuffix: _propTypes.node,
  subtitle: _propTypes.node,
  tooltip: _propTypes.node,
  theme: (0, _propTypes.oneOf)(['standard', 'fullblue', 'emptyblue']),
  withoutDivider: _propTypes.bool
};
ButtonHeader.defaultProps = {
  withNewIcons: false,
  subtitle: null,
  withoutDivider: false,
  buttonPrefix: null,
  tooltip: null,
  theme: 'standard',
  buttonSuffix: null
};
exports.default = ButtonHeader;