'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _RangeInputWithLabelComposite = require('./RangeInputWithLabelComposite');

var _RangeInputWithLabelComposite2 = _interopRequireDefault(_RangeInputWithLabelComposite);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var rangeInputWithLabelCompositeDriverFactory = function rangeInputWithLabelCompositeDriverFactory(_ref) {
  var element = _ref.element,
      wrapper = _ref.wrapper;

  var label = element.childNodes[0].childNodes[0];
  var hasLabel = label.tagName.toLowerCase() === 'label';
  var firstInput = hasLabel ? element.childNodes[1].childNodes[0] : element.childNodes[0].childNodes[0];
  var lastInput = hasLabel ? element.childNodes[1].childNodes[1] : element.childNodes[0].childNodes[1];
  return {
    exists: function exists() {
      return !!element;
    },
    getLabel: function getLabel() {
      return label.textContent;
    },
    hasLabel: function hasLabel() {
      return label.tagName.toLowerCase() === 'label';
    },
    hasInputs: function hasInputs() {
      return !!firstInput && !!lastInput;
    },
    getAttr: function getAttr(attrName) {
      return element.getAttribute(attrName);
    },
    getNumberOfChildren: function getNumberOfChildren() {
      return hasLabel ? element.childNodes[1].childElementCount : element.childNodes[0].childElementCount;
    },
    hasFieldLabelAttributes: function hasFieldLabelAttributes() {
      return !!element.querySelectorAll('[data-hook="field-label-attributes"]').length;
    },
    setProps: function setProps(props) {
      _reactDom2.default.render(_react2.default.createElement(
        'div',
        { ref: function ref(r) {
            return element = r;
          } },
        _react2.default.createElement(_RangeInputWithLabelComposite2.default, props)
      ), wrapper);
    }
  };
};

exports.default = rangeInputWithLabelCompositeDriverFactory;