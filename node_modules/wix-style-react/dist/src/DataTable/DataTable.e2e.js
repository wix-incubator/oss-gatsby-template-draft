'use strict';

var _eyes = require('eyes.it');

var _eyes2 = _interopRequireDefault(_eyes);

var _protractor = require('../../testkit/protractor');

var _protractor2 = require('wix-ui-test-utils/protractor');

var _storybookHelpers = require('../../test/utils/storybook-helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

describe('Data Table', function () {
  var storyUrl = (0, _storybookHelpers.getStoryUrl)('10. Tables', '10.1 DataTable (Legacy)');

  _eyes2.default.it('should call func on row click', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
    var driver, indexToClick, name, rowData, EC;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            driver = (0, _protractor.dataTableTestkitFactory)({ dataHook: 'story-data-table-example' });
            indexToClick = 2;
            name = 'Deborah Rhodes';
            _context.next = 5;
            return browser.get(storyUrl);

          case 5:
            _context.next = 7;
            return (0, _protractor2.waitForVisibilityOf)(driver.element(), 'Cant find Data Table Component');

          case 7:
            _context.next = 9;
            return (0, _protractor2.scrollToElement)(driver.element());

          case 9:
            _context.next = 11;
            return driver.getRowTextByIndex(indexToClick);

          case 11:
            rowData = _context.sent;

            expect(rowData).toBe('#' + (indexToClick + 1) + ' ' + name);
            _context.next = 15;
            return driver.clickRowByIndex(indexToClick);

          case 15:
            EC = protractor.ExpectedConditions;
            _context.next = 18;
            return browser.wait(EC.alertIsPresent(), 10000, 'Alert is not presented :(');

          case 18:
            _context.t0 = expect;
            _context.next = 21;
            return browser.switchTo().alert().getText();

          case 21:
            _context.t1 = _context.sent;
            _context.t2 = 'You clicked "' + name + '", row number ' + (indexToClick + 1);
            (0, _context.t0)(_context.t1).toBe(_context.t2);
            _context.next = 26;
            return browser.switchTo().alert().accept();

          case 26:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined);
  })));

  _eyes2.default.it('display new data when received', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
    var dataHook, driver, initialItems, itemsAfterLoad;
    return regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            dataHook = 'story-data-table-infinite-scroll';
            driver = (0, _protractor.dataTableTestkitFactory)({ dataHook: dataHook });
            _context3.next = 4;
            return browser.get(storyUrl);

          case 4:
            _context3.next = 6;
            return (0, _protractor2.waitForVisibilityOf)(driver.element(), 'Cant find Data Table Component');

          case 6:
            _context3.next = 8;
            return (0, _protractor2.scrollToElement)(driver.element());

          case 8:
            initialItems = 20;
            itemsAfterLoad = 40;
            _context3.next = 12;
            return driver.scrollToRowByIdx(initialItems - 1);

          case 12:
            _context3.next = 14;
            return browser.wait(_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
              return regeneratorRuntime.wrap(function _callee2$(_context2) {
                while (1) {
                  switch (_context2.prev = _context2.next) {
                    case 0:
                      _context2.next = 2;
                      return driver.rowsCount();

                    case 2:
                      _context2.t0 = _context2.sent;
                      _context2.t1 = itemsAfterLoad;
                      return _context2.abrupt('return', _context2.t0 === _context2.t1);

                    case 5:
                    case 'end':
                      return _context2.stop();
                  }
                }
              }, _callee2, undefined);
            })), 10000, 'New data wasnt loaded :(');

          case 14:
            _context3.t0 = expect;
            _context3.next = 17;
            return driver.rowsCount();

          case 17:
            _context3.t1 = _context3.sent;
            _context3.t2 = itemsAfterLoad;
            (0, _context3.t0)(_context3.t1).toEqual(_context3.t2);

          case 20:
          case 'end':
            return _context3.stop();
        }
      }
    }, _callee3, undefined);
  })));

  _eyes2.default.it('display story-data-table-sortable', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
    var dataHook, driver;
    return regeneratorRuntime.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            dataHook = 'story-data-table-sortable';
            driver = (0, _protractor.dataTableTestkitFactory)({ dataHook: dataHook });
            _context4.next = 4;
            return browser.get(storyUrl);

          case 4:
            _context4.next = 6;
            return (0, _protractor2.waitForVisibilityOf)(driver.element(), 'Cant find Data Table Component');

          case 6:
            _context4.next = 8;
            return (0, _protractor2.scrollToElement)(driver.element());

          case 8:
          case 'end':
            return _context4.stop();
        }
      }
    }, _callee4, undefined);
  })));

  _eyes2.default.it('display story-data-table-without-header', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
    var dataHook, driver;
    return regeneratorRuntime.wrap(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            dataHook = 'story-data-table-without-header';
            driver = (0, _protractor.dataTableTestkitFactory)({ dataHook: dataHook });
            _context5.next = 4;
            return browser.get(storyUrl);

          case 4:
            _context5.next = 6;
            return (0, _protractor2.waitForVisibilityOf)(driver.element(), 'Cant find Data Table Component');

          case 6:
            _context5.next = 8;
            return (0, _protractor2.scrollToElement)(driver.element());

          case 8:
          case 'end':
            return _context5.stop();
        }
      }
    }, _callee5, undefined);
  })));
});