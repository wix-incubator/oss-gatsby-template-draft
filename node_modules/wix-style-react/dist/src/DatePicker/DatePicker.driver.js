'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _testUtils = require('react-dom/test-utils');

var _testUtils2 = _interopRequireDefault(_testUtils);

var _Input = require('../Input/Input.driver');

var _Input2 = _interopRequireDefault(_Input);

var _DropdownLayout = require('../DropdownLayout/DropdownLayout.driver');

var _DropdownLayout2 = _interopRequireDefault(_DropdownLayout);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var datePickerDriverFactory = function datePickerDriverFactory(_ref) {
  var element = _ref.element,
      wrapper = _ref.wrapper;

  var inputRoot = element && element.children[0].querySelector('.root');
  var inputDriver = (0, _Input2.default)({ element: inputRoot, wrapper: wrapper });
  var getCalendar = function getCalendar() {
    return element.querySelector('.DayPicker');
  };
  var getNthDay = function getNthDay(n) {
    return element.querySelectorAll('[role="gridcell"]:not([class*="outside"]):not([class*="disabled"])')[n];
  };
  var _getSelectedDay = function _getSelectedDay() {
    return element.querySelector('[role="gridcell"][aria-selected=true]');
  };
  var getYearDropdown = function getYearDropdown() {
    return element.querySelector('[data-hook="datepicker-year-dropdown-button"]');
  };
  var getMonthDropdownButton = function getMonthDropdownButton() {
    return element.querySelector('[data-hook="datepicker-month-dropdown-button"]');
  };
  var getNthYear = function getNthYear(n) {
    return element.querySelector('[data-hook="dropdown-item-' + n + '"]');
  };
  var _getMonthCaption = function _getMonthCaption() {
    return element.querySelector('[data-hook="datepicker-month-caption"]');
  };
  var getYearCaption = function getYearCaption() {
    return element.querySelector('[data-hook="datepicker-year-caption"]');
  };
  var getMonthAndYear = function getMonthAndYear() {
    return [_getMonthCaption(), getYearCaption()];
  };
  var _getNthWeekDayName = function _getNthWeekDayName(n) {
    return element.querySelectorAll('[class="DayPicker-Weekday"] abbr')[n];
  };
  var getPrevMonthButton = function getPrevMonthButton() {
    return element.querySelector('[data-hook="datepicker-left-arrow"]');
  };
  var getNextMonthButton = function getNextMonthButton() {
    return element.querySelector('[data-hook="datepicker-right-arrow"]');
  };

  var driver = {
    exists: function exists() {
      return !!element;
    }
  };

  var calendarDriver = {
    isVisible: function isVisible() {
      return !!getCalendar();
    },
    getCurrentMonthWithYear: function getCurrentMonthWithYear() {
      return getMonthAndYear() ? getMonthAndYear().map(function (element) {
        return element.textContent;
      }).join(' ') : '';
    },
    getNthWeekDayName: function getNthWeekDayName() {
      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      return _getNthWeekDayName(n) ? _getNthWeekDayName(n).textContent : '';
    },
    clickOnNthDay: function clickOnNthDay() {
      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      return getNthDay(n) && _testUtils2.default.Simulate.click(getNthDay(n));
    },
    clickOnSelectedDay: function clickOnSelectedDay() {
      return _testUtils2.default.Simulate.click(_getSelectedDay());
    },
    clickOnYearDropdown: function clickOnYearDropdown() {
      return _testUtils2.default.Simulate.click(getYearDropdown());
    },
    clickOnNthYear: function clickOnNthYear() {
      var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
      return _testUtils2.default.Simulate.mouseDown(getNthYear(n));
    },
    clickOnPrevMonthButton: function clickOnPrevMonthButton() {
      return _testUtils2.default.Simulate.click(getPrevMonthButton());
    },
    clickOnNextMonthButton: function clickOnNextMonthButton() {
      return _testUtils2.default.Simulate.click(getNextMonthButton());
    },
    open: function open() {
      return inputDriver.focus();
    },
    close: function close() {
      return inputDriver.trigger('keyDown', { key: 'Escape', keyCode: 27 });
    },
    isHeaderVisible: function isHeaderVisible() {
      return !!wrapper.querySelector('[data-hook="datepicker-head"]');
    },
    isYearDropdownExists: function isYearDropdownExists() {
      return !!wrapper.querySelector('[data-hook="datepicker-year-dropdown"]');
    },
    isYearCaptionExists: function isYearCaptionExists() {
      return !!getYearCaption();
    },
    isMonthDropdownExists: function isMonthDropdownExists() {
      return !!wrapper.querySelector('[data-hook="datepicker-month-dropdown"]');
    },
    isMonthCaptionExists: function isMonthCaptionExists() {
      return !!_getMonthCaption();
    },
    getMonthCaption: function getMonthCaption() {
      return _getMonthCaption().textContent;
    },
    getMonthDropdownLabel: function getMonthDropdownLabel() {
      return getMonthDropdownButton().textContent;
    },
    getSelectedYear: function getSelectedYear() {
      return getYearDropdown().textContent;
    },
    getFocusedDay: function getFocusedDay() {
      return element.querySelector('.DayPicker-Day--keyboard-selected').textContent;
    },
    pressLeftArrow: function pressLeftArrow() {
      return inputDriver.trigger('keyDown', { key: 'ArrowLeft', keyCode: 37 });
    },
    pressRightArrow: function pressRightArrow() {
      return inputDriver.trigger('keyDown', { key: 'ArrowRight', keyCode: 39 });
    },
    getSelectedDay: function getSelectedDay() {
      return _getSelectedDay().textContent;
    },
    getWidth: function getWidth() {
      return element.style.width;
    },

    getMonthDropdownDriver: function getMonthDropdownDriver() {
      _testUtils2.default.Simulate.click(element.querySelector('[data-hook="datepicker-month-dropdown-button"]'));

      return (0, _DropdownLayout2.default)({
        element: wrapper.querySelector('[data-hook="datepicker-month-dropdown-menu"]'),
        wrapper: wrapper
      });
    },

    getYearDropdownDriver: function getYearDropdownDriver() {
      _testUtils2.default.Simulate.click(element.querySelector('[data-hook="datepicker-year-dropdown-button"]'));

      return (0, _DropdownLayout2.default)({
        element: wrapper.querySelector('[data-hook="datepicker-year-dropdown-menu"]'),
        wrapper: wrapper
      });
    },

    mouseClickOutside: function mouseClickOutside() {
      return document.body.dispatchEvent(new Event('mouseup', { cancelable: true }));
    }
  };

  return {
    driver: driver,
    inputDriver: inputDriver,
    calendarDriver: calendarDriver
  };
};

exports.default = datePickerDriverFactory;