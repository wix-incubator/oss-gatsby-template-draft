'use strict';

var _eyes = require('eyes.it');

var _eyes2 = _interopRequireDefault(_eyes);

var _protractor = require('../../testkit/protractor');

var _storybookHelpers = require('../../test/utils/storybook-helpers');

var _AutoExampleDriver = require('wix-storybook-utils/AutoExampleDriver');

var _AutoExampleDriver2 = _interopRequireDefault(_AutoExampleDriver);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('DatePicker', function () {
  var storyUrl = (0, _storybookHelpers.getStoryUrl)('3. Inputs', '3.6 DatePicker');

  var _datePickerTestkitFac = (0, _protractor.datePickerTestkitFactory)({ dataHook: 'storybook-datepicker' }),
      inputDriver = _datePickerTestkitFac.inputDriver,
      calendarDriver = _datePickerTestkitFac.calendarDriver;

  beforeAll(function () {
    browser.get(storyUrl);
  });

  beforeEach(function () {
    _AutoExampleDriver2.default.reset();
  });

  _eyes2.default.it('should not open calendar when disabled', function () {
    _AutoExampleDriver2.default.setProps({ disabled: true });
    inputDriver.click();

    expect(calendarDriver.exists()).toBe(false);
  });

  _eyes2.default.it('should not close calendar on selecting date with click when shouldCloseOnSelect prop set to false', function () {
    _AutoExampleDriver2.default.setProps({ shouldCloseOnSelect: false });
    inputDriver.click();

    calendarDriver.clickOnNthAvailableDay(10);

    expect(calendarDriver.exists()).toBe(true);
    expect(calendarDriver.isVisible()).toBe(true);
  });

  describe('default', function () {
    _eyes2.default.it('should show inputDriver', function () {
      expect(inputDriver.isVisible()).toBe(true);
    });

    _eyes2.default.it('should open calendar when click on inputDriver', function () {
      inputDriver.click();
      expect(calendarDriver.exists()).toBe(true);
      expect(calendarDriver.isVisible()).toBe(true);
    }, { version: '<Input/> - On text click - select all' });

    _eyes2.default.it('should close calendar on selecting date with click', function () {
      inputDriver.click();
      calendarDriver.clickOnNthAvailableDay(1);
      expect(calendarDriver.exists()).toBe(false);
    });

    _eyes2.default.it('should close calendar on Escape key', function () {
      inputDriver.click();
      expect(calendarDriver.exists()).toBe(true);

      inputDriver.pressEscKey();
      expect(calendarDriver.exists()).toBe(false);
    }, { version: '<Input/> - On text click - select all' });

    _eyes2.default.it('should close calendar on Tab key', function () {
      inputDriver.click();
      expect(calendarDriver.exists()).toBe(true);

      inputDriver.pressTabKey();
      expect(calendarDriver.exists()).toBe(false);
    });

    _eyes2.default.it('should not change date', function () {
      _AutoExampleDriver2.default.setProps({ value: new Date('2017/05/01') });
      inputDriver.click();
      inputDriver.pressEnterKey();

      expect(inputDriver.getValue()).toBe('2017/05/01');
    }, { version: '<Input/> - On text click - select all' });

    _eyes2.default.it('should select next day date', function () {
      _AutoExampleDriver2.default.setProps({ value: new Date('2017/05/01') });
      inputDriver.click();
      inputDriver.pressArrowRightKey();
      inputDriver.pressEnterKey();

      expect(inputDriver.getValue()).toBe('2017/05/02');
    });
  });

  describe('with year and month dropdown', function () {
    beforeEach(function () {
      return _AutoExampleDriver2.default.setProps({
        showYearDropdown: true,
        showMonthDropdown: true,
        value: new Date('2017/05/01')
      });
    });

    _eyes2.default.it('should be scrolled to current year', function () {
      inputDriver.click();
      calendarDriver.openYearDropdownOptions();
      expect(calendarDriver.isYearInViewPort('2017')).toBeTruthy();
    });

    _eyes2.default.it('should select 2027 year', function () {
      inputDriver.click();

      calendarDriver.openYearDropdownOptions();
      calendarDriver.clickOnNthYear();
      calendarDriver.clickOnNthAvailableDay();

      expect(inputDriver.getValue()).toBe('2027/05/01');
    });

    _eyes2.default.it('should select February', function () {
      inputDriver.click();

      calendarDriver.openMonthDropdownOptions();
      calendarDriver.clickOnNthMonth(2);
      calendarDriver.clickOnNthAvailableDay();

      expect(inputDriver.getValue()).toBe('2017/02/01');
    });

    _eyes2.default.it('should select February and 2026 year', function () {
      inputDriver.click();

      calendarDriver.openYearDropdownOptions();
      calendarDriver.clickOnNthYear(2);
      calendarDriver.openMonthDropdownOptions();
      calendarDriver.clickOnNthMonth(2);
      calendarDriver.clickOnNthAvailableDay();

      expect(inputDriver.getValue()).toBe('2026/02/01');
    });
  });
});