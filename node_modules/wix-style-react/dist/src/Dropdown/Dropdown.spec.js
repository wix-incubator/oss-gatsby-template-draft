'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _testUtils = require('react-dom/test-utils');

var _testUtils2 = _interopRequireDefault(_testUtils);

var _Dropdown = require('./Dropdown.driver');

var _Dropdown2 = _interopRequireDefault(_Dropdown);

var _Dropdown3 = require('./Dropdown');

var _Dropdown4 = _interopRequireDefault(_Dropdown3);

var _driverFactory = require('wix-ui-test-utils/driver-factory');

var _testkit = require('../../testkit');

var _enzyme = require('../../testkit/enzyme');

var _enzyme2 = require('enzyme');

var _InputWithOptions = require('../InputWithOptions/InputWithOptions.spec');

var _reactHelpers = require('wix-ui-test-utils/react-helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _InputWithOptions.runInputWithOptionsTest)(_Dropdown2.default);

describe('Dropdown', function () {

  var createDriver = (0, _driverFactory.createDriverFactory)(_Dropdown2.default);

  var getOptions = function getOptions() {
    return [{ id: 0, value: 'Option 1' }, { id: 1, value: 'Option 2' }, { id: 2, value: 'Option 3', disabled: true }, { id: 3, value: 'Option 4' }, { id: 'divider1', value: '-' }, { id: 'element1', value: _react2.default.createElement(
        'span',
        { style: { color: 'brown' } },
        'Option 4'
      ) }];
  };

  it('should select item with selectedId on init state', function () {
    var _createDriver = createDriver(_react2.default.createElement(_Dropdown4.default, { options: getOptions(), selectedId: 0 })),
        inputDriver = _createDriver.inputDriver,
        dropdownLayoutDriver = _createDriver.dropdownLayoutDriver;

    expect(dropdownLayoutDriver.isOptionSelected(0)).toBeTruthy();
    expect(inputDriver.getValue()).toBe('Option 1');
  });

  it('should select an item when clicked', function () {
    var _createDriver2 = createDriver(_react2.default.createElement(_Dropdown4.default, { options: getOptions() })),
        driver = _createDriver2.driver,
        dropdownLayoutDriver = _createDriver2.dropdownLayoutDriver;

    driver.focus();
    dropdownLayoutDriver.clickAtOption(0);
    expect(dropdownLayoutDriver.isOptionSelected(0)).toBeTruthy();
  });

  it('should enter the selected option text when selected', function () {
    var _createDriver3 = createDriver(_react2.default.createElement(_Dropdown4.default, { options: getOptions() })),
        driver = _createDriver3.driver,
        inputDriver = _createDriver3.inputDriver,
        dropdownLayoutDriver = _createDriver3.dropdownLayoutDriver;

    driver.focus();
    dropdownLayoutDriver.clickAtOption(0);
    expect(inputDriver.getValue()).toBe('Option 1');
  });

  it('should update text when selected option changes', function () {
    var options = getOptions();

    var _createDriver4 = createDriver(_react2.default.createElement(_Dropdown4.default, { options: options, selectedId: 0 })),
        driver = _createDriver4.driver,
        inputDriver = _createDriver4.inputDriver,
        dropdownLayoutDriver = _createDriver4.dropdownLayoutDriver;

    driver.focus();
    dropdownLayoutDriver.clickAtOption(0);
    expect(inputDriver.getValue()).toBe('Option 1');
    options[0].value = 'Updated';
    driver.setProps({ options: options, selectedId: 0 });
    expect(inputDriver.getValue()).toBe('Updated');
  });

  it('should close when clicking on input (header)', function () {
    var _createDriver5 = createDriver(_react2.default.createElement(_Dropdown4.default, { options: getOptions() })),
        dropdownLayoutDriver = _createDriver5.dropdownLayoutDriver,
        inputDriver = _createDriver5.inputDriver;

    inputDriver.click();
    expect(dropdownLayoutDriver.isShown()).toBeTruthy();

    return (0, _reactHelpers.sleep)(200).then(function () {
      inputDriver.click();
      expect(dropdownLayoutDriver.isShown()).toBeFalsy();
    });
  });

  it('should be read only', function () {
    var _createDriver6 = createDriver(_react2.default.createElement(_Dropdown4.default, { options: getOptions() })),
        driver = _createDriver6.driver;

    expect(driver.isReadOnly()).toBeTruthy();
  });

  describe('testkit', function () {
    it('should exist', function () {
      var div = document.createElement('div');
      var dataHook = 'myDataHook';
      var wrapper = div.appendChild(_testUtils2.default.renderIntoDocument(_react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(_Dropdown4.default, { dataHook: dataHook })
      )));
      var dropdownTestkit = (0, _testkit.dropdownTestkitFactory)({ wrapper: wrapper, dataHook: dataHook });
      expect(dropdownTestkit.driver.exists()).toBeTruthy();
      expect(dropdownTestkit.inputDriver.exists()).toBeTruthy();
      expect(dropdownTestkit.dropdownLayoutDriver.exists()).toBeTruthy();
    });
  });

  describe('enzyme testkit', function () {
    it('should exist', function () {
      var dataHook = 'myDataHook';
      var wrapper = (0, _enzyme2.mount)(_react2.default.createElement(_Dropdown4.default, { dataHook: dataHook }));
      var dropdownTestkit = (0, _enzyme.dropdownTestkitFactory)({ wrapper: wrapper, dataHook: dataHook });
      expect(dropdownTestkit.driver.exists()).toBeTruthy();
      expect(dropdownTestkit.inputDriver.exists()).toBeTruthy();
      expect(dropdownTestkit.dropdownLayoutDriver.exists()).toBeTruthy();
    });
  });
});