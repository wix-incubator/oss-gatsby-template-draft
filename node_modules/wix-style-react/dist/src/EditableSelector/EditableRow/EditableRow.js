'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _WixComponent2 = require('../../BaseComponents/WixComponent');

var _WixComponent3 = _interopRequireDefault(_WixComponent2);

var _Input = require('../../Input');

var _Input2 = _interopRequireDefault(_Input);

var _Tooltip = require('../../Tooltip');

var _Tooltip2 = _interopRequireDefault(_Tooltip);

var _Button = require('../../Button');

var _Button2 = _interopRequireDefault(_Button);

var _X = require('../../new-icons/X');

var _X2 = _interopRequireDefault(_X);

var _Check = require('../../new-icons/Check');

var _Check2 = _interopRequireDefault(_Check);

var _EditableSelector = require('../EditableSelector.scss');

var _EditableSelector2 = _interopRequireDefault(_EditableSelector);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EditableRow = function (_WixComponent) {
  _inherits(EditableRow, _WixComponent);

  function EditableRow(props) {
    _classCallCheck(this, EditableRow);

    var _this = _possibleConstructorReturn(this, (EditableRow.__proto__ || Object.getPrototypeOf(EditableRow)).call(this, props));

    _this.onApprove = function () {
      _this.props.onApprove && _this.props.onApprove(_this.state.newOption);
    };

    _this.onCancel = function () {
      _this.props.onCancel && _this.props.onCancel();
    };

    _this.state = {
      newOption: props.newOption || ''
    };
    return _this;
  }

  _createClass(EditableRow, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      _get(EditableRow.prototype.__proto__ || Object.getPrototypeOf(EditableRow.prototype), 'componentDidMount', this).call(this);
      this.input.focus();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        'div',
        { 'data-hook': 'edit-row-wrapper', className: _EditableSelector2.default.editableRowContainer },
        _react2.default.createElement(
          'div',
          { className: _EditableSelector2.default.editableRowInputWrap },
          _react2.default.createElement(_Input2.default, {
            ref: function ref(input) {
              return _this2.input = input;
            },
            className: _EditableSelector2.default.editableRowInput,
            dataHook: 'edit-row-input',
            value: this.state.newOption,
            onChange: function onChange(event) {
              return _this2.setState({ newOption: event.target.value });
            },
            onEnterPressed: function onEnterPressed() {
              return _this2.onApprove();
            },
            onEscapePressed: function onEscapePressed() {
              return _this2.onCancel();
            },
            size: 'normal',
            textOverflow: 'clip',
            theme: 'normal',
            width: 'initial'
          })
        ),
        _react2.default.createElement(
          'div',
          { className: _EditableSelector2.default.editableRowButtons },
          _react2.default.createElement(
            _Tooltip2.default,
            {
              content: 'Cancel',
              shouldCloseOnClickOutside: true,
              theme: 'dark'
            },
            _react2.default.createElement(
              _Button2.default,
              { onClick: function onClick() {
                  return _this2.onCancel();
                }, height: 'medium', theme: 'icon-standardsecondary', dataHook: 'edit-row-cancel-button' },
              _react2.default.createElement(_X2.default, null)
            )
          ),
          _react2.default.createElement(
            _Tooltip2.default,
            {
              content: 'Confirm',
              shouldCloseOnClickOutside: true,
              theme: 'dark'
            },
            _react2.default.createElement(
              _Button2.default,
              { onClick: function onClick() {
                  return _this2.onApprove();
                }, height: 'medium', theme: 'icon-standard', disabled: this.state.newOption.length === 0, dataHook: 'edit-row-approve-button' },
              _react2.default.createElement(_Check2.default, null)
            )
          )
        )
      );
    }
  }]);

  return EditableRow;
}(_WixComponent3.default);

EditableRow.propTypes = {
  newOption: _propTypes2.default.string,
  onApprove: _propTypes2.default.func,
  onCancel: _propTypes2.default.func
};
exports.default = EditableRow;