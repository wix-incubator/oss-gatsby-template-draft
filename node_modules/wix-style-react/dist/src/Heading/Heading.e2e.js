'use strict';

var _eyes = require('eyes.it');

var _eyes2 = _interopRequireDefault(_eyes);

var _protractor = require('wix-ui-test-utils/protractor');

var _protractor2 = require('../../testkit/protractor');

var _protractor3 = require('wix-ui-core/dist/src/testkit/protractor');

var _AutoExampleDriver = require('wix-storybook-utils/AutoExampleDriver');

var _AutoExampleDriver2 = _interopRequireDefault(_AutoExampleDriver);

var _Heading = require('./Heading');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

describe('Heading', function () {
  var storyUrl = (0, _protractor.getStoryUrl)('1. Foundation', '1.3 Heading');

  beforeEach(function () {
    return browser.get(storyUrl);
  });
  afterEach(function () {
    return _AutoExampleDriver2.default.reset();
  });

  _eyes2.default.it('children prop', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
    var dataHook, driver;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            dataHook = 'storybook-heading';
            driver = (0, _protractor2.headingTestkitFactory)({ dataHook: dataHook });
            _context.next = 4;
            return (0, _protractor.waitForVisibilityOf)(driver.element(), 'Cannot find Heading');

          case 4:

            expect(driver.getText()).toBe('Hey there, good looking');

          case 5:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined);
  })));

  _eyes2.default.it('appearance prop', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
    var dataHook, driver;
    return regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            dataHook = 'storybook-heading';
            driver = (0, _protractor2.headingTestkitFactory)({ dataHook: dataHook });


            Object.keys(_Heading.APPEARANCES).forEach(function () {
              var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(appearance) {
                return regeneratorRuntime.wrap(function _callee2$(_context2) {
                  while (1) {
                    switch (_context2.prev = _context2.next) {
                      case 0:
                        _context2.next = 2;
                        return _AutoExampleDriver2.default.setProps({ appearance: appearance });

                      case 2:
                        _context2.next = 4;
                        return (0, _protractor.waitForVisibilityOf)(driver.element(), 'Cannot find Heading');

                      case 4:
                        _context2.next = 6;
                        return _eyes2.default.checkWindow(appearance);

                      case 6:
                      case 'end':
                        return _context2.stop();
                    }
                  }
                }, _callee2, undefined);
              }));

              return function (_x) {
                return _ref3.apply(this, arguments);
              };
            }());

          case 3:
          case 'end':
            return _context3.stop();
        }
      }
    }, _callee3, undefined);
  })));

  _eyes2.default.it('light prop', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
    var dataHook, driver;
    return regeneratorRuntime.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            dataHook = 'storybook-heading';
            driver = (0, _protractor2.headingTestkitFactory)({ dataHook: dataHook });
            _context4.next = 4;
            return (0, _protractor.waitForVisibilityOf)(driver.element(), 'Cannot find Heading');

          case 4:
            _context4.next = 6;
            return _eyes2.default.checkWindow('dark');

          case 6:
            _context4.next = 8;
            return _AutoExampleDriver2.default.setProps({ light: true });

          case 8:
            _context4.next = 10;
            return (0, _protractor.waitForVisibilityOf)(driver.element(), 'Cannot find Heading');

          case 10:
            _context4.next = 12;
            return _eyes2.default.checkWindow('light');

          case 12:
          case 'end':
            return _context4.stop();
        }
      }
    }, _callee4, undefined);
  })));

  describe('with tooltip', function () {
    _eyes2.default.it('should not show tooltip on hover when text is not truncated with ellipses', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
      var dataHook, driver, tooltipDriver;
      return regeneratorRuntime.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              dataHook = 'storybook-heading';
              driver = (0, _protractor2.headingTestkitFactory)({ dataHook: dataHook });
              tooltipDriver = (0, _protractor3.tooltipTestkitFactory)({ dataHook: dataHook });
              _context5.next = 5;
              return (0, _protractor.waitForVisibilityOf)(driver.element(), 'Cannot find Heading');

            case 5:
              expect(tooltipDriver.isContentElementExists()).toBeFalsy();
              _context5.next = 8;
              return tooltipDriver.mouseEnter();

            case 8:
              expect(tooltipDriver.isContentElementExists()).toBeFalsy();

            case 9:
            case 'end':
              return _context5.stop();
          }
        }
      }, _callee5, undefined);
    })));

    _eyes2.default.it('should show tooltip on hover when text is truncated with ellipses', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {
      var dataHook, driver, tooltipDriver;
      return regeneratorRuntime.wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              dataHook = 'heading-with-ellipses';
              driver = (0, _protractor2.headingTestkitFactory)({ dataHook: dataHook });
              tooltipDriver = (0, _protractor3.tooltipTestkitFactory)({ dataHook: dataHook });
              _context6.next = 5;
              return (0, _protractor.waitForVisibilityOf)(driver.element(), 'Cannot find Heading');

            case 5:
              expect(tooltipDriver.isContentElementExists()).toBeFalsy();
              _context6.next = 8;
              return tooltipDriver.mouseEnter();

            case 8:
              expect(tooltipDriver.isContentElementExists()).toBeTruthy();

            case 9:
            case 'end':
              return _context6.stop();
          }
        }
      }, _callee6, undefined);
    })));
  });
});