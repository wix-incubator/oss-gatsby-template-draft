'use strict';

var _Ticker = require('./testkit/Ticker');

var _sinon = require('sinon');

describe('<Ticker/>', function () {

  var createDriver = function createDriver(props) {
    return (0, _Ticker.tickerDriverFactory)((0, _Ticker.componentFactory)(props));
  };

  it('should create a ticker', function () {
    var driver = createDriver({});
    expect(driver.exists()).toEqual(true);
  });

  it('should allow handling up action', function () {
    var onUp = (0, _sinon.spy)();
    var driver = createDriver({ onUp: onUp });
    driver.clickUp();
    expect(onUp.calledOnce).toEqual(true);
  });

  it('should allow handling down action', function () {
    var onDown = (0, _sinon.spy)();
    var driver = createDriver({ onDown: onDown });
    driver.clickDown();
    expect(onDown.calledOnce).toEqual(true);
  });

  it('should allow disabling up action', function () {
    var onUp = (0, _sinon.spy)();
    var driver = createDriver({ onUp: onUp, upDisabled: true });

    expect(driver.isUpDisabled()).toEqual(true);

    driver.clickUp();
    expect(onUp.calledOnce).toEqual(false);
  });

  it('should allow disabling down action', function () {
    var onDown = (0, _sinon.spy)();
    var driver = createDriver({ onDown: onDown, downDisabled: true });

    expect(driver.isDownDisabled()).toEqual(true);

    driver.clickUp();
    expect(onDown.calledOnce).toEqual(false);
  });
});