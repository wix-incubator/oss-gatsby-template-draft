'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _WixComponent2 = require('../BaseComponents/WixComponent');

var _WixComponent3 = _interopRequireDefault(_WixComponent2);

var _Arc = require('./Arc');

var _Arc2 = _interopRequireDefault(_Arc);

var _Loader = require('./Loader.scss');

var _Loader2 = _interopRequireDefault(_Loader);

var _Tooltip = require('../Tooltip');

var _Tooltip2 = _interopRequireDefault(_Tooltip);

var _FormFieldError = require('../new-icons/system/FormFieldError');

var _FormFieldError2 = _interopRequireDefault(_FormFieldError);

var _FormFieldErrorSmall = require('../new-icons/system/FormFieldErrorSmall');

var _FormFieldErrorSmall2 = _interopRequireDefault(_FormFieldErrorSmall);

var _ToggleOn = require('../new-icons/system/ToggleOn');

var _ToggleOn2 = _interopRequireDefault(_ToggleOn);

var _CircleLoaderCheck = require('../new-icons/system/CircleLoaderCheck');

var _CircleLoaderCheck2 = _interopRequireDefault(_CircleLoaderCheck);

var _CircleLoaderCheckSmall = require('../new-icons/system/CircleLoaderCheckSmall');

var _CircleLoaderCheckSmall2 = _interopRequireDefault(_CircleLoaderCheckSmall);

var _Typography = require('../Typography');

var _Typography2 = _interopRequireDefault(_Typography);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var arcsAngles = {
  tiny: {
    light: 216,
    dark: 144
  },
  small: {
    light: 216,
    dark: 144
  },
  medium: {
    light: 108,
    dark: 108
  },
  large: {
    light: 180,
    dark: 180
  }
};
var strokeWidths = {
  tiny: 3,
  small: 4,
  medium: 4,
  large: 4
};
var sizesInPx = {
  tiny: 18,
  small: 30,
  medium: 54,
  large: 102
};

var FULL_CIRCLE_ANGLE = 359;

var sizeToSuccessIcon = {
  tiny: _react2.default.createElement(_ToggleOn2.default, null),
  small: _react2.default.createElement(_CircleLoaderCheckSmall2.default, null),
  medium: _react2.default.createElement(_CircleLoaderCheck2.default, null),
  large: _react2.default.createElement(_CircleLoaderCheck2.default, null)
};

var sizeToErrorIcon = {
  tiny: _react2.default.createElement(_FormFieldError2.default, null),
  small: _react2.default.createElement(_FormFieldErrorSmall2.default, null),
  medium: _react2.default.createElement(_FormFieldError2.default, null),
  large: _react2.default.createElement(_FormFieldError2.default, null)
};

var Loader = function (_WixComponent) {
  _inherits(Loader, _WixComponent);

  function Loader() {
    _classCallCheck(this, Loader);

    return _possibleConstructorReturn(this, (Loader.__proto__ || Object.getPrototypeOf(Loader)).apply(this, arguments));
  }

  _createClass(Loader, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          size = _props.size,
          color = _props.color,
          text = _props.text,
          status = _props.status,
          statusMessage = _props.statusMessage;

      var sizeInPx = sizesInPx[size];
      var shouldShowFullCircle = status !== 'loading';
      var lightArcAngle = !shouldShowFullCircle ? arcsAngles[size].light : FULL_CIRCLE_ANGLE;
      var darkArcAngle = !shouldShowFullCircle ? arcsAngles[size].dark : FULL_CIRCLE_ANGLE;
      var shouldShowText = size !== 'tiny';
      var successIcon = sizeToSuccessIcon[size];
      var errorIcon = sizeToErrorIcon[size];
      var strokeWidth = strokeWidths[size];

      var loader = _react2.default.createElement(
        'div',
        {
          className: _Loader2.default.arcsContainer,
          style: {
            width: sizeInPx + 'px',
            height: sizeInPx + 'px'
          }
        },
        _react2.default.createElement(_Arc2.default, {
          angle: lightArcAngle,
          className: _Loader2.default.lightArc,
          strokeWidth: strokeWidth,
          viewBoxSize: sizeInPx
        }),
        _react2.default.createElement(_Arc2.default, {
          angle: darkArcAngle,
          className: _Loader2.default.darkArc,
          strokeWidth: strokeWidth,
          viewBoxSize: sizeInPx
        }),
        status !== 'loading' && _react2.default.createElement(
          'div',
          { className: _Loader2.default.statusIndicator },
          status === 'success' && successIcon,
          status === 'error' && errorIcon
        )
      );

      return _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)(_Loader2.default.loaderContainer, _Loader2.default[size], _Loader2.default[color], _Loader2.default[status]) },
        statusMessage ? _react2.default.createElement(
          _Tooltip2.default,
          { dataHook: 'loader-tooltip', placement: 'top', textAlign: 'center', alignment: 'center', content: statusMessage, theme: 'dark' },
          loader
        ) : loader,
        shouldShowText && text && _react2.default.createElement(
          'div',
          { className: _Loader2.default.text },
          _react2.default.createElement(
            'span',
            { className: _Typography2.default.t5, 'data-hook': 'loader-text' },
            this.props.text
          )
        )
      );
    }
  }]);

  return Loader;
}(_WixComponent3.default);

Loader.displayName = 'Loader';
Loader.propTypes = {
  /** The size of the loader */
  size: _propTypes2.default.oneOf(['tiny', 'small', 'medium', 'large']),

  /** The color of the loader */
  color: _propTypes2.default.oneOf(['blue', 'white']),

  /** Node (usually text) to be shown below the loader */
  text: _propTypes2.default.node,

  /** The status of the loader */
  status: _propTypes2.default.oneOf(['loading', 'success', 'error']),

  /** Text to be shown in the tolltip **/
  statusMessage: _propTypes2.default.string
};
Loader.defaultProps = {
  size: 'medium',
  color: 'blue',
  status: 'loading'
};
exports.default = Loader;