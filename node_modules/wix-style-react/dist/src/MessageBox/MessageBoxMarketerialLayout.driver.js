'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _testUtils = require('react-dom/test-utils');

var _testUtils2 = _interopRequireDefault(_testUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var messageBoxMarketerialLayoutDriverFactory = function messageBoxMarketerialLayoutDriverFactory(_ref) {
  var element = _ref.element,
      wrapper = _ref.wrapper,
      component = _ref.component;

  var primaryButton = function primaryButton() {
    return element.querySelector('[data-hook="primary-button"]');
  };
  var secondaryButton = function secondaryButton() {
    return element.querySelector('[data-hook="secondary-button"]');
  };
  var closeButton = function closeButton() {
    return element.querySelector('[data-hook="close-button"]');
  };

  return {
    exists: function exists() {
      return !!element;
    },
    getPrimaryButtonText: function getPrimaryButtonText() {
      return primaryButton().textContent;
    },
    getPrimaryButton: primaryButton,
    getSecondaryButtonText: function getSecondaryButtonText() {
      return secondaryButton().textContent;
    },
    getSecondaryButton: secondaryButton,
    clickOnPrimaryButton: function clickOnPrimaryButton() {
      return _testUtils2.default.Simulate.click(primaryButton());
    },
    clickOnSecondaryButton: function clickOnSecondaryButton() {
      return _testUtils2.default.Simulate.click(secondaryButton());
    },
    closeMessageBox: function closeMessageBox() {
      return _testUtils2.default.Simulate.click(closeButton());
    },
    getTitle: function getTitle() {
      return element.querySelector('[data-hook="message-box-title"]').textContent;
    },
    getContentBySelector: function getContentBySelector(selector) {
      return element.querySelector(selector);
    },
    getImageSrc: function getImageSrc() {
      return element.querySelector('[data-hook="header-image"]').src;
    },
    setProps: function setProps(props) {
      var ClonedWithProps = _react2.default.cloneElement.apply(_react2.default, [component, Object.assign({}, component.props, props)].concat(_toConsumableArray(component.props.children || [])));
      _reactDom2.default.render(_react2.default.createElement(
        'div',
        { ref: function ref(r) {
            return element = r;
          } },
        ClonedWithProps
      ), wrapper);
    }
  };
};

exports.default = messageBoxMarketerialLayoutDriverFactory;