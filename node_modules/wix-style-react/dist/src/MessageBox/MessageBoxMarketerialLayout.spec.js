'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _MessageBoxMarketerialLayout = require('./MessageBoxMarketerialLayout');

var _MessageBoxMarketerialLayout2 = _interopRequireDefault(_MessageBoxMarketerialLayout);

var _MessageBoxMarketerialLayout3 = require('./MessageBoxMarketerialLayout.driver');

var _MessageBoxMarketerialLayout4 = _interopRequireDefault(_MessageBoxMarketerialLayout3);

var _driverFactory = require('wix-ui-test-utils/driver-factory');

var _sinon = require('sinon');

var _sinon2 = _interopRequireDefault(_sinon);

var _testkitSanity = require('../../test/utils/testkit-sanity');

var _testkit = require('../../testkit');

var _enzyme = require('../../testkit/enzyme');

var _enzyme2 = require('enzyme');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('MessageBoxMarketerialLayout', function () {
  var createDriver = (0, _driverFactory.createDriverFactory)(_MessageBoxMarketerialLayout4.default);
  var requiredProps = {
    title: 'title',
    content: _react2.default.createElement('div', null),
    onClose: function onClose() {}
  };

  describe('action buttons', function () {
    it('should display the primary button label text on top the primary button', function () {
      var props = Object.assign({}, requiredProps, {
        primaryButtonLabel: 'primaryButtonLabel'
      });
      var driver = createDriver(_react2.default.createElement(_MessageBoxMarketerialLayout2.default, props));
      expect(driver.getPrimaryButtonText()).toBe(props.primaryButtonLabel);
    });

    it('should not display the primary button if primary button label was not passed', function () {
      var props = Object.assign({}, requiredProps, {});
      var driver = createDriver(_react2.default.createElement(_MessageBoxMarketerialLayout2.default, props));
      expect(driver.getPrimaryButton()).toBeNull();
    });

    it('should display the secondary button label text on top the secondary button', function () {
      var props = Object.assign({}, requiredProps, {
        secondaryButtonLabel: 'secondaryButtonLabel'
      });
      var driver = createDriver(_react2.default.createElement(_MessageBoxMarketerialLayout2.default, props));
      expect(driver.getSecondaryButtonText()).toBe(props.secondaryButtonLabel);
    });

    it('should not display the secondary button if secondary button label was not passed', function () {
      var props = Object.assign({}, requiredProps, {});
      var driver = createDriver(_react2.default.createElement(_MessageBoxMarketerialLayout2.default, props));
      expect(driver.getSecondaryButton()).toBeNull();
    });

    it('should trigger the primary button action upon clicking the primary button', function () {
      var props = Object.assign({}, requiredProps, {
        onPrimaryButtonClick: _sinon2.default.spy(),
        primaryButtonLabel: 'primaryButtonLabel'
      });
      var driver = createDriver(_react2.default.createElement(_MessageBoxMarketerialLayout2.default, props));
      driver.clickOnPrimaryButton();
      expect(props.onPrimaryButtonClick.calledOnce).toBeTruthy();
    });

    it('should trigger the secondary button action upon clicking the secondary button', function () {
      var props = Object.assign({}, requiredProps, {
        onSecondaryButtonClick: _sinon2.default.spy(),
        secondaryButtonLabel: 'secondaryButtonLabel'
      });
      var driver = createDriver(_react2.default.createElement(_MessageBoxMarketerialLayout2.default, props));
      driver.clickOnSecondaryButton();
      expect(props.onSecondaryButtonClick.calledOnce).toBeTruthy();
    });

    it('should close the message dialog upon clicking the close button', function () {
      var props = Object.assign({}, requiredProps, {
        onClose: _sinon2.default.spy()
      });
      var driver = createDriver(_react2.default.createElement(_MessageBoxMarketerialLayout2.default, props));
      driver.closeMessageBox();
      expect(props.onClose.calledOnce).toBeTruthy();
    });
  });

  describe('general', function () {
    it('should render title', function () {
      var props = Object.assign({}, requiredProps, {
        title: 'title'
      });
      var driver = createDriver(_react2.default.createElement(_MessageBoxMarketerialLayout2.default, props));
      expect(driver.getTitle()).toBe(props.title);
    });

    it('should render the passed content in the markup', function () {
      var props = Object.assign({}, requiredProps, {
        content: _react2.default.createElement('div', { 'data-hook': 'inner-div' })
      });
      var driver = createDriver(_react2.default.createElement(_MessageBoxMarketerialLayout2.default, props));
      expect(driver.getContentBySelector('[data-hook="inner-div"]')).not.toBeNull();
    });

    it('should render image from given imageUrl', function () {
      var props = Object.assign({}, requiredProps, {
        imageUrl: 'http://www.domstechblog.com/wp-content/uploads/2015/09/wix.png'
      });
      var driver = createDriver(_react2.default.createElement(_MessageBoxMarketerialLayout2.default, props));
      expect(driver.getImageSrc()).toBe(props.imageUrl);
    });

    it('should render image from given component', function () {
      var props = Object.assign({}, requiredProps, {
        imageComponent: _react2.default.createElement('div', { 'data-hook': 'image-component-test' })
      });
      var driver = createDriver(_react2.default.createElement(_MessageBoxMarketerialLayout2.default, props));
      expect(driver.getContentBySelector('[data-hook="image-component-test"]')).not.toBeNull();
    });

    it('should use default color theme (blue) if none was passed', function () {
      var props = Object.assign({}, requiredProps, {
        primaryButtonLabel: 'primaryButtonLabel'
      });
      var driver = createDriver(_react2.default.createElement(_MessageBoxMarketerialLayout2.default, props));
      expect(driver.getPrimaryButton().className).toContain('fullblue');
    });

    it('should use color theme', function () {
      var props = Object.assign({}, requiredProps, {
        primaryButtonLabel: 'primaryButtonLabel',
        theme: 'purple'
      });
      var driver = createDriver(_react2.default.createElement(_MessageBoxMarketerialLayout2.default, props));
      expect(driver.getPrimaryButton().className).toContain('fullpurple');
    });
  });

  describe('testkit', function () {
    it('should exist', function () {
      expect((0, _testkitSanity.isTestkitExists)(_react2.default.createElement(_MessageBoxMarketerialLayout2.default, requiredProps), _testkit.messageBoxMarketerialLayoutTestkitFactory)).toBe(true);
    });
  });

  describe('enzyme testkit', function () {
    it('should exist', function () {
      expect((0, _testkitSanity.isEnzymeTestkitExists)(_react2.default.createElement(_MessageBoxMarketerialLayout2.default, requiredProps), _enzyme.messageBoxMarketerialLayoutTestkitFactory, _enzyme2.mount)).toBe(true);
    });
  });
});