'use strict';

var _protractor = require('../../testkit/protractor');

var _protractor2 = require('wix-ui-test-utils/protractor');

var _storybookHelpers = require('../../test/utils/storybook-helpers');

var _protractor3 = require('protractor');

var _eyes = require('eyes.it');

var _eyes2 = _interopRequireDefault(_eyes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

describe('MultiSelect', function () {
  var storyUrl = (0, _storybookHelpers.getStoryUrl)('3. Inputs', '3.8 Tags');
  var driver = (0, _protractor.multiSelectTestkitFactory)({ dataHook: 'multi-select' });

  beforeEach(function () {
    browser.get(storyUrl);
  });

  _eyes2.default.it('should show focus style', function () {
    return (0, _protractor2.waitForVisibilityOf)(driver.element(), 'Cannot find <MultiSelect/>').then(_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return browser.actions().sendKeys(_protractor3.protractor.Key.TAB).perform();

            case 2:
              _context.next = 4;
              return browser.actions().sendKeys(_protractor3.protractor.Key.TAB).perform();

            case 4:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, undefined);
    }))
    // Should be in focus now
    );
  });

  _eyes2.default.it('should break to new line when needed', function () {
    var ELEMENT_HEIGHT_MULTILINE = 66;

    (0, _protractor2.waitForVisibilityOf)(driver.element(), 'Cannot find <MultiSelect/>').then(function () {
      for (var i = 0; i < 9; i++) {
        driver.addTag();
      }
      return driver.getHeight();
    }).then(function (height) {
      expect(height).toBe(ELEMENT_HEIGHT_MULTILINE);
    });
  }, { version: '<Input/> - On text click - select all' });
});