'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _InputWithOptionsProtractor = require('../InputWithOptions/InputWithOptions.protractor.driver');

var _InputWithOptionsProtractor2 = _interopRequireDefault(_InputWithOptionsProtractor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var multiSelectDriverFactory = function multiSelectDriverFactory(component) {
  return _extends({}, (0, _InputWithOptionsProtractor2.default)(component), {
    addTag: function addTag() {
      component.click();
      component.$('[data-hook^="dropdown-item"]:first-of-type').click();
    },
    element: function element() {
      return component;
    },
    getHeight: function getHeight() {
      return component.getSize().then(function (size) {
        return size.height;
      });
    },
    getWidth: function getWidth() {
      return component.getSize().then(function (size) {
        return size.width;
      });
    }
  });
};

exports.default = multiSelectDriverFactory;