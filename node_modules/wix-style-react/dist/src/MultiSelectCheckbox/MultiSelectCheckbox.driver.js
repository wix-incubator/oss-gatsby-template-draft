'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _InputWithOptions = require('../InputWithOptions/InputWithOptions.driver');

var _InputWithOptions2 = _interopRequireDefault(_InputWithOptions);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var multiSelectCheckboxDriverFactory = function multiSelectCheckboxDriverFactory(_ref) {
  var element = _ref.element,
      wrapper = _ref.wrapper,
      component = _ref.component;

  var _inputWithOptionsDriv = (0, _InputWithOptions2.default)({ element: element, wrapper: wrapper }),
      driver = _inputWithOptionsDriv.driver,
      inputDriver = _inputWithOptionsDriv.inputDriver,
      dropdownLayoutDriver = _inputWithOptionsDriv.dropdownLayoutDriver;

  var multiSelectCheckboxDriver = Object.assign(driver, {
    getNumOfLabels: function getNumOfLabels() {
      return this.getLabels().length;
    },

    getLabels: function getLabels() {
      return inputDriver.getValue().split(component.props.delimiter);
    },
    getLabelAt: function getLabelAt(index) {
      return this.getLabels()[index];
    },

    setProps: function setProps(props) {
      var ClonedWithProps = _react2.default.cloneElement.apply(_react2.default, [component, Object.assign({}, component.props, props)].concat(_toConsumableArray(component.props.children || [])));
      _reactDom2.default.render(_react2.default.createElement(
        'div',
        { ref: function ref(r) {
            return element = r;
          } },
        ClonedWithProps
      ), wrapper);
    }
  });

  return { driver: multiSelectCheckboxDriver, inputDriver: inputDriver, dropdownLayoutDriver: dropdownLayoutDriver };
};

exports.default = multiSelectCheckboxDriverFactory;