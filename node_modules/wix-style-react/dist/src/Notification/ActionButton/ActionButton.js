'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Button = require('../../Backoffice/Button');

var _Button2 = _interopRequireDefault(_Button);

var _TextLink = require('../../Backoffice/TextLink');

var _TextLink2 = _interopRequireDefault(_TextLink);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionButton = function ActionButton(_ref) {
  var children = _ref.children,
      _onClick = _ref.onClick,
      type = _ref.type,
      link = _ref.link;

  var commonProps = {
    dataHook: 'notification-cta-button',
    onClick: function onClick(e) {
      return _onClick(e);
    }
  };

  if (type === 'textLink') {
    return _react2.default.createElement(
      _TextLink2.default,
      _extends({ underlineStyle: 'always', theme: 'darkBackground', link: link }, commonProps),
      children
    );
  } else {
    return _react2.default.createElement(
      _Button2.default,
      _extends({ height: 'small', theme: 'transparent' }, commonProps),
      children
    );
  }
};

ActionButton.propTypes = {
  children: _propTypes2.default.any,
  onClick: _propTypes2.default.func,
  link: _propTypes2.default.string,
  type: _propTypes2.default.string
};

ActionButton.defaultProps = {
  onClick: function onClick(e) {
    return e.preventDefault();
  },
  type: 'button'
};

ActionButton.displayName = 'Notification.ActionButton';

exports.default = ActionButton;