'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PagePrivateDriver = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _driverFactory = require('wix-ui-test-utils/driver-factory');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PagePrivateDriver = exports.PagePrivateDriver = function () {
  function PagePrivateDriver(_ref) {
    var element = _ref.element,
        eventTrigger = _ref.eventTrigger;

    _classCallCheck(this, PagePrivateDriver);

    this.element = element;
    this.eventTrigger = eventTrigger;
  }

  _createClass(PagePrivateDriver, [{
    key: 'byDataHook',
    value: function byDataHook(dataHook) {
      return this.element.querySelector('[data-hook="' + dataHook + '"]');
    }
  }, {
    key: 'wheelOnFixedContainer',
    value: function wheelOnFixedContainer(amount) {
      this.eventTrigger.wheel(this.fixedContainer, { deltaY: amount });
    }
  }, {
    key: 'getScrollAmount',
    value: function getScrollAmount() {
      return this.scrollableContainer.scrollTop;
    }
  }, {
    key: 'fixedContainer',
    get: function get() {
      return this.byDataHook('page-fixed-container');
    }
  }, {
    key: 'scrollableContainer',
    get: function get() {
      return this.byDataHook('page-scrollable-content');
    }
  }], [{
    key: 'fromJsxElement',
    value: function fromJsxElement(jsxElement) {
      var driverFactory = function driverFactory(_ref2) {
        var element = _ref2.element,
            eventTrigger = _ref2.eventTrigger;
        return new PagePrivateDriver({ element: element, eventTrigger: eventTrigger });
      };
      return (0, _driverFactory.createDriverFactory)(driverFactory)(jsxElement);
    }
  }]);

  return PagePrivateDriver;
}();