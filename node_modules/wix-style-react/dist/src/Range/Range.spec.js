'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _testUtils = require('react-dom/test-utils');

var _testUtils2 = _interopRequireDefault(_testUtils);

var _Range = require('./Range');

var _Range2 = _interopRequireDefault(_Range);

var _Input = require('../Input');

var _Input2 = _interopRequireDefault(_Input);

var _Label = require('../Label');

var _Label2 = _interopRequireDefault(_Label);

var _DatePicker = require('../DatePicker');

var _DatePicker2 = _interopRequireDefault(_DatePicker);

require('../utils/RangePolyfill.js');

var _testkit = require('../../testkit');

var _enzyme = require('../../testkit/enzyme');

var _enzyme2 = require('enzyme');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('Range', function () {
  describe('testkit', function () {
    it('should exist', function () {
      var div = document.createElement('div');
      var dataHook = 'compHook';
      var wrapper = div.appendChild(_testUtils2.default.renderIntoDocument(_react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          _Range2.default,
          { dataHook: dataHook },
          _react2.default.createElement(_Label2.default, null),
          _react2.default.createElement(_Input2.default, null),
          _react2.default.createElement(_Input2.default, null)
        )
      )));
      var rangeTestkit = (0, _testkit.rangeTestkitFactory)({ wrapper: wrapper, dataHook: dataHook });
      expect(rangeTestkit.exists()).toBeTruthy();
    });

    it('should exist without label', function () {
      var div = document.createElement('div');
      var dataHook = 'compHook';
      var wrapper = div.appendChild(_testUtils2.default.renderIntoDocument(_react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          _Range2.default,
          { dataHook: dataHook },
          _react2.default.createElement(_Input2.default, null),
          _react2.default.createElement(_Input2.default, null)
        )
      )));
      var rangeTestkit = (0, _testkit.rangeTestkitFactory)({ wrapper: wrapper, dataHook: dataHook });
      expect(rangeTestkit.exists()).toBeTruthy();
    });

    it('should work with datePickers', function () {
      var onChange = jest.fn();
      var div = document.createElement('div');
      var dataHook = 'compHook';
      var wrapper = div.appendChild(_testUtils2.default.renderIntoDocument(_react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          _Range2.default,
          { dataHook: dataHook },
          _react2.default.createElement(_DatePicker2.default, { onChange: onChange }),
          _react2.default.createElement(_DatePicker2.default, { onChange: onChange })
        )
      )));
      var rangeTestkit = (0, _testkit.rangeTestkitFactory)({ wrapper: wrapper, dataHook: dataHook });
      expect(rangeTestkit.exists()).toBeTruthy();
    });

    describe('enzyme testkit', function () {
      it('should exist', function () {
        var dataHook = 'myDataHook';
        var wrapper = (0, _enzyme2.mount)(_react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            _Range2.default,
            { dataHook: dataHook },
            _react2.default.createElement(_Label2.default, null),
            _react2.default.createElement(_Input2.default, null),
            _react2.default.createElement(_Input2.default, null)
          )
        ));
        var textFieldTestkit = (0, _enzyme.rangeTestkitFactory)({ wrapper: wrapper, dataHook: dataHook });
        expect(textFieldTestkit.exists()).toBeTruthy();
      });

      it('should exist without label', function () {
        var div = document.createElement('div');
        var dataHook = 'compHook';
        var wrapper = div.appendChild(_testUtils2.default.renderIntoDocument(_react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            _Range2.default,
            { dataHook: dataHook },
            _react2.default.createElement(_Input2.default, null),
            _react2.default.createElement(_Input2.default, null)
          )
        )));
        var rangeTestkit = (0, _testkit.rangeTestkitFactory)({ wrapper: wrapper, dataHook: dataHook });
        expect(rangeTestkit.exists()).toBeTruthy();
      });
    });
  });
});