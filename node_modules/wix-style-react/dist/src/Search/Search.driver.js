'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _InputWithOptions = require('../InputWithOptions/InputWithOptions.driver');

var _InputWithOptions2 = _interopRequireDefault(_InputWithOptions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var EXPANDABLE_CLASS = 'expandableStyles';
var EXPANDABLE_COLLAPSED = 'collapsed';
var EXPANDABLE_EXPANDED = 'expanded';

var searchDriverFactory = function searchDriverFactory(args) {
  var inputWithOptionsDriver = (0, _InputWithOptions2.default)(_extends({}, args, {
    element: args.element && args.element.childNodes[0]
  }));

  var element = args.element;


  return _extends({}, inputWithOptionsDriver, {
    driver: _extends({}, inputWithOptionsDriver.driver, {
      isExpandable: function isExpandable() {
        return element.className.includes(EXPANDABLE_CLASS);
      },
      isCollapsed: function isCollapsed() {
        return element.className.includes(EXPANDABLE_COLLAPSED) && !element.className.includes(EXPANDABLE_EXPANDED);
      }
    })
  });
};

exports.default = searchDriverFactory;