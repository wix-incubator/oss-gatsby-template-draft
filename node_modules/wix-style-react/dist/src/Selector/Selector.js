'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _WixComponent2 = require('../BaseComponents/WixComponent');

var _WixComponent3 = _interopRequireDefault(_WixComponent2);

var _Checkbox = require('../Checkbox');

var _Checkbox2 = _interopRequireDefault(_Checkbox);

var _RadioButton = require('../RadioGroup/RadioButton/RadioButton');

var _RadioButton2 = _interopRequireDefault(_RadioButton);

var _Text = require('../Text');

var _Text2 = _interopRequireDefault(_Text);

var _Selector = require('./Selector.scss');

var _Selector2 = _interopRequireDefault(_Selector);

var _ExtraText = require('./ExtraText');

var _ExtraText2 = _interopRequireDefault(_ExtraText);

var _ProgressBar = require('./ProgressBar');

var _ProgressBar2 = _interopRequireDefault(_ProgressBar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Selector = function (_WixComponent) {
  _inherits(Selector, _WixComponent);

  function Selector() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Selector);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Selector.__proto__ || Object.getPrototypeOf(Selector)).call.apply(_ref, [this].concat(args))), _this), _this.radioButtonAndImageMargins = '57px', _this._onClick = function () {
      return !_this.props.isDisabled && _this.props.onToggle(_this.props.id);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Selector, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          imageSize = _props.imageSize,
          imageShape = _props.imageShape,
          image = _props.image,
          title = _props.title,
          subtitle = _props.subtitle,
          extraNode = _props.extraNode,
          isSelected = _props.isSelected,
          isDisabled = _props.isDisabled,
          toggleType = _props.toggleType;


      return _react2.default.createElement(
        'li',
        {
          className: _Selector2.default.root,
          onClick: this._onClick
        },
        toggleType === 'checkbox' ? _react2.default.createElement(_Checkbox2.default, { dataHook: 'toggle', checked: isSelected, disabled: isDisabled }) : _react2.default.createElement(_RadioButton2.default, { dataHook: 'toggle', checked: isSelected, disabled: isDisabled }),
        image && _react2.default.createElement('div', {
          'data-hook': 'selector-image',
          className: (0, _classnames2.default)(_Selector2.default.image, _Selector2.default[imageSize], _Selector2.default[imageShape]),
          children: image
        }),
        _react2.default.createElement(
          'div',
          { className: _Selector2.default.titles },
          _react2.default.createElement(_Text2.default, {
            dataHook: 'selector-title',
            ellipsis: true,
            children: title
          }),
          subtitle && _react2.default.createElement(_Text2.default, {
            size: 'small',
            secondary: true,
            dataHook: 'selector-subtitle',
            ellipsis: true,
            children: subtitle
          })
        ),
        extraNode && _react2.default.createElement('div', {
          className: _Selector2.default.extra,
          'data-hook': 'selector-extra-node',
          children: extraNode
        })
      );
    }
  }]);

  return Selector;
}(_WixComponent3.default);

Selector.propTypes = {
  id: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]).isRequired,
  image: _propTypes2.default.node,
  imageSize: _propTypes2.default.oneOf(['tiny', 'small', 'portrait', 'large', 'cinema']),
  imageShape: _propTypes2.default.oneOf(['rectangular', 'circle']),
  title: _propTypes2.default.string.isRequired,
  isSelected: _propTypes2.default.bool,
  isDisabled: _propTypes2.default.bool,
  subtitle: _propTypes2.default.string,
  extraNode: _propTypes2.default.node,
  onToggle: _propTypes2.default.func,
  toggleType: _propTypes2.default.oneOf(['checkbox', 'radio'])
};
Selector.defaultProps = {
  isSelected: false,
  isDisabled: false,
  toggleType: 'radio',
  imageSize: 'large',
  imageShape: 'rectangular',
  onToggle: function onToggle(i) {
    return i;
  }
};


Selector.ExtraText = _ExtraText2.default;
Selector.ProgressBar = _ProgressBar2.default;

exports.default = Selector;