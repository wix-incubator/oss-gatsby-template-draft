'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _BottomBar = require('./BottomBar.scss');

var _BottomBar2 = _interopRequireDefault(_BottomBar);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Tooltip = require('../Tooltip');

var _Tooltip2 = _interopRequireDefault(_Tooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BottomBar = function (_React$Component) {
  _inherits(BottomBar, _React$Component);

  function BottomBar() {
    _classCallCheck(this, BottomBar);

    return _possibleConstructorReturn(this, (BottomBar.__proto__ || Object.getPrototypeOf(BottomBar)).apply(this, arguments));
  }

  _createClass(BottomBar, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          commands = _props.commands,
          onClick = _props.onClick;

      return _react2.default.createElement(
        'div',
        { className: _BottomBar2.default.bottombar },
        commands.map(function (cmd) {
          return _this2._renderCommand(cmd, onClick);
        })
      );
    }
  }, {
    key: '_renderCommand',
    value: function _renderCommand(cmd, _onClick) {
      var node = null;
      if (cmd.tooltip) {
        node = _react2.default.createElement(
          _Tooltip2.default,
          { placement: 'top', alignment: 'center', content: cmd.tooltip, showTrigger: 'mouseenter', hideTrigger: 'mouseleave' },
          _react2.default.createElement(
            'div',
            null,
            cmd.node
          )
        );
      } else {
        node = cmd.node;
      }

      return _react2.default.createElement(
        'div',
        { className: _BottomBar2.default.command, onClick: function onClick() {
            return _onClick(cmd.id);
          }, key: cmd.id },
        node
      );
    }
  }]);

  return BottomBar;
}(_react2.default.Component);

BottomBar.propTypes = {
  commands: _propTypes2.default.array.isRequired,
  onClick: _propTypes2.default.func.isRequired
};
exports.default = BottomBar;