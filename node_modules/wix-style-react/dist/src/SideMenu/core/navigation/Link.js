'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _ChevronRight = require('wix-ui-icons-common/ChevronRight');

var _ChevronRight2 = _interopRequireDefault(_ChevronRight);

var _LinkLayout = require('./LinkLayout');

var _LinkLayout2 = _interopRequireDefault(_LinkLayout);

var _styles = require('./styles.scss');

var _styles2 = _interopRequireDefault(_styles);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var Link = function Link(_ref) {
  var children = _ref.children,
      isDiminishedHover = _ref.isDiminishedHover,
      isActive = _ref.isActive,
      withArrow = _ref.withArrow,
      badge = _ref.badge,
      dataHook = _ref.dataHook,
      disabled = _ref.disabled,
      rest = _objectWithoutProperties(_ref, ['children', 'isDiminishedHover', 'isActive', 'withArrow', 'badge', 'dataHook', 'disabled']);

  return _react2.default.createElement(
    _LinkLayout2.default,
    { isDiminishedHover: isDiminishedHover, isActive: isActive, disabled: disabled },
    _react2.default.createElement(
      'a',
      _extends({ 'data-hook': dataHook }, rest),
      children,
      badge,
      withArrow && _react2.default.createElement(
        'span',
        { className: _styles2.default.linkArrow },
        _react2.default.createElement(_ChevronRight2.default, null)
      )
    )
  );
};

Link.defaultProps = {
  dataHook: 'menu-navigation-link',
  withArrow: false,
  disabled: false
};

Link.propTypes = {
  children: _propTypes.node,
  isActive: _propTypes.bool,
  withArrow: _propTypes.bool,
  badge: _propTypes.node,
  isDiminishedHover: _propTypes.bool,
  dataHook: _propTypes.string,
  disabled: _propTypes.bool
};

exports.default = Link;