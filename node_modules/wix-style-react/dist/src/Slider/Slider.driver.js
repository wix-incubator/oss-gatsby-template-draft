'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _testUtils = require('react-dom/test-utils');

var _testUtils2 = _interopRequireDefault(_testUtils);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var sliderDriverFactory = function sliderDriverFactory(_ref) {
  var element = _ref.element;


  var $sliderHandles = function $sliderHandles() {
    return element.querySelectorAll('.slider-handle');
  };
  var $sliderDots = function $sliderDots() {
    return element.querySelectorAll('.rc-slider-dot');
  };

  return {
    exists: function exists() {
      return !!element;
    },
    isDotSelected: function isDotSelected(number) {
      return $sliderDots().item(number - 1).classList.contains('rc-slider-dot-active');
    },
    numOfSliderDots: function numOfSliderDots() {
      return $sliderDots().length;
    },
    numOfSliderHandles: function numOfSliderHandles() {
      return $sliderHandles().length;
    },
    getToolTipValue: function getToolTipValue() {
      var tooltip = element.querySelector('.slider-tooltip');
      return tooltip && tooltip.innerHTML;
    },
    hoverHandle: function hoverHandle(_ref2) {
      var handleIndex = _ref2.handleIndex;

      var handle = $sliderHandles()[handleIndex];
      _testUtils2.default.Simulate.mouseEnter(handle);
    },
    unHoverHandle: function unHoverHandle(_ref3) {
      var handleIndex = _ref3.handleIndex;

      var handle = $sliderHandles()[handleIndex];
      _testUtils2.default.Simulate.mouseLeave(handle);
    }
  };
};

exports.default = sliderDriverFactory;