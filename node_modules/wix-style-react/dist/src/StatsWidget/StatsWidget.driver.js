'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ButtonWithOptions = require('../ButtonWithOptions/ButtonWithOptions.driver');

var _ButtonWithOptions2 = _interopRequireDefault(_ButtonWithOptions);

var _Header = require('../Card/Header/Header.driver');

var _Header2 = _interopRequireDefault(_Header);

var _utils = require('../../test/utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var statsWidgetDriverFactory = function statsWidgetDriverFactory(_ref) {
  var element = _ref.element;

  var getStatistic = function getStatistic(index) {
    return (0, _utils.findByHook)(element, 'stats-widget-content-wrapper').childNodes[index];
  };

  var headerElement = (0, _utils.findByHook)(element, 'stats-widget-title');

  var headerDriver = (0, _Header2.default)({ wrapper: element, element: headerElement });

  return {
    exists: function exists() {
      return !!element;
    },

    titleText: function titleText() {
      return headerDriver.title();
    },

    isStatisticsContentExists: function isStatisticsContentExists() {
      return !!(0, _utils.findByHook)(element, 'stats-widget-content-wrapper');
    },

    isEmptyStateExists: function isEmptyStateExists() {
      return !!(0, _utils.findByHook)(element, 'stats-widget-empty-state');
    },

    getStatisticTitle: function getStatisticTitle(index) {
      return (0, _utils.findByHook)(getStatistic(index), 'statistics-item-title').textContent;
    },

    getStatisticSubTitle: function getStatisticSubTitle(index) {
      return (0, _utils.findByHook)(getStatistic(index), 'statistics-item-subtitle').textContent;
    },

    getStatisticPercentValue: function getStatisticPercentValue(index) {
      return (0, _utils.findByHook)(getStatistic(index), 'percent-value').textContent;
    },

    getStatisticPercentClass: function getStatisticPercentClass(index) {
      var percentIcon = (0, _utils.findByHook)(getStatistic(index), 'percent-icon');
      return percentIcon && percentIcon.getAttribute('data-class') || '';
    },

    getFilterDriver: function getFilterDriver(dataHook) {
      var optionElement = (0, _utils.findByHook)(element, dataHook);
      return (0, _ButtonWithOptions2.default)({ wrapper: element, element: optionElement });
    }
  };
};

exports.default = statsWidgetDriverFactory;