'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _enzyme = require('enzyme');

var _BulkSelectionConsumer = require('./BulkSelectionConsumer');

var _BulkSelection = require('./BulkSelection');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('BulkSelection', function () {
  describe('BulkSelectionConsumer error', function () {
    it('should throw error when consumer is not within a BulkSelection', function () {
      var create = function create() {
        return (0, _enzyme.mount)(_react2.default.createElement(
          _BulkSelectionConsumer.BulkSelectionConsumer,
          null,
          function () {
            return null;
          }
        ));
      };
      expect(create).toThrow();
    });

    it('should throw custom error when consumer is not within a BulkSelection', function () {
      var create = function create() {
        return (0, _enzyme.mount)(_react2.default.createElement(
          _BulkSelectionConsumer.BulkSelectionConsumer,
          { consumerCompName: 'Consumer', providerCompName: 'Provider' },
          function () {
            return null;
          }
        ));
      };
      expect(create).toThrow('Consumer cannot be rendered outside the Provider component');
    });
  });

  it('setSelectionIds & isSelected', function () {
    var _setSelectedIds = void 0,
        _isSelected = void 0;
    (0, _enzyme.mount)(_react2.default.createElement(
      _BulkSelection.BulkSelection,
      { allIds: [1, 2, 3] },
      _react2.default.createElement(
        _BulkSelectionConsumer.BulkSelectionConsumer,
        null,
        function (_ref) {
          var setSelectedIds = _ref.setSelectedIds,
              isSelected = _ref.isSelected;

          _setSelectedIds = setSelectedIds;
          _isSelected = isSelected;
          return _react2.default.createElement('div', null);
        }
      )
    ));
    expect(_isSelected(1)).toBeFalsy();
    expect(_isSelected(2)).toBeFalsy();
    expect(_isSelected(3)).toBeFalsy();
    _setSelectedIds([1, 2]);
    expect(_isSelected(1)).toBeTruthy();
    expect(_isSelected(2)).toBeTruthy();
    expect(_isSelected(3)).toBeFalsy();
  });
});