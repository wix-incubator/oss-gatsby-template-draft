'use strict';

var _eyes = require('eyes.it');

var _eyes2 = _interopRequireDefault(_eyes);

var _protractor = require('../../testkit/protractor');

var _protractor2 = require('wix-ui-test-utils/protractor');

var _storybookHelpers = require('../../test/utils/storybook-helpers');

var _storySettings = require('../../stories/Table/storySettings');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

describe('Table', function () {
  var storyUrl = (0, _storybookHelpers.createStoryUrl)({ kind: _storySettings.storySettings.kind, story: _storySettings.storySettings.storyName, withExamples: false });

  var init = function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
      var driver;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return browser.get(storyUrl);

            case 2:
              driver = (0, _protractor.tableTestkitFactory)({ dataHook: 'storybook-table' });
              _context.next = 5;
              return (0, _protractor2.waitForVisibilityOf)(driver.element, 'Can not find Table Component');

            case 5:
              return _context.abrupt('return', driver);

            case 6:
            case 'end':
              return _context.stop();
          }
        }
      }, _callee, undefined);
    }));

    return function init() {
      return _ref.apply(this, arguments);
    };
  }();

  it('should be able to use DataTable driver methods', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
    var driver;
    return regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return init();

          case 2:
            driver = _context2.sent;
            _context2.t0 = expect;
            _context2.next = 6;
            return driver.rowsCount();

          case 6:
            _context2.t1 = _context2.sent;
            (0, _context2.t0)(_context2.t1).toBe(4);

          case 8:
          case 'end':
            return _context2.stop();
        }
      }
    }, _callee2, undefined);
  })));

  _eyes2.default.it('should display table only', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
    var driver;
    return regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return init();

          case 2:
            driver = _context3.sent;
            _context3.next = 5;
            return (0, _protractor2.scrollToElement)(driver.element);

          case 5:
          case 'end':
            return _context3.stop();
        }
      }
    }, _callee3, undefined);
  }))
  // need snapshot only
  );
});