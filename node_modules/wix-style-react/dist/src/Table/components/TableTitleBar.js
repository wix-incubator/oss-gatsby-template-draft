'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TableTitleBar = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _DataTable = require('../../DataTable');

var _Table = require('../Table');

var _TableContext = require('../TableContext');

var _BulkSelection = require('../BulkSelection');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * TitleBar (aka DataTableHeader)
 */
var TableTitleBar = exports.TableTitleBar = function TableTitleBar() {
  return _react2.default.createElement(
    _TableContext.TableContext.Consumer,
    null,
    function (tableProps) {
      var dataTableProps = (0, _Table.getDataTableProps)(tableProps);
      if (tableProps.showSelection) {
        return _react2.default.createElement(
          _BulkSelection.BulkSelectionConsumer,
          { consumerCompName: 'Table.TitleBar', providerCompName: 'Table' },
          function (bulkSelectionContext) {
            return _react2.default.createElement(
              'div',
              { 'data-hook': 'table-title-bar' },
              _react2.default.createElement(_DataTable.DataTableHeader, _extends({}, dataTableProps, {
                columns: (0, _Table.createColumns)({ tableProps: tableProps, bulkSelectionContext: bulkSelectionContext })
              }))
            );
          }
        );
      } else {
        return _react2.default.createElement(
          'div',
          { 'data-hook': 'table-title-bar' },
          _react2.default.createElement(_DataTable.DataTableHeader, dataTableProps)
        );
      }
    }
  );
};
TableTitleBar.displayName = 'Table.TitleBar';