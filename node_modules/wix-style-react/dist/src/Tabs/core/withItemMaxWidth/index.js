'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _tabPropTypes = require('../constants/tab-prop-types');

var TabPropTypes = _interopRequireWildcard(_tabPropTypes);

var _utils = require('../utils');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var withMaxWidth = function withMaxWidth(WrappedComponent) {

  var getMaxWidth = function getMaxWidth(items, containerWidth) {
    var COMPACT_SIDE_MARGIN = 18;
    var marginsBetweenItems = COMPACT_SIDE_MARGIN * 2 * (items.length - 1);
    return (containerWidth - marginsBetweenItems) / items.length;
  };

  var Wrapper = function (_React$Component) {
    _inherits(Wrapper, _React$Component);

    function Wrapper() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Wrapper);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Wrapper.__proto__ || Object.getPrototypeOf(Wrapper)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
        itemMaxWidth: undefined
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Wrapper, [{
      key: 'initMaxWidth',
      value: function initMaxWidth(itemsContainer) {
        var _props = this.props,
            type = _props.type,
            items = _props.items;


        if (!itemsContainer || type !== 'compactSide') {
          return;
        }

        var itemMaxWidth = getMaxWidth(items, (0, _utils.getWidth)(itemsContainer));
        if (this.state.itemMaxWidth !== itemMaxWidth) {
          this.setState({ itemMaxWidth: itemMaxWidth });
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _this2 = this;

        return _react2.default.createElement(
          'div',
          { ref: function ref(el) {
              return _this2.initMaxWidth(el);
            }, style: { width: '100%' } },
          _react2.default.createElement(WrappedComponent, _extends({}, this.props, { itemMaxWidth: this.state.itemMaxWidth }))
        );
      }
    }]);

    return Wrapper;
  }(_react2.default.Component);

  Wrapper.propTypes = {
    type: TabPropTypes.type,
    items: TabPropTypes.items.isRequired
  };

  return Wrapper;
};

exports.default = withMaxWidth;