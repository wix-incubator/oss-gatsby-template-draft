'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Tag = require('./Tag.scss');

var _Tag2 = _interopRequireDefault(_Tag);

var _CloseButton = require('../CloseButton');

var _CloseButton2 = _interopRequireDefault(_CloseButton);

var _WixComponent2 = require('../BaseComponents/WixComponent');

var _WixComponent3 = _interopRequireDefault(_WixComponent2);

var _Typography = require('../Typography');

var _Typography2 = _interopRequireDefault(_Typography);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
  * A Tag component
  */
var Tag = function (_WixComponent) {
  _inherits(Tag, _WixComponent);

  function Tag() {
    _classCallCheck(this, Tag);

    return _possibleConstructorReturn(this, (Tag.__proto__ || Object.getPrototypeOf(Tag)).apply(this, arguments));
  }

  _createClass(Tag, [{
    key: 'render',
    value: function render() {
      var _classNames, _classNames2;

      var _props = this.props,
          id = _props.id,
          children = _props.children,
          thumb = _props.thumb,
          removable = _props.removable,
          _onClick = _props.onClick,
          onRemove = _props.onRemove,
          size = _props.size,
          wrap = _props.wrap,
          disabled = _props.disabled,
          theme = _props.theme,
          maxWidth = _props.maxWidth;


      var className = (0, _classnames2.default)((_classNames = {}, _defineProperty(_classNames, _Tag2.default.tag, true), _defineProperty(_classNames, _Tag2.default.large, size === 'large'), _defineProperty(_classNames, _Tag2.default.tagWrap, wrap), _defineProperty(_classNames, _Tag2.default.disabled, disabled), _defineProperty(_classNames, _Tag2.default[theme + 'Theme'], true), _classNames));

      var innerClassName = (0, _classnames2.default)((_classNames2 = {}, _defineProperty(_classNames2, _Tag2.default.innerTagWrap, wrap), _defineProperty(_classNames2, _Typography2.default.t4, true), _classNames2));

      var title = wrap ? children : '';

      return _react2.default.createElement(
        'span',
        {
          'data-hook': 'tag',
          className: className,
          disabled: disabled,
          id: id,
          title: title,
          onClick: function onClick() {
            return _onClick(id);
          },
          style: {
            maxWidth: maxWidth + 'px'
          }
        },
        thumb && _react2.default.createElement(
          'span',
          { className: _Tag2.default.thumb },
          thumb
        ),
        _react2.default.createElement(
          'span',
          { className: innerClassName },
          children
        ),
        removable && !disabled && _react2.default.createElement(
          'a',
          {
            className: _Tag2.default.tagRemoveButton,
            onClick: function onClick(event) {
              event.stopPropagation();
              onRemove(id);
            }
          },
          _react2.default.createElement(_CloseButton2.default, { size: 'small', theme: 'close-standard' })
        )
      );
    }
  }]);

  return Tag;
}(_WixComponent3.default);

Tag.propTypes = {
  children: _propTypes2.default.string.isRequired,

  /** when set to true this component is disabled  */
  disabled: _propTypes2.default.bool,

  /** The id of the Tag  */
  id: _propTypes2.default.string.isRequired,

  /** Callback function that pass `id` property as parameter when clicking on Tag */
  onClick: _propTypes2.default.func,

  /** Callback function that pass `id` property as parameter when removing the Tag  */
  onRemove: _propTypes2.default.func,

  /** If the Tag is removable then it will contain a small clickable X */
  removable: _propTypes2.default.bool,

  /** The height of the Tag */
  size: _propTypes2.default.oneOf(['small', 'large']),

  /** theme of the Tag */
  theme: _propTypes2.default.oneOf(['standard', 'error', 'warning']),

  /** An optional thumb to display as part of the Tag */
  thumb: _propTypes2.default.element,

  /** An optional maximum tag width in `px` for cropping. Should be used in pair with `wrap` property  */
  maxWidth: _propTypes2.default.number,

  /** Whether to display ellipsis (...) for long content */
  wrap: _propTypes2.default.bool
};

Tag.defaultProps = {
  onClick: function onClick() {},
  onRemove: function onRemove() {},
  size: 'small',
  removable: true,
  theme: 'standard'
};

exports.default = Tag;