'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Text = require('./Text.driver');

var _Text2 = _interopRequireDefault(_Text);

var _ = require('./');

var _2 = _interopRequireDefault(_);

var _Text3 = require('./Text');

var _driverFactory = require('wix-ui-test-utils/driver-factory');

var _enzyme = require('wix-ui-test-utils/enzyme');

var _vanilla = require('wix-ui-test-utils/vanilla');

var _testkit = require('../../testkit');

var _enzyme2 = require('../../testkit/enzyme');

var _enzyme3 = require('enzyme');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('Text', function () {
  var createDriver = (0, _driverFactory.createDriverFactory)(_Text2.default);

  describe('size prop', function () {
    it('should be ' + _Text3.SIZES.medium + ' by default', function () {
      var wrapper = createDriver(_react2.default.createElement(
        _2.default,
        null,
        'Hello'
      ));
      expect(wrapper.getSize()).toBe(_Text3.SIZES.medium);
    });

    Object.keys(_Text3.SIZES).forEach(function (size) {
      it('should be ' + size, function () {
        var wrapper = createDriver(_react2.default.createElement(
          _2.default,
          { size: size },
          'Hello'
        ));
        expect(wrapper.getSize()).toBe(size);
      });
    });
  });

  describe('weight prop', function () {
    it('should be ' + _Text3.WEIGHTS.thin + ' by default', function () {
      var wrapper = createDriver(_react2.default.createElement(
        _2.default,
        null,
        'Hello'
      ));
      expect(wrapper.getWeight()).toBe(_Text3.WEIGHTS.thin);
    });

    Object.keys(_Text3.WEIGHTS).forEach(function (weight) {
      it('should be ' + weight, function () {
        var wrapper = createDriver(_react2.default.createElement(
          _2.default,
          { weight: weight },
          'Hello'
        ));
        expect(wrapper.getWeight()).toBe(weight);
      });
    });
  });

  describe('secondary prop', function () {
    it('should be false by default', function () {
      var wrapper = createDriver(_react2.default.createElement(
        _2.default,
        null,
        'Hello'
      ));
      expect(wrapper.isSecondary()).toBe(false);
    });

    it('should be true', function () {
      var wrapper = createDriver(_react2.default.createElement(
        _2.default,
        { secondary: true },
        'Hello'
      ));
      expect(wrapper.isSecondary()).toBe(true);
    });
  });

  describe('skin prop', function () {
    it('should be ' + _Text3.SKINS.standard + ' by default', function () {
      var wrapper = createDriver(_react2.default.createElement(
        _2.default,
        null,
        'Hello'
      ));
      expect(wrapper.getSkin()).toBe(_Text3.SKINS.standard);
    });

    Object.keys(_Text3.SKINS).forEach(function (skin) {
      it('should be ' + skin, function () {
        var wrapper = createDriver(_react2.default.createElement(
          _2.default,
          { skin: skin },
          'Hello'
        ));
        expect(wrapper.getSkin()).toBe(skin);
      });
    });
  });

  describe('light prop', function () {
    it('should be dark by default', function () {
      var wrapper = createDriver(_react2.default.createElement(
        _2.default,
        null,
        'Hello'
      ));
      expect(wrapper.isLight()).toBe(false);
    });

    it('should be light', function () {
      var wrapper = createDriver(_react2.default.createElement(
        _2.default,
        { light: true },
        'Hello'
      ));
      expect(wrapper.isLight()).toBe(true);
    });

    [_Text3.SKINS.error, _Text3.SKINS.success, _Text3.SKINS.premium].forEach(function (skin) {
      it('should be dark when skin is ' + skin, function () {
        var wrapper = createDriver(_react2.default.createElement(
          _2.default,
          { skin: skin, light: true },
          'Hello'
        ));
        expect(wrapper.isLight()).toBe(false);
      });
    });
  });

  describe('testkit', function () {
    it('should exist', function () {
      expect((0, _vanilla.isTestkitExists)(_react2.default.createElement(
        _2.default,
        null,
        'Hello World'
      ), _testkit.textTestkitFactory)).toBe(true);
    });
  });

  describe('enzyme testkit', function () {
    it('should exist', function () {
      expect((0, _enzyme.isEnzymeTestkitExists)(_react2.default.createElement(
        _2.default,
        null,
        'Hello World'
      ), _enzyme2.textTestkitFactory, _enzyme3.mount)).toBe(true);
    });
  });
});