'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _privateDrivers = require('../../../test/utils/private-drivers');

var _protractorHelpers = require('../../../test/utils/protractor-helpers');

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var focusableDriverFactory = function focusableDriverFactory(_ref) {
  var rootElement = _ref.rootElement,
      clickableElements = _ref.clickableElements,
      nativeFocusableElement = _ref.nativeFocusableElement;

  if (!rootElement || !clickableElements || !nativeFocusableElement) {
    throw new Error('focusableDriverFactory: Invalid aruments');
  }

  return _defineProperty({
    isFocused: function isFocused() {
      return (0, _protractorHelpers.isFocused)(nativeFocusableElement);
    }
  }, _privateDrivers.INTERNAL_DRIVER_SYMBOL, {
    rootElement: rootElement,
    hasFocusState: function hasFocusState() {
      return (0, _protractorHelpers.hasAttribute)(rootElement, 'data-focus');
    },
    hasFocusVisibleState: function hasFocusVisibleState() {
      return (0, _protractorHelpers.hasAttribute)(rootElement, 'data-focus-visible');
    },
    clickRoot: function clickRoot() {
      return rootElement.click();
    },
    clickableElements: clickableElements
  });
};

exports.default = focusableDriverFactory;