'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _AutoComplete = require('wix-style-react/AutoComplete');

var _AutoComplete2 = _interopRequireDefault(_AutoComplete);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var style = {
  display: 'inline-block',
  padding: '0 5px 0',
  width: '200px',
  lineHeight: '22px'
};

var options = [{ id: 0, value: 'First option' }, { id: 1, value: 'Second option' }, { id: 2, value: 'Third option' }, { id: 3, value: 'Fifth option' }, { id: 4, value: 'Fourth option' }];

var ControlledAutoComplete = function (_React$Component) {
  _inherits(ControlledAutoComplete, _React$Component);

  function ControlledAutoComplete(props) {
    _classCallCheck(this, ControlledAutoComplete);

    var _this = _possibleConstructorReturn(this, (ControlledAutoComplete.__proto__ || Object.getPrototypeOf(ControlledAutoComplete)).call(this, props));

    _this.state = { value: '' };
    _this.onSelect = _this.onSelect.bind(_this);
    _this.onChange = _this.onChange.bind(_this);
    return _this;
  }

  _createClass(ControlledAutoComplete, [{
    key: 'onSelect',
    value: function onSelect(option) {
      this.setState({ value: option.value });
    }
  }, {
    key: 'onChange',
    value: function onChange(event) {
      this.setState({ value: event.target.value });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(_AutoComplete2.default, {
        dataHook: 'story-autocomplete',
        options: options,
        value: this.state.value,
        onChange: this.onChange,
        onSelect: this.onSelect,
        placeholder: 'Start typing',
        predicate: function predicate(option) {
          return option.value.toLowerCase().indexOf(_this2.state.value.toLowerCase()) !== -1;
        }
      });
    }
  }]);

  return ControlledAutoComplete;
}(_react2.default.Component);

exports.default = function () {
  return _react2.default.createElement(
    'div',
    { className: 'ltr', style: style },
    _react2.default.createElement(ControlledAutoComplete, null)
  );
};