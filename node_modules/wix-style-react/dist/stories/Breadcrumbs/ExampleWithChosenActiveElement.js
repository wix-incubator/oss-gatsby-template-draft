'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _ExampleBreadcrumbs = require('./ExampleBreadcrumbs.scss');

var _ExampleBreadcrumbs2 = _interopRequireDefault(_ExampleBreadcrumbs);

var _Breadcrumbs = require('../../src/Breadcrumbs/Breadcrumbs');

var _Breadcrumbs2 = _interopRequireDefault(_Breadcrumbs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var items = [{ id: '1', value: 'first item' }, { id: '2', value: 'second item' }, { id: '3', value: 'third item' }];

var ControlledBreadcrumbs = function (_React$Component) {
  _inherits(ControlledBreadcrumbs, _React$Component);

  function ControlledBreadcrumbs(props) {
    _classCallCheck(this, ControlledBreadcrumbs);

    var _this = _possibleConstructorReturn(this, (ControlledBreadcrumbs.__proto__ || Object.getPrototypeOf(ControlledBreadcrumbs)).call(this, props));

    _this.state = { activeId: 3 };
    _this.onClick = _this.onClick.bind(_this);
    return _this;
  }

  _createClass(ControlledBreadcrumbs, [{
    key: 'onClick',
    value: function onClick(item) {
      this.setState({ activeId: item.id });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: _ExampleBreadcrumbs2.default.onGrayBackground + ' ' + _ExampleBreadcrumbs2.default.exampleWrapper },
        _react2.default.createElement(_Breadcrumbs2.default, {
          dataHook: 'story-breadcrumbs-active',
          items: items,
          activeId: this.state.activeId,
          onClick: this.onClick
        })
      );
    }
  }]);

  return ControlledBreadcrumbs;
}(_react2.default.Component);

exports.default = function () {
  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(ControlledBreadcrumbs, null)
  );
};