'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Template = require('./Template');

var _Template2 = _interopRequireDefault(_Template);

var _RadioGroup = require('../../src/RadioGroup');

var _RadioGroup2 = _interopRequireDefault(_RadioGroup);

var _Label = require('../../src/Label');

var _Label2 = _interopRequireDefault(_Label);

var _Input = require('../../src/Input');

var _Input2 = _interopRequireDefault(_Input);

var _ToggleSwitch = require('../../src/ToggleSwitch');

var _ToggleSwitch2 = _interopRequireDefault(_ToggleSwitch);

var _newIcons = require('wix-style-react/new-icons');

var Icons = _interopRequireWildcard(_newIcons);

var _IconChooser = require('../Button/IconChooser');

var _IconChooser2 = _interopRequireDefault(_IconChooser);

var _ExampleButton = require('./ExampleButton.scss');

var _ExampleButton2 = _interopRequireDefault(_ExampleButton);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var nodeStyle = {
  background: 'azure',
  paddingLeft: '25px'
};

var ButtonWithOptionsStandard = function (_Component) {
  _inherits(ButtonWithOptionsStandard, _Component);

  function ButtonWithOptionsStandard() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ButtonWithOptionsStandard);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ButtonWithOptionsStandard.__proto__ || Object.getPrototypeOf(ButtonWithOptionsStandard)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      disabled: false,
      theme: 'fullblue',
      text: 'Click On Me',
      height: 'medium',
      withArrow: false,
      style: { padding: '0 5px' },
      re: true,
      hasFixedFooter: false
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ButtonWithOptionsStandard, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        'from',
        { className: _ExampleButton2.default.form },
        _react2.default.createElement(
          'div',
          { className: _ExampleButton2.default.input },
          _react2.default.createElement(
            _Label2.default,
            null,
            'Button'
          ),
          _react2.default.createElement(
            'div',
            { className: _ExampleButton2.default.option },
            _react2.default.createElement(
              _Label2.default,
              null,
              'Type'
            ),
            _react2.default.createElement(
              'div',
              { className: _ExampleButton2.default.flex },
              _react2.default.createElement(
                _RadioGroup2.default,
                {
                  display: 'horizontal',
                  value: this.state.theme,
                  onChange: function onChange(theme) {
                    return _this2.setState({ theme: theme, iconOnly: false, restrainDropdownSize: true });
                  }
                },
                _react2.default.createElement(
                  _RadioGroup2.default.Radio,
                  { value: 'fullblue' },
                  'Primary'
                ),
                _react2.default.createElement(
                  _RadioGroup2.default.Radio,
                  { value: 'transparentblue' },
                  'Secondary'
                ),
                _react2.default.createElement(
                  _RadioGroup2.default.Radio,
                  { value: 'whiteblue' },
                  'Secondary on grey'
                )
              )
            )
          ),
          _react2.default.createElement(
            'div',
            { className: _ExampleButton2.default.option },
            _react2.default.createElement(
              _Label2.default,
              null,
              'Icon Only'
            ),
            _react2.default.createElement(
              'div',
              { className: _ExampleButton2.default.flex },
              _react2.default.createElement(
                _RadioGroup2.default,
                {
                  value: this.state.theme,
                  onChange: function onChange(theme) {
                    return _this2.setState({ theme: theme, iconOnly: true, restrainDropdownSize: false });
                  }
                },
                _react2.default.createElement(
                  _RadioGroup2.default.Radio,
                  { value: 'icon-greybackground' },
                  'Grey Background'
                ),
                _react2.default.createElement(
                  _RadioGroup2.default.Radio,
                  { value: 'icon-standard' },
                  'Standard Primary'
                ),
                _react2.default.createElement(
                  _RadioGroup2.default.Radio,
                  { value: 'icon-standardsecondary' },
                  'Standard Secondary'
                ),
                _react2.default.createElement(
                  _RadioGroup2.default.Radio,
                  { value: 'icon-white' },
                  'White Primary'
                ),
                _react2.default.createElement(
                  _RadioGroup2.default.Radio,
                  { value: 'icon-whitesecondary' },
                  'White Secondary'
                )
              )
            )
          ),
          _react2.default.createElement(
            'div',
            { className: _ExampleButton2.default.option },
            _react2.default.createElement(
              _Label2.default,
              null,
              'Disabled'
            ),
            _react2.default.createElement(
              'div',
              { className: _ExampleButton2.default.flex },
              _react2.default.createElement(_ToggleSwitch2.default, {
                size: 'small',
                checked: this.state.disabled,
                onChange: function onChange() {
                  return _this2.setState({ disabled: !_this2.state.disabled });
                }
              })
            )
          ),
          _react2.default.createElement(
            'div',
            { className: _ExampleButton2.default.option },
            _react2.default.createElement(
              _Label2.default,
              null,
              'Prefix Icon'
            ),
            _react2.default.createElement(
              'div',
              { className: _ExampleButton2.default.flex },
              _react2.default.createElement(_IconChooser2.default, {
                onSelect: function onSelect(option) {
                  return _this2.setState({ prefixIcon: _react2.default.createElement(Icons[option.id]) });
                }
              })
            )
          ),
          _react2.default.createElement(
            'div',
            { className: _ExampleButton2.default.option },
            _react2.default.createElement(
              _Label2.default,
              null,
              'Suffix Icon'
            ),
            _react2.default.createElement(
              'div',
              { className: _ExampleButton2.default.flex },
              _react2.default.createElement(_IconChooser2.default, {
                onSelect: function onSelect(option) {
                  return _this2.setState({ suffixIcon: _react2.default.createElement(Icons[option.id]) });
                }
              })
            )
          ),
          _react2.default.createElement(
            'div',
            { className: _ExampleButton2.default.option },
            _react2.default.createElement(
              _Label2.default,
              null,
              'Text'
            ),
            _react2.default.createElement(
              'div',
              { className: _ExampleButton2.default.flex },
              _react2.default.createElement(_Input2.default, {
                size: 'small',
                value: this.state.text,
                onChange: function onChange(e) {
                  return _this2.setState({ text: e.target.value });
                }
              })
            )
          ),
          _react2.default.createElement(
            'div',
            { className: _ExampleButton2.default.option },
            _react2.default.createElement(
              _Label2.default,
              null,
              'Size'
            ),
            _react2.default.createElement(
              'div',
              { className: _ExampleButton2.default.flex },
              _react2.default.createElement(
                _RadioGroup2.default,
                {
                  display: 'horizontal',
                  value: this.state.height,
                  onChange: function onChange(height) {
                    return _this2.setState({ height: height });
                  }
                },
                _react2.default.createElement(
                  _RadioGroup2.default.Radio,
                  { value: 'small' },
                  'Small'
                ),
                _react2.default.createElement(
                  _RadioGroup2.default.Radio,
                  { value: 'medium' },
                  'Regular'
                ),
                _react2.default.createElement(
                  _RadioGroup2.default.Radio,
                  { value: 'large' },
                  'Large'
                ),
                _react2.default.createElement(
                  _RadioGroup2.default.Radio,
                  { value: 'x-large' },
                  'x-large'
                )
              )
            )
          )
        ),
        _react2.default.createElement(
          'div',
          { className: _ExampleButton2.default.input },
          _react2.default.createElement(
            _Label2.default,
            null,
            'Dropdown Layout'
          ),
          _react2.default.createElement(
            'div',
            { className: _ExampleButton2.default.option },
            _react2.default.createElement(
              _Label2.default,
              null,
              'Override Theme'
            ),
            _react2.default.createElement(
              'div',
              { className: _ExampleButton2.default.flex },
              _react2.default.createElement(
                _RadioGroup2.default,
                {
                  display: 'horizontal',
                  value: this.state.dropdownTheme,
                  onChange: function onChange(dropdownTheme) {
                    return _this2.setState({ dropdownTheme: dropdownTheme });
                  }
                },
                _react2.default.createElement(
                  _RadioGroup2.default.Radio,
                  { value: 'none' },
                  'No Theme'
                ),
                _react2.default.createElement(
                  _RadioGroup2.default.Radio,
                  { value: 'b2b' },
                  'b2b'
                )
              )
            )
          ),
          _react2.default.createElement(
            'div',
            { className: _ExampleButton2.default.option },
            _react2.default.createElement(
              _Label2.default,
              null,
              'With Arrow'
            ),
            _react2.default.createElement(
              'div',
              { className: _ExampleButton2.default.flex },
              _react2.default.createElement(_ToggleSwitch2.default, {
                size: 'small',
                checked: this.state.withArrow,
                onChange: function onChange() {
                  return _this2.setState({ withArrow: !_this2.state.withArrow });
                }
              })
            )
          ),
          _react2.default.createElement(
            'div',
            { className: _ExampleButton2.default.option },
            _react2.default.createElement(
              _Label2.default,
              null,
              'With Fixed Footer'
            ),
            _react2.default.createElement(
              'div',
              { className: _ExampleButton2.default.flex },
              _react2.default.createElement(_ToggleSwitch2.default, {
                size: 'small',
                checked: this.state.hasFixedFooter,
                onChange: function onChange() {
                  return _this2.setState({ hasFixedFooter: !_this2.state.hasFixedFooter, fixedFooter: _this2.state.hasFixedFooter ? null : _react2.default.createElement(
                      'div',
                      { style: nodeStyle },
                      'I am a footer'
                    ) });
                }
              })
            )
          ),
          _react2.default.createElement(
            'div',
            { className: _ExampleButton2.default.option },
            _react2.default.createElement(
              _Label2.default,
              null,
              'Restrain dropdown size to button size'
            ),
            _react2.default.createElement(
              'div',
              { className: _ExampleButton2.default.flex },
              _react2.default.createElement(_ToggleSwitch2.default, {
                size: 'small',
                checked: this.state.restrainDropdownSize,
                onChange: function onChange() {
                  return _this2.setState({ restrainDropdownSize: !_this2.state.restrainDropdownSize });
                }
              })
            )
          ),
          _react2.default.createElement(
            'div',
            { className: _ExampleButton2.default.flex },
            _react2.default.createElement(
              _RadioGroup2.default,
              {
                display: 'horizontal',
                value: this.state.theme,
                onChange: function onChange(theme) {
                  return _this2.setState({ theme: theme });
                }
              },
              _react2.default.createElement(
                _RadioGroup2.default.Radio,
                { value: '' },
                'No Theme'
              ),
              _react2.default.createElement(
                _RadioGroup2.default.Radio,
                { value: 'no-border' },
                'No Border'
              ),
              _react2.default.createElement(
                _RadioGroup2.default.Radio,
                { value: 'dark-no-border' },
                'Dark No Border'
              )
            )
          )
        ),
        _react2.default.createElement(
          'div',
          { className: _ExampleButton2.default[this.state.theme === 'whiteblue' ? 'output-lightblue' : 'output'] },
          _react2.default.createElement(
            'div',
            { className: _ExampleButton2.default[this.state.theme] + ' ' + _ExampleButton2.default.exampleWrapper + ' ltr' },
            _react2.default.createElement(_Template2.default, _extends({}, this.state, { onChange: this.props.onChange }))
          )
        )
      );
    }
  }]);

  return ButtonWithOptionsStandard;
}(_react.Component);

ButtonWithOptionsStandard.propTypes = {
  onChange: _propTypes2.default.func
};
exports.default = ButtonWithOptionsStandard;