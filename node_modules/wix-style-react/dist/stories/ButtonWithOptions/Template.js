'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Form = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactElementToJsxString = require('react-element-to-jsx-string');

var _reactElementToJsxString2 = _interopRequireDefault(_reactElementToJsxString);

var _Icons = require('wix-style-react/Icons');

var _index = require('../../src/index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Form = exports.Form = function (_Component) {
  _inherits(Form, _Component);

  function Form() {
    _classCallCheck(this, Form);

    return _possibleConstructorReturn(this, (Form.__proto__ || Object.getPrototypeOf(Form)).apply(this, arguments));
  }

  _createClass(Form, [{
    key: 'componentDidUpdate',
    value: function componentDidUpdate(props) {
      props.onChange((0, _reactElementToJsxString2.default)(this.getComponent()));
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.props.onChange((0, _reactElementToJsxString2.default)(this.getComponent()));
    }
  }, {
    key: 'getComponent',
    value: function getComponent() {
      var iconSize = '6px';
      if (this.props.height === 'large') {
        iconSize = '8px';
      }
      if (['close-standard', 'close-dark', 'close-transparent'].indexOf(this.props.theme) < 0) {
        iconSize = '12px';
      }

      var icons = {};
      if (this.props.prefixIcon) {
        icons.prefixIcon = this.props.prefixIcon;
      }

      if (this.props.suffixIcon) {
        icons.suffixIcon = this.props.suffixIcon;
      }

      return _react2.default.createElement(
        _index.ButtonWithOptions,
        this.props,
        _react2.default.createElement(
          _index.ButtonWithOptions.Button,
          _extends({}, this.props, icons, {
            withNewIcons: true
          }),
          this.props.iconOnly ? _react2.default.createElement(_Icons.Close, { size: iconSize }) : this.props.text
        ),
        _react2.default.createElement(
          _index.ButtonWithOptions.Option,
          { id: '1' },
          'Option 1'
        ),
        _react2.default.createElement(
          _index.ButtonWithOptions.Option,
          { id: '2' },
          'Option 2'
        ),
        _react2.default.createElement(
          _index.ButtonWithOptions.Option,
          { id: '3', disabled: true },
          'Option 3'
        ),
        _react2.default.createElement(
          _index.ButtonWithOptions.Option,
          { id: '4' },
          _react2.default.createElement(
            'span',
            null,
            _react2.default.createElement(_Icons.Close, { size: iconSize }),
            ' Option 4'
          )
        ),
        _react2.default.createElement(
          _index.ButtonWithOptions.Option,
          { id: '5' },
          'Option 5'
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      return this.getComponent();
    }
  }]);

  return Form;
}(_react.Component);

Form.propTypes = {
  onChange: _propTypes2.default.func.isRequired,
  theme: _propTypes2.default.string.isRequired,
  disabled: _propTypes2.default.bool.isRequired,
  iconOnly: _propTypes2.default.bool,
  text: _propTypes2.default.string,
  height: _propTypes2.default.string,
  prefixIcon: _propTypes2.default.node,
  suffixIcon: _propTypes2.default.node,
  dropdownTheme: _propTypes2.default.string,
  withArrow: _propTypes2.default.bool
};

exports.default = Form;