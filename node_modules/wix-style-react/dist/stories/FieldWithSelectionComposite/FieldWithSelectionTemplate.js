'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactElementToJsxString = require('react-element-to-jsx-string');

var _reactElementToJsxString2 = _interopRequireDefault(_reactElementToJsxString);

var _FieldWithSelectionComposite = require('../../src/Composite/FieldWithSelectionComposite/FieldWithSelectionComposite');

var _FieldWithSelectionComposite2 = _interopRequireDefault(_FieldWithSelectionComposite);

var _Input = require('../../src/Input');

var _Input2 = _interopRequireDefault(_Input);

var _Checkbox = require('../../src/Checkbox');

var _Checkbox2 = _interopRequireDefault(_Checkbox);

var _Label = require('../../src/Label');

var _Label2 = _interopRequireDefault(_Label);

var _Dropdown = require('../../src/Dropdown');

var _Dropdown2 = _interopRequireDefault(_Dropdown);

var _RadioGroup = require('../../src/RadioGroup');

var _RadioGroup2 = _interopRequireDefault(_RadioGroup);

var _Typography = require('../../src/Typography');

var _Typography2 = _interopRequireDefault(_Typography);

var _StorySettings = require('./StorySettings');

var _StorySettings2 = _interopRequireDefault(_StorySettings);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var options = [{ id: 1, value: '1' }, { id: 2, value: '2' }];

var Form = function (_Component) {
  _inherits(Form, _Component);

  function Form(props) {
    _classCallCheck(this, Form);

    var _this = _possibleConstructorReturn(this, (Form.__proto__ || Object.getPrototypeOf(Form)).call(this, props));

    _this.state = {
      buttonValue: 0,
      checkboxValue: false
    };
    return _this;
  }

  _createClass(Form, [{
    key: 'componentDidUpdate',
    value: function componentDidUpdate(props) {
      props.onChange((0, _reactElementToJsxString2.default)(this.getComponent()));
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.props.onChange((0, _reactElementToJsxString2.default)(this.getComponent()));
    }
  }, {
    key: 'getComponent',
    value: function getComponent() {
      var _this2 = this;

      var selectionInput = '';
      switch (this.props.selectionInput) {
        case 'checkbox':
          selectionInput = _react2.default.createElement(
            _Checkbox2.default,
            {
              dataHook: _StorySettings2.default.dataHookCheckbox,
              size: 'medium',
              checked: this.state.checkboxValue,
              onChange: function onChange(e) {
                return _this2.setState({ checkboxValue: e.target.checked });
              }
            },
            _react2.default.createElement(
              'span',
              { className: _Typography2.default[(0, _Typography.convertFromUxLangToCss)('T3.1')] },
              'Test'
            )
          );
          break;
        case 'dropdown':
          selectionInput = _react2.default.createElement(_Dropdown2.default, {
            dataHook: _StorySettings2.default.dataHookDropdown,
            options: options,
            dropDirectionUp: true,
            size: 'normal',
            selectedId: 1
          });
          break;
        case 'buttons':
          selectionInput = _react2.default.createElement(
            _RadioGroup2.default,
            {
              display: 'horizontal',
              type: 'button',
              value: this.state.buttonValue,
              onChange: function onChange(value) {
                return _this2.setState({ buttonValue: value });
              }
            },
            _react2.default.createElement(
              _RadioGroup2.default.Radio,
              { value: 1, disabled: this.props.disabled },
              this.props.firstButtonLabel
            ),
            _react2.default.createElement(
              _RadioGroup2.default.Radio,
              { value: 0, disabled: this.props.disabled },
              this.props.secondButtonLabel
            )
          );
          break;
        default:
          throw new Error('selectionInput type does not exist, please see FieldWithSelection component for more details');
      }

      return _react2.default.createElement(
        _FieldWithSelectionComposite2.default,
        { dataHook: this.props.dataHook, error: this.props.error, disabled: this.props.disabled, required: this.props.required, info: this.props.info },
        this.props.withLabel ? _react2.default.createElement(_Label2.default, this.props.label) : null,
        _react2.default.createElement(_Input2.default, this.props.fieldInput),
        selectionInput
      );
    }
  }, {
    key: 'render',
    value: function render() {
      return this.getComponent();
    }
  }]);

  return Form;
}(_react.Component);

Form.propTypes = {
  onChange: _propTypes2.default.func.isRequired,
  withLabel: _propTypes2.default.bool,
  label: _propTypes2.default.object,
  fieldInput: _propTypes2.default.object,
  selectionInput: _propTypes2.default.object,
  firstButtonLabel: _propTypes2.default.string,
  secondButtonLabel: _propTypes2.default.string,
  required: _propTypes2.default.bool,
  info: _propTypes2.default.string,
  error: _propTypes2.default.Error,
  disabled: _propTypes2.default.bool,
  dataHook: _propTypes2.default.string
};
exports.default = Form;