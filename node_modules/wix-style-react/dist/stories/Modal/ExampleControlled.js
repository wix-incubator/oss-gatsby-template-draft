'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Modal = require('wix-style-react/Modal');

var _Modal2 = _interopRequireDefault(_Modal);

var _Backoffice = require('wix-style-react/Backoffice');

var _MessageBoxFunctionalLayout = require('wix-style-react/MessageBox/MessageBoxFunctionalLayout');

var _MessageBoxFunctionalLayout2 = _interopRequireDefault(_MessageBoxFunctionalLayout);

var _Grid = require('wix-style-react/Grid');

var _DatePicker = require('wix-style-react/DatePicker');

var _DatePicker2 = _interopRequireDefault(_DatePicker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ControlledModal = function (_Component) {
  _inherits(ControlledModal, _Component);

  function ControlledModal(_ref) {
    var _ref$isOpen = _ref.isOpen,
        isOpen = _ref$isOpen === undefined ? false : _ref$isOpen;

    _classCallCheck(this, ControlledModal);

    var _this = _possibleConstructorReturn(this, (ControlledModal.__proto__ || Object.getPrototypeOf(ControlledModal)).call(this));

    _this.state = {
      isOpenBlueModal: isOpen,
      isOpenModalWithDatePicker: false,
      isOpenModalWithCloseButton: false
    };
    return _this;
  }

  _createClass(ControlledModal, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var setState = function setState(state) {
        return function () {
          return _this2.setState(state);
        };
      };

      var closeBlueModal = setState({ isOpenBlueModal: false });
      var openBlueModal = setState({ isOpenBlueModal: true });

      var closeModalWithDatePicker = setState({ isOpenModalWithDatePicker: false });
      var openModalWithDatePicker = setState({ isOpenModalWithDatePicker: true });

      var closeModalWithCloseButton = setState({ isOpenModalWithCloseButton: false });
      var openModalWithCloseButton = setState({ isOpenModalWithCloseButton: true });

      return _react2.default.createElement(
        _Grid.Container,
        null,
        _react2.default.createElement(
          _Grid.Row,
          null,
          _react2.default.createElement(
            _Grid.Col,
            { span: 3 },
            _react2.default.createElement(
              _Backoffice.Button,
              { onClick: openBlueModal },
              'Open Blue Modal'
            ),
            _react2.default.createElement(
              _Modal2.default,
              {
                isOpen: this.state.isOpenBlueModal,
                onRequestClose: closeBlueModal,
                contentLabel: 'Modal Example',
                scrollableContent: false
              },
              _react2.default.createElement(
                _MessageBoxFunctionalLayout2.default,
                {
                  theme: 'blue',
                  title: 'title',
                  confirmText: 'OK',
                  cancelText: 'Cancel',
                  onOk: closeBlueModal,
                  onCancel: closeBlueModal
                },
                'Hello blue world!'
              )
            )
          ),
          _react2.default.createElement(
            _Grid.Col,
            { span: 3 },
            _react2.default.createElement(
              _Backoffice.Button,
              { onClick: openModalWithDatePicker },
              'Open with DatePicker'
            ),
            _react2.default.createElement(
              _Modal2.default,
              {
                isOpen: this.state.isOpenModalWithDatePicker,
                onRequestClose: closeModalWithDatePicker,
                contentLabel: 'Modal Example',
                scrollableContent: false
              },
              _react2.default.createElement(
                _MessageBoxFunctionalLayout2.default,
                {
                  theme: 'blue',
                  title: 'title',
                  confirmText: 'OK',
                  cancelText: 'Cancel',
                  onOk: closeModalWithDatePicker,
                  onCancel: closeModalWithDatePicker
                },
                _react2.default.createElement(_DatePicker2.default, null)
              )
            )
          ),
          _react2.default.createElement(
            _Grid.Col,
            { span: 4 },
            _react2.default.createElement(
              _Backoffice.Button,
              { onClick: openModalWithCloseButton },
              'Open Modal With Close Button'
            ),
            _react2.default.createElement(
              _Modal2.default,
              {
                isOpen: this.state.isOpenModalWithCloseButton,
                onRequestClose: closeModalWithCloseButton,
                shouldDisplayCloseButton: true,
                contentLabel: 'Modal With Close Button Example',
                scrollableContent: false
              },
              _react2.default.createElement(
                _MessageBoxFunctionalLayout2.default,
                {
                  theme: 'blue',
                  title: 'Modal With Close Button Example',
                  confirmText: 'OK',
                  cancelText: 'Cancel',
                  onOk: closeModalWithCloseButton,
                  onCancel: closeModalWithCloseButton
                },
                'I Have a close button on the upper right corner but its impossible to press without deleting the github creature first using the console'
              )
            )
          )
        )
      );
    }
  }]);

  return ControlledModal;
}(_react.Component);

ControlledModal.propTypes = {
  isOpen: _propTypes2.default.bool
};

exports.default = function () {
  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(ControlledModal, null)
  );
};