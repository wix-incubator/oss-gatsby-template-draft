'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Slider = require('wix-style-react/Slider');

var _Slider2 = _interopRequireDefault(_Slider);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ControlledSlider = function (_Component) {
  _inherits(ControlledSlider, _Component);

  function ControlledSlider(_ref) {
    var value = _ref.value;

    _classCallCheck(this, ControlledSlider);

    var _this = _possibleConstructorReturn(this, (ControlledSlider.__proto__ || Object.getPrototypeOf(ControlledSlider)).call(this));

    _this.state = { value: value };
    return _this;
  }

  _createClass(ControlledSlider, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var onChange = function onChange(value) {
        return _this2.setState({ value: value });
      };
      return _react2.default.createElement(_Slider2.default, _extends({}, this.props, { value: this.state.value, onChange: onChange }));
    }
  }]);

  return ControlledSlider;
}(_react.Component);

ControlledSlider.propTypes = {
  value: _propTypes2.default.arrayOf(_propTypes2.default.number)
};
exports.default = ControlledSlider;