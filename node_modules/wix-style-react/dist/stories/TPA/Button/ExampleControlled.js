'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Button = require('../../../src/TPA/Button/Button');

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var style = {
  display: 'inline-block',
  padding: '0 5px',
  width: '140px',
  lineHeight: '22px'
};

var ControlledExample = function (_Component) {
  _inherits(ControlledExample, _Component);

  function ControlledExample() {
    _classCallCheck(this, ControlledExample);

    var _this = _possibleConstructorReturn(this, (ControlledExample.__proto__ || Object.getPrototypeOf(ControlledExample)).call(this));

    _this.state = { clicked: false, disabledClick: false };
    return _this;
  }

  _createClass(ControlledExample, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var onClick = function onClick() {
        return _this2.setState({ clicked: !_this2.state.clicked });
      };

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'div',
          { className: 'ltr', style: style },
          'Enabled',
          _react2.default.createElement('br', null),
          _react2.default.createElement(
            _Button2.default,
            { id: 'button', dataHook: 'story-button-enabled', onClick: onClick },
            this.state.clicked ? 'Clicked!' : 'Click Me!'
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'ltr', style: style },
          'Disabled',
          _react2.default.createElement('br', null),
          _react2.default.createElement(
            _Button2.default,
            { id: 'button', dataHook: 'story-button-disabled', disabled: true, onClick: onClick },
            this.state.disabledClick ? 'Clicked!' : 'Click Me!'
          )
        )
      );
    }
  }]);

  return ControlledExample;
}(_react.Component);

exports.default = function () {
  return _react2.default.createElement(ControlledExample, null);
};