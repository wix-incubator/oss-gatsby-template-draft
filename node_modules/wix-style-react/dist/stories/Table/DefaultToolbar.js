'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.renderMyTableToolbar = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Table = require('wix-style-react/Table');

var _Toolbar = require('wix-style-react/Table/Toolbar');

var _Search = require('wix-style-react/Search');

var _Search2 = _interopRequireDefault(_Search);

var _Dropdown = require('wix-style-react/Dropdown');

var _Dropdown2 = _interopRequireDefault(_Dropdown);

var _Button = require('wix-style-react/Button');

var _Button2 = _interopRequireDefault(_Button);

var _newIcons = require('wix-style-react/new-icons');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var renderMyTableToolbar = exports.renderMyTableToolbar = function renderMyTableToolbar(selectionContext) {
  return selectionContext.selectedCount === 0 ? _react2.default.createElement(MainToolbar, null) : _react2.default.createElement(BulkActionsToolbar, selectionContext);
};

var MainToolbar = function MainToolbar() {
  var collectionOptions = [{ id: 0, value: 'All Products' }, { id: 1, value: 'Towels' }, { id: 2, value: 'Slippers' }];

  var filterOptions = [{ id: 0, value: 'All' }, { id: 1, value: 'Red' }, { id: 2, value: 'Cyan' }];

  return _react2.default.createElement(
    _Toolbar.TableToolbar,
    null,
    _react2.default.createElement(
      _Toolbar.ItemGroup,
      { position: 'start' },
      _react2.default.createElement(
        _Toolbar.Item,
        null,
        _react2.default.createElement(
          _Toolbar.Title,
          null,
          'My Table'
        )
      ),
      _react2.default.createElement(
        _Toolbar.Item,
        null,
        _react2.default.createElement(
          _Toolbar.Label,
          null,
          'Collection',
          _react2.default.createElement(
            'span',
            { style: { width: '150px' } },
            _react2.default.createElement(_Dropdown2.default, { options: collectionOptions, selectedId: 0, roundInput: true })
          )
        )
      ),
      _react2.default.createElement(
        _Toolbar.Item,
        null,
        _react2.default.createElement(
          _Toolbar.Label,
          null,
          'Filter By',
          _react2.default.createElement(
            'span',
            { style: { width: '86px' } },
            _react2.default.createElement(_Dropdown2.default, { options: filterOptions, selectedId: 0, roundInput: true })
          )
        )
      )
    ),
    _react2.default.createElement(
      _Toolbar.ItemGroup,
      { position: 'end' },
      _react2.default.createElement(
        _Toolbar.Item,
        null,
        _react2.default.createElement(_Search2.default, null)
      )
    )
  );
};

var BulkActionsToolbar = function BulkActionsToolbar(props) {
  return _react2.default.createElement(
    _Toolbar.TableToolbar,
    null,
    _react2.default.createElement(
      _Toolbar.ItemGroup,
      { position: 'start' },
      _react2.default.createElement(
        _Toolbar.Item,
        null,
        _react2.default.createElement(
          _Toolbar.SelectedCount,
          null,
          props.selectedCount + ' Selected'
        )
      )
    ),
    _react2.default.createElement(
      _Toolbar.ItemGroup,
      { position: 'end' },
      _react2.default.createElement(
        _Toolbar.Item,
        { layout: 'button' },
        _react2.default.createElement(
          _Button2.default,
          {
            withNewIcons: true,
            theme: 'whiteblueprimary', prefixIcon: _react2.default.createElement(_newIcons.Upload, null),
            onClick: function onClick() {
              return window.alert('Exporting selectedIds=' + props.getSelectedIds());
            }
          },
          'Export'
        )
      ),
      _react2.default.createElement(
        _Toolbar.Item,
        { layout: 'button' },
        _react2.default.createElement(
          _Button2.default,
          {
            withNewIcons: true,
            theme: 'whiteblueprimary', prefixIcon: _react2.default.createElement(_newIcons.Duplicate, null),
            onClick: function onClick() {
              return window.alert('Duplicating selectedIds=' + props.getSelectedIds());
            }
          },
          'Duplicate'
        )
      ),
      _react2.default.createElement(
        _Toolbar.Item,
        { layout: 'button' },
        _react2.default.createElement(
          _Button2.default,
          {
            withNewIcons: true,
            theme: 'whiteblueprimary', prefixIcon: _react2.default.createElement(_newIcons.Edit, null),
            onClick: function onClick() {
              return window.alert('Editing selectedIds=' + props.getSelectedIds());
            }
          },
          'Edit'
        )
      ),
      _react2.default.createElement(_Toolbar.Divider, null),
      _react2.default.createElement(
        _Toolbar.Item,
        null,
        _react2.default.createElement(_Search2.default, { expandable: true })
      )
    )
  );
};
BulkActionsToolbar.propTypes = _Table.TableContextPropTypes;