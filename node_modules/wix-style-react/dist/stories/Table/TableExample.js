'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TableExample = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Table = require('wix-style-react/Table');

var _Toolbar = require('wix-style-react/Table/Toolbar');

var _Card = require('wix-style-react/Card');

var _Card2 = _interopRequireDefault(_Card);

var _Search = require('wix-style-react/Search');

var _Search2 = _interopRequireDefault(_Search);

var _Dropdown = require('wix-style-react/Dropdown');

var _Dropdown2 = _interopRequireDefault(_Dropdown);

var _Button = require('wix-style-react/Button');

var _Button2 = _interopRequireDefault(_Button);

var _newIcons = require('wix-style-react/new-icons');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var baseData = [{ name: 'Apple Towels', SKU: '111222', price: '$2.00', inventory: 'In stock' }, { name: 'Cyan Towels', SKU: '222333', price: '$2.00', inventory: 'In stock' }, { name: 'Marble Slippers', SKU: '333444', price: '$14.00', inventory: 'In stock' }, { name: 'Red Slippers', SKU: '444555', price: '$14.00', inventory: 'Out of stock' }];

var TableExample = exports.TableExample = function (_React$Component) {
  _inherits(TableExample, _React$Component);

  function TableExample() {
    _classCallCheck(this, TableExample);

    return _possibleConstructorReturn(this, (TableExample.__proto__ || Object.getPrototypeOf(TableExample)).apply(this, arguments));
  }

  _createClass(TableExample, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _Card2.default,
        null,
        _react2.default.createElement(
          _Table.Table,
          {
            dataHook: 'story-table-example',
            data: baseData,
            itemsPerPage: 20,
            columns: [{ title: 'Name', render: function render(row) {
                return _react2.default.createElement(
                  'span',
                  null,
                  row.name
                );
              }, width: '30%', minWidth: '150px' }, { title: 'SKU', render: function render(row) {
                return _react2.default.createElement(
                  'span',
                  null,
                  row.SKU
                );
              }, width: '20%', minWidth: '100px' }, { title: 'Price', render: function render(row) {
                return _react2.default.createElement(
                  'span',
                  null,
                  row.price
                );
              }, width: '20%', minWidth: '100px' }, { title: 'Inventory', render: function render(row) {
                return _react2.default.createElement(
                  'span',
                  null,
                  row.inventory
                );
              }, width: '20%', minWidth: '100px' }],
            showSelection: true
          },
          _react2.default.createElement(
            _Table.Table.ToolbarContainer,
            null,
            function (selectionContext) {
              return selectionContext.selectedCount === 0 ? _react2.default.createElement(MainToolbar, null) : _react2.default.createElement(BulkActionsToolbar, selectionContext);
            }
          ),
          _react2.default.createElement(_Table.Table.Content, null)
        )
      );
    }
  }]);

  return TableExample;
}(_react2.default.Component);

var MainToolbar = function MainToolbar() {
  var collectionOptions = [{ id: 0, value: 'All Products' }, { id: 1, value: 'Towels' }, { id: 2, value: 'Slippers' }];

  var filterOptions = [{ id: 0, value: 'All' }, { id: 1, value: 'Red' }, { id: 2, value: 'Cyan' }];

  return _react2.default.createElement(
    _Toolbar.TableToolbar,
    null,
    _react2.default.createElement(
      _Toolbar.ItemGroup,
      { position: 'start' },
      _react2.default.createElement(
        _Toolbar.Item,
        null,
        _react2.default.createElement(
          _Toolbar.Title,
          null,
          'My Table'
        )
      ),
      _react2.default.createElement(
        _Toolbar.Item,
        null,
        _react2.default.createElement(
          _Toolbar.Label,
          null,
          'Collection',
          _react2.default.createElement(
            'span',
            { style: { width: '150px' } },
            _react2.default.createElement(_Dropdown2.default, { options: collectionOptions, selectedId: 0, roundInput: true })
          )
        )
      ),
      _react2.default.createElement(
        _Toolbar.Item,
        null,
        _react2.default.createElement(
          _Toolbar.Label,
          null,
          'Filter By',
          _react2.default.createElement(
            'span',
            { style: { width: '86px' } },
            _react2.default.createElement(_Dropdown2.default, { options: filterOptions, selectedId: 0, roundInput: true })
          )
        )
      )
    ),
    _react2.default.createElement(
      _Toolbar.ItemGroup,
      { position: 'end' },
      _react2.default.createElement(
        _Toolbar.Item,
        null,
        _react2.default.createElement(_Search2.default, null)
      )
    )
  );
};

var BulkActionsToolbar = function BulkActionsToolbar(props) {
  return _react2.default.createElement(
    _Toolbar.TableToolbar,
    null,
    _react2.default.createElement(
      _Toolbar.ItemGroup,
      { position: 'start' },
      _react2.default.createElement(
        _Toolbar.Item,
        null,
        _react2.default.createElement(
          _Toolbar.SelectedCount,
          null,
          props.selectedCount + ' Selected'
        )
      )
    ),
    _react2.default.createElement(
      _Toolbar.ItemGroup,
      { position: 'end' },
      _react2.default.createElement(
        _Toolbar.Item,
        { layout: 'button' },
        _react2.default.createElement(
          _Button2.default,
          {
            withNewIcons: true,
            theme: 'whiteblueprimary', prefixIcon: _react2.default.createElement(_newIcons.Upload, null),
            onClick: function onClick() {
              return window.alert('Exporting selectedIds=' + props.getSelectedIds());
            }
          },
          'Export'
        )
      ),
      _react2.default.createElement(
        _Toolbar.Item,
        { layout: 'button' },
        _react2.default.createElement(
          _Button2.default,
          {
            withNewIcons: true,
            theme: 'whiteblueprimary', prefixIcon: _react2.default.createElement(_newIcons.Duplicate, null),
            onClick: function onClick() {
              return window.alert('Duplicating selectedIds=' + props.getSelectedIds());
            }
          },
          'Duplicate'
        )
      ),
      _react2.default.createElement(
        _Toolbar.Item,
        { layout: 'button' },
        _react2.default.createElement(
          _Button2.default,
          {
            withNewIcons: true,
            theme: 'whiteblueprimary', prefixIcon: _react2.default.createElement(_newIcons.Edit, null),
            onClick: function onClick() {
              return window.alert('Editing selectedIds=' + props.getSelectedIds());
            }
          },
          'Edit'
        )
      ),
      _react2.default.createElement(_Toolbar.Divider, null),
      _react2.default.createElement(
        _Toolbar.Item,
        null,
        _react2.default.createElement(_Search2.default, { expandable: true })
      )
    )
  );
};
BulkActionsToolbar.propTypes = _Table.ToolbarContextPropTypes;