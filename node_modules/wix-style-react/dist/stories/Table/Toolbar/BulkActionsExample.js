'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BulkActionsExample = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Table = require('wix-style-react/Table');

var _Toolbar = require('wix-style-react/Table/Toolbar');

var _Card = require('wix-style-react/Card');

var _Card2 = _interopRequireDefault(_Card);

var _Search = require('wix-style-react/Search');

var _Search2 = _interopRequireDefault(_Search);

var _Button = require('wix-style-react/Button');

var _Button2 = _interopRequireDefault(_Button);

var _newIcons = require('wix-style-react/new-icons');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var BulkActionsExample = exports.BulkActionsExample = function (_React$Component) {
  _inherits(BulkActionsExample, _React$Component);

  function BulkActionsExample() {
    _classCallCheck(this, BulkActionsExample);

    return _possibleConstructorReturn(this, (BulkActionsExample.__proto__ || Object.getPrototypeOf(BulkActionsExample)).apply(this, arguments));
  }

  _createClass(BulkActionsExample, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _Card2.default,
        null,
        _react2.default.createElement(BulkActionsToolbar, { selectedCount: 12 })
      );
    }
  }]);

  return BulkActionsExample;
}(_react2.default.Component);

var BulkActionsToolbar = function BulkActionsToolbar(props) {
  return _react2.default.createElement(
    _Toolbar.TableToolbar,
    null,
    _react2.default.createElement(
      _Toolbar.ItemGroup,
      { position: 'start' },
      _react2.default.createElement(
        _Toolbar.Item,
        null,
        _react2.default.createElement(
          _Toolbar.SelectedCount,
          null,
          props.selectedCount + ' Selected'
        )
      )
    ),
    _react2.default.createElement(
      _Toolbar.ItemGroup,
      { position: 'end' },
      _react2.default.createElement(
        _Toolbar.Item,
        { layout: 'button' },
        _react2.default.createElement(
          _Button2.default,
          {
            withNewIcons: true,
            theme: 'whiteblueprimary', prefixIcon: _react2.default.createElement(_newIcons.Upload, null),
            onClick: function onClick() {
              return window.alert('Exporting selectedIds=' + props.getSelectedIds());
            }
          },
          'Export'
        )
      ),
      _react2.default.createElement(
        _Toolbar.Item,
        { layout: 'button' },
        _react2.default.createElement(
          _Button2.default,
          {
            withNewIcons: true,
            theme: 'whiteblueprimary', prefixIcon: _react2.default.createElement(_newIcons.Duplicate, null),
            onClick: function onClick() {
              return window.alert('Duplicating selectedIds=' + props.getSelectedIds());
            }
          },
          'Duplicate'
        )
      ),
      _react2.default.createElement(
        _Toolbar.Item,
        { layout: 'button' },
        _react2.default.createElement(
          _Button2.default,
          {
            withNewIcons: true,
            theme: 'whiteblueprimary', prefixIcon: _react2.default.createElement(_newIcons.Edit, null),
            onClick: function onClick() {
              return window.alert('Editing selectedIds=' + props.getSelectedIds());
            }
          },
          'Edit'
        )
      ),
      _react2.default.createElement(_Toolbar.Divider, null),
      _react2.default.createElement(
        _Toolbar.Item,
        null,
        _react2.default.createElement(_Search2.default, { expandable: true })
      )
    )
  );
};
BulkActionsToolbar.propTypes = _Table.SelectionContextPropTypes;