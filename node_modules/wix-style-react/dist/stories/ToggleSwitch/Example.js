'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _constants = require('wix-ui-backoffice/dist/src/components/ToggleSwitch/constants');

var _ToggleSwitch = require('./ToggleSwitch.scss');

var _ToggleSwitch2 = _interopRequireDefault(_ToggleSwitch);

var _ToggleSwitch3 = require('wix-style-react/ToggleSwitch');

var _ToggleSwitch4 = _interopRequireDefault(_ToggleSwitch3);

var _Heading = require('wix-ui-backoffice/Heading');

var _Autocomplete = require('wix-ui-backoffice/Autocomplete');

var _Text = require('../../src/Text');

var _Text2 = _interopRequireDefault(_Text);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var skinOptions = Object.keys(_constants.SKINS).map(function (value) {
  return _Autocomplete.Autocomplete.createOption({ id: value, value: value });
});
var sizeOptions = Object.keys(_constants.SIZES).map(function (value) {
  return _Autocomplete.Autocomplete.createOption({ id: value, value: value });
});

var ControlledToggleSwitchExample = function (_React$Component) {
  _inherits(ControlledToggleSwitchExample, _React$Component);

  function ControlledToggleSwitchExample(props) {
    _classCallCheck(this, ControlledToggleSwitchExample);

    var _this = _possibleConstructorReturn(this, (ControlledToggleSwitchExample.__proto__ || Object.getPrototypeOf(ControlledToggleSwitchExample)).call(this, props));

    _this.state = {
      skin: _constants.SKINS.standard,
      size: _constants.SIZES.large,
      checked: false,
      disabled: false
    };
    return _this;
  }

  _createClass(ControlledToggleSwitchExample, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        'div',
        { className: _ToggleSwitch2.default.container },
        _react2.default.createElement(
          'div',
          { style: { width: '300px' } },
          _react2.default.createElement(
            _Heading.Heading,
            null,
            ' Props '
          ),
          _react2.default.createElement('br', null),
          _react2.default.createElement('br', null),
          _react2.default.createElement('br', null),
          _react2.default.createElement(
            _Heading.Heading,
            { appearance: 'H2' },
            'size: '
          ),
          ' ',
          _react2.default.createElement(_Autocomplete.Autocomplete, { options: sizeOptions, onSelect: function onSelect(_ref) {
              var value = _ref.value;
              return _this2.setState({ size: value });
            }, initialSelectedId: this.state.size }),
          _react2.default.createElement('br', null),
          _react2.default.createElement('br', null),
          _react2.default.createElement(
            _Heading.Heading,
            { appearance: 'H2' },
            'skin: '
          ),
          ' ',
          _react2.default.createElement(_Autocomplete.Autocomplete, { options: skinOptions, onSelect: function onSelect(_ref2) {
              var value = _ref2.value;
              return _this2.setState({ skin: value });
            }, initialSelectedId: this.state.skin }),
          _react2.default.createElement('br', null),
          _react2.default.createElement('br', null),
          _react2.default.createElement(
            _Heading.Heading,
            { appearance: 'H2' },
            'checked: '
          ),
          ' ',
          _react2.default.createElement(_ToggleSwitch4.default, { size: 'small', checked: this.state.checked, onChange: function onChange() {
              return _this2.setState({ checked: !_this2.state.checked });
            } }),
          _react2.default.createElement('br', null),
          _react2.default.createElement('br', null),
          _react2.default.createElement(
            _Heading.Heading,
            { appearance: 'H2' },
            'disabled: '
          ),
          ' ',
          _react2.default.createElement(_ToggleSwitch4.default, { size: 'small', checked: this.state.disabled, onChange: function onChange() {
              return _this2.setState({ disabled: !_this2.state.disabled });
            } }),
          _react2.default.createElement('br', null),
          _react2.default.createElement('br', null),
          _react2.default.createElement(
            _Heading.Heading,
            { appearance: 'H2' },
            'tabIndex: '
          ),
          ' ',
          _react2.default.createElement(
            _Text2.default,
            { weight: 'normal' },
            'Tab Index'
          ),
          _react2.default.createElement('br', null),
          _react2.default.createElement('br', null),
          _react2.default.createElement(
            _Heading.Heading,
            { appearance: 'H2' },
            'onChange: '
          ),
          ' ',
          _react2.default.createElement(
            _Text2.default,
            { weight: 'normal' },
            'Callback function when User changes the value of the component'
          ),
          _react2.default.createElement('br', null),
          _react2.default.createElement('br', null),
          _react2.default.createElement(
            _Heading.Heading,
            { appearance: 'H2' },
            'id: '
          ),
          ' ',
          _react2.default.createElement(
            _Text2.default,
            { weight: 'normal' },
            'The ID attribute to put on the toggle'
          ),
          _react2.default.createElement('br', null),
          _react2.default.createElement('br', null)
        ),
        _react2.default.createElement(
          'div',
          null,
          _react2.default.createElement(
            _Heading.Heading,
            null,
            ' Preview '
          ),
          _react2.default.createElement('br', null),
          _react2.default.createElement('br', null),
          _react2.default.createElement('br', null),
          _react2.default.createElement('br', null),
          _react2.default.createElement('br', null),
          _react2.default.createElement('br', null),
          _react2.default.createElement('br', null),
          _react2.default.createElement('br', null),
          _react2.default.createElement('br', null),
          _react2.default.createElement(_ToggleSwitch4.default, {
            size: this.state.size,
            skin: this.state.skin,
            checked: this.state.checked,
            disabled: this.state.disabled,
            onChange: function onChange() {
              return _this2.setState({ checked: !_this2.state.checked });
            },
            dataHook: 'storybook-toggleswitch'
          })
        )
      );
    }
  }]);

  return ControlledToggleSwitchExample;
}(_react2.default.Component);

exports.default = function () {
  return _react2.default.createElement(ControlledToggleSwitchExample, null);
};