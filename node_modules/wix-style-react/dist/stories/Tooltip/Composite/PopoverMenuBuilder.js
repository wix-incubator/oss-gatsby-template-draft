'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _IconChooser = require('../../Button/IconChooser');

var _IconChooser2 = _interopRequireDefault(_IconChooser);

var _Input = require('wix-style-react/Input');

var _Input2 = _interopRequireDefault(_Input);

var _Backoffice = require('wix-style-react/Backoffice');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PopoverMenuBuilder = function (_React$Component) {
  _inherits(PopoverMenuBuilder, _React$Component);

  function PopoverMenuBuilder() {
    _classCallCheck(this, PopoverMenuBuilder);

    return _possibleConstructorReturn(this, (PopoverMenuBuilder.__proto__ || Object.getPrototypeOf(PopoverMenuBuilder)).apply(this, arguments));
  }

  _createClass(PopoverMenuBuilder, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var rows = this.props.menuItems.map(function (menuItem, i) {
        return _react2.default.createElement(
          'div',
          { key: i, style: { display: 'flex', marginBottom: '10px' } },
          _react2.default.createElement(
            'div',
            { style: { width: '30%', marginRight: '6px' } },
            _react2.default.createElement(_IconChooser2.default, { selectedId: menuItem.iconName, onSelect: function onSelect(opt) {
                return _this2.props.updateRowIcon(opt.id, i);
              } })
          ),
          _react2.default.createElement(
            'div',
            { style: { width: '40%' } },
            _react2.default.createElement(_Input2.default, {
              value: menuItem.text,
              placeholder: 'Text for menu item',
              onChange: function onChange(event) {
                return _this2.props.updateRowText(event.target.value, i);
              }
            })
          )
        );
      });

      return _react2.default.createElement(
        'div',
        { style: { width: '100%' } },
        rows,
        _react2.default.createElement(
          _Backoffice.Button,
          { type: 'button', onClick: this.props.addRow },
          'Add Row'
        )
      );
    }
  }]);

  return PopoverMenuBuilder;
}(_react2.default.Component);

PopoverMenuBuilder.propTypes = {
  menuItems: _propTypes2.default.array.isRequired,
  addRow: _propTypes2.default.func.isRequired,
  updateRowIcon: _propTypes2.default.func.isRequired,
  updateRowText: _propTypes2.default.func.isRequired
};
exports.default = PopoverMenuBuilder;