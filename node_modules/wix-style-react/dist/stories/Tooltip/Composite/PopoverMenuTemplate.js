'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactElementToJsxString = require('react-element-to-jsx-string');

var _reactElementToJsxString2 = _interopRequireDefault(_reactElementToJsxString);

var _PopoverMenu = require('../../../src/PopoverMenu');

var _PopoverMenu2 = _interopRequireDefault(_PopoverMenu);

var _PopoverMenuItem = require('../../../src/PopoverMenuItem');

var _PopoverMenuItem2 = _interopRequireDefault(_PopoverMenuItem);

var _PopoverMenuTemplate = require('./PopoverMenuTemplate.helpers');

var _newIcons = require('wix-style-react/new-icons');

var Icons = _interopRequireWildcard(_newIcons);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var PopoverMenuTemplate = function (_Component) {
  _inherits(PopoverMenuTemplate, _Component);

  function PopoverMenuTemplate() {
    _classCallCheck(this, PopoverMenuTemplate);

    return _possibleConstructorReturn(this, (PopoverMenuTemplate.__proto__ || Object.getPrototypeOf(PopoverMenuTemplate)).apply(this, arguments));
  }

  _createClass(PopoverMenuTemplate, [{
    key: 'componentDidUpdate',
    value: function componentDidUpdate(props) {
      props.onChange(this.getExampleCode());
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.props.onChange(this.getExampleCode());
    }
  }, {
    key: 'getExampleCode',
    value: function getExampleCode() {
      return (0, _reactElementToJsxString2.default)(this.getComponent(), {
        showDefaultProps: false
      });
    }
  }, {
    key: 'getComponent',
    value: function getComponent() {
      return _react2.default.createElement(
        _PopoverMenu2.default,
        {
          dataHook: _PopoverMenuTemplate.POPOVER_MENU_DATA_HOOK,
          size: this.props.size,
          placement: this.props.placement,
          buttonTheme: this.props.buttonTheme,
          maxWidth: this.props.maxWidth
        },
        this.props.menuItems.filter(function (menuItem) {
          return menuItem.iconName;
        }).map(function (menuItem, i) {
          return _react2.default.createElement(_PopoverMenuItem2.default, {
            dataHook: _PopoverMenuTemplate.POPOVER_MENU_ITEM_DATA_HOOK,
            key: i,
            icon: _react2.default.createElement(Icons[menuItem.iconName]),
            text: menuItem.text,
            onClick: function onClick() {
              return console.log('menu item ' + i + ' clicked');
            }
          });
        })
      );
    }
  }, {
    key: 'render',
    value: function render() {
      return this.getComponent();
    }
  }]);

  return PopoverMenuTemplate;
}(_react.Component);

PopoverMenuTemplate.propTypes = {
  menuItems: _propTypes2.default.array.isRequired,
  size: _PopoverMenu2.default.propTypes.size,
  placement: _PopoverMenu2.default.propTypes.placement,
  onChange: _propTypes2.default.func,
  maxWidth: _PopoverMenu2.default.propTypes.maxWidth,
  buttonTheme: _propTypes2.default.any
};
exports.default = PopoverMenuTemplate;