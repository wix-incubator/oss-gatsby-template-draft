"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var Badge_driver_1 = require("./Badge.driver");
var _1 = require("./");
var driver_factory_1 = require("wix-ui-test-utils/driver-factory");
var enzyme_1 = require("wix-ui-test-utils/enzyme");
var vanilla_1 = require("wix-ui-test-utils/vanilla");
var enzyme_2 = require("enzyme");
var testkit_1 = require("../../testkit");
var enzyme_3 = require("../../testkit/enzyme");
var constants_1 = require("./constants");
var Email_1 = require("wix-ui-icons-common/Email");
describe('Badge', function () {
    var createDriver = driver_factory_1.createDriverFactory(Badge_driver_1.badgeDriverFactory);
    describe('type prop', function () {
        it('should be solid by default', function () {
            var wrapper = createDriver(React.createElement(_1.Badge, null, "Hello"));
            expect(wrapper.getType()).toBe(constants_1.TYPE.solid);
        });
        Object.keys(constants_1.TYPE).forEach(function (type) {
            it("should be " + type, function () {
                var wrapper = createDriver(React.createElement(_1.Badge, { type: type }, "Hello"));
                expect(wrapper.getType()).toBe(type);
            });
        });
    });
    describe('skin prop', function () {
        it('should be general by default', function () {
            var wrapper = createDriver(React.createElement(_1.Badge, null, "Hello"));
            expect(wrapper.getSkin()).toBe(constants_1.SKIN.general);
        });
        Object.keys(constants_1.SKIN).forEach(function (skin) {
            it("should be " + skin, function () {
                var wrapper = createDriver(React.createElement(_1.Badge, { skin: skin }, "Hello"));
                expect(wrapper.getSkin()).toBe(skin);
            });
        });
    });
    describe('UIText', function () {
        it('should be rendered with T5 appearance', function () {
            var wrapper = createDriver(React.createElement(_1.Badge, null, "Hello"));
            expect(wrapper.getUIText().getAppearance()).toBe('T5');
        });
    });
    describe('children prop', function () {
        it('should render the text given as a children prop', function () {
            var wrapper = createDriver(React.createElement(_1.Badge, null, "Hello"));
            expect(wrapper.text()).toBe('Hello');
        });
        it('should not have any icons by default', function () {
            var wrapper = createDriver(React.createElement(_1.Badge, null, "Hello"));
            expect(wrapper.getPrefixIcon()).toBeFalsy();
            expect(wrapper.getSuffixIcon()).toBeFalsy();
        });
        it('should have prefix icon', function () {
            var wrapper = createDriver(React.createElement(_1.Badge, { prefixIcon: React.createElement(Email_1.default, null) }, "Hello"));
            expect(wrapper.getPrefixIcon()).toBeTruthy();
        });
        it('should have suffix icon', function () {
            var wrapper = createDriver(React.createElement(_1.Badge, { suffixIcon: React.createElement(Email_1.default, null) }, "Hello"));
            expect(wrapper.getSuffixIcon()).toBeTruthy();
        });
    });
    describe('testkit', function () {
        it('should exist', function () {
            expect(vanilla_1.isTestkitExists(React.createElement(_1.Badge, null, "Hello"), testkit_1.badgeTestkitFactory)).toBe(true);
        });
    });
    describe('enzyme testkit', function () {
        it('should exist', function () {
            expect(enzyme_1.isEnzymeTestkitExists(React.createElement(_1.Badge, null, "Hello"), enzyme_3.badgeTestkitFactory, enzyme_2.mount)).toBe(true);
        });
    });
});
//# sourceMappingURL=Badge.spec.js.map