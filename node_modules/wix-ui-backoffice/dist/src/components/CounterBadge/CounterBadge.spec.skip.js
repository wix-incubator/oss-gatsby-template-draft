"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var CounterBadge_driver_1 = require("./CounterBadge.driver");
var _1 = require("./");
var driver_factory_1 = require("wix-ui-test-utils/driver-factory");
var vanilla_1 = require("wix-ui-test-utils/vanilla");
var enzyme_1 = require("wix-ui-test-utils/enzyme");
var testkit_1 = require("../../testkit");
var enzyme_2 = require("../../testkit/enzyme");
var enzyme_3 = require("enzyme");
describe('CounterBadge', function () {
    var createDriver = driver_factory_1.createDriverFactory(CounterBadge_driver_1.counterBadgeDriverFactory);
    describe('general', function () {
        describe('children prop', function () {
            it('should render the children', function () {
                var driver = createDriver(React.createElement(_1.CounterBadge, null, "12"));
                expect(driver.getContentText()).toBe('12');
            });
            it('should render the children as a component', function () {
                var driver = createDriver(React.createElement(_1.CounterBadge, null,
                    React.createElement("div", { "data-hook": "comp" }, "12")));
                expect(driver.getContentText()).toBe('12');
            });
            it('should render a default empty child', function () {
                var driver = createDriver(React.createElement(_1.CounterBadge, null));
                expect(driver.getContentText()).toBe('');
            });
        });
    });
    describe('validations', function () {
        it('should throw when children length is more than 2', function () {
            expect(function () { return enzyme_3.mount(React.createElement(_1.CounterBadge, null, "123")); }).toThrow('CounterBadge children max length can not be more than 2');
        });
    });
    describe('testkit', function () {
        it('should exist', function () {
            expect(vanilla_1.isTestkitExists(React.createElement(_1.CounterBadge, null, "12"), testkit_1.counterBadgeTestkitFactory)).toBe(true);
        });
    });
    describe('enzyme testkit', function () {
        it('should exist', function () {
            expect(enzyme_1.isEnzymeTestkitExists(React.createElement(_1.CounterBadge, null, "12"), enzyme_2.counterBadgeTestkitFactory, enzyme_3.mount)).toBe(true);
        });
    });
});
//# sourceMappingURL=CounterBadge.spec.skip.js.map