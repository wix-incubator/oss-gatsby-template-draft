"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ClosablePopover_driver_1 = require("./ClosablePopover/ClosablePopover.driver");
var DataHooks_1 = require("./DataHooks");
var FloatingHelperContent_driver_1 = require("../../components/FloatingHelper/FloatingHelperContent/FloatingHelperContent.driver");
exports.floatingHelperDriverFactory = function (_a) {
    var wrapper = _a.wrapper, element = _a.element, eventTrigger = _a.eventTrigger;
    var closablePopoverDriver = ClosablePopover_driver_1.closablePopoverDriverFactory({ wrapper: wrapper, element: element, eventTrigger: eventTrigger });
    var popoverContent = function () { return closablePopoverDriver.getContentElement(); };
    var innerContent = function () { return popoverContent().querySelector("[data-hook='" + DataHooks_1.DataHooks.innerContent + "']"); };
    var closeButton = function () { return popoverContent().querySelector("[data-hook='" + DataHooks_1.DataHooks.closeButton + "']"); };
    var contentWrapper = function () { return popoverContent().querySelector("[data-hook='" + DataHooks_1.DataHooks.contentWrapper + "']"); };
    return __assign({}, closablePopoverDriver, { hasCloseButton: function () { return !!closeButton(); }, clickCloseButton: function () { return eventTrigger.click(closeButton()); }, getHelperContentDriver: function () { return FloatingHelperContent_driver_1.floatingHelperContentDriverFactory({ wrapper: wrapper, element: innerContent(), eventTrigger: eventTrigger }); }, getWidth: function () { return window.getComputedStyle(contentWrapper()).width; } });
};
//# sourceMappingURL=FloatingHelper.driver.js.map