"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var DataHooks_1 = require("./DataHooks");
var Button_driver_1 = require("../../Button/Button.driver");
exports.floatingHelperContentDriverFactory = function (factoryParams) {
    var element = factoryParams.element;
    var title = function () { return element.querySelector("[data-hook='" + DataHooks_1.DataHooks.title + "']"); };
    var body = function () { return element.querySelector("[data-hook='" + DataHooks_1.DataHooks.body + "']"); };
    var image = function () { return element.querySelector("[data-hook='" + DataHooks_1.DataHooks.image + "']"); };
    var actionButton = function () {
        return element.querySelector("[data-hook='" + DataHooks_1.DataHooks.actionButton + "']");
    };
    return {
        exists: function () { return !!element; },
        hasTitle: function () { return !!title(); },
        hasBody: function () { return !!body(); },
        hasActionButton: function () { return !!actionButton(); },
        hasImage: function () { return !!image(); },
        getImage: function () { return image() && image().childNodes[0]; },
        getActionButtonDriver: function () { return Button_driver_1.buttonDriverFactory(__assign({}, factoryParams, { element: actionButton() })); },
        getTitleContent: function () { return title().textContent; },
        getBodyContent: function () { return body().textContent; },
    };
};
//# sourceMappingURL=FloatingHelperContent.driver.js.map