/// <reference types="react" />
import * as React from 'react';
import { Requireable } from 'prop-types';
import { TextProps as CoreTextProps } from '../core/CoreText';
export declare enum Appearance {
    H1 = "H1",
    H2 = "H2",
    H3 = "H3",
    H4 = "H4",
}
export declare type TagName = 'h1' | 'h2' | 'h3' | 'h4';
export interface Props {
    /** any nodes to be rendered (usually text nodes) */
    children?: React.ReactNode;
    /** is the text has dark or light skin */
    light?: boolean;
    /** typography of the heading */
    appearance?: Appearance;
}
export interface State {
    tagName: TagName;
}
export declare class Heading extends React.PureComponent<Props, State> {
    static displayName: string;
    static propTypes: {
        light: Requireable<any>;
        appearance: Requireable<any>;
        children?: (object: CoreTextProps, key: string, componentName: string, ...rest: any[]) => Error;
        ellipsis?: (object: CoreTextProps, key: string, componentName: string, ...rest: any[]) => Error;
        forceHideTitle?: (object: CoreTextProps, key: string, componentName: string, ...rest: any[]) => Error;
        tagName?: (object: CoreTextProps, key: string, componentName: string, ...rest: any[]) => Error;
        className?: (object: CoreTextProps, key: string, componentName: string, ...rest: any[]) => Error;
    };
    static defaultProps: Props;
    state: {
        tagName: TagName;
    };
    render(): JSX.Element;
}
