"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var prop_types_1 = require("prop-types");
var omit = require("lodash/omit");
var CoreText_1 = require("../core/CoreText");
var Heading_st_css_1 = require("./Heading.st.css");
var withStylable_1 = require("wix-ui-core/withStylable");
var Appearance;
(function (Appearance) {
    Appearance["H1"] = "H1";
    Appearance["H2"] = "H2";
    Appearance["H3"] = "H3";
    Appearance["H4"] = "H4";
})(Appearance = exports.Appearance || (exports.Appearance = {}));
;
var defaultProps = {
    appearance: Appearance.H1,
    light: false
};
var StyledText = withStylable_1.withStylable(CoreText_1.Text, Heading_st_css_1.default, function (_a) {
    var light = _a.light, appearance = _a.appearance;
    return ({ light: light, appearance: appearance });
}, defaultProps);
var legalPropTypes = omit(CoreText_1.Text.propTypes, 'tagName');
var Heading = /** @class */ (function (_super) {
    __extends(Heading, _super);
    function Heading() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = { tagName: (_this.props.appearance.toLowerCase()) };
        return _this;
    }
    Heading.prototype.render = function () {
        return (React.createElement(StyledText, __assign({}, this.props, { tagName: this.state.tagName })));
    };
    Heading.displayName = 'Heading';
    Heading.propTypes = __assign({}, legalPropTypes, { 
        /** is the text has dark or light skin */
        light: prop_types_1.bool, 
        /** typography of the heading */
        appearance: prop_types_1.oneOf(['H1', 'H2', 'H3', 'H4']) });
    Heading.defaultProps = defaultProps;
    return Heading;
}(React.PureComponent));
exports.Heading = Heading;
//# sourceMappingURL=Heading.js.map