"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var CounterBadge_driver_1 = require("./CounterBadge.driver");
var _1 = require("./");
var driver_factory_1 = require("wix-ui-test-utils/driver-factory");
var vanilla_1 = require("wix-ui-test-utils/vanilla");
var enzyme_1 = require("wix-ui-test-utils/enzyme");
var testkit_1 = require("../../testkit");
var enzyme_2 = require("../../testkit/enzyme");
var enzyme_3 = require("enzyme");
var constants_1 = require("./constants");
var Email_1 = require("wix-ui-icons-common/Email");
describe('CounterBadge', function () {
    var createDriver = driver_factory_1.createDriverFactory(CounterBadge_driver_1.counterBadgeDriverFactory);
    describe('children prop', function () {
        it('should render the children', function () {
            var driver = createDriver(React.createElement(_1.CounterBadge, null, "12"));
            expect(driver.text()).toBe('12');
        });
        it('should render a number type children', function () {
            var children = 12;
            var driver = createDriver(React.createElement(_1.CounterBadge, null, children));
            expect(driver.text()).toBe('12');
        });
        it('should render the children as icon', function () {
            var driver = createDriver(React.createElement(_1.CounterBadge, null,
                React.createElement(Email_1.default, null)));
            expect(driver.getIcon()).toBeTruthy();
        });
        it('should render a default empty child', function () {
            var driver = createDriver(React.createElement(_1.CounterBadge, null));
            expect(driver.text()).toBe('');
        });
    });
    describe('skin prop', function () {
        it('should be general by default', function () {
            var wrapper = createDriver(React.createElement(_1.CounterBadge, null, "12"));
            expect(wrapper.getSkin()).toBe(constants_1.SKIN.general);
        });
        Object.keys(constants_1.SKIN).forEach(function (skin) {
            it("should be " + skin, function () {
                var wrapper = createDriver(React.createElement(_1.CounterBadge, { skin: skin }, "12"));
                expect(wrapper.getSkin()).toBe(skin);
            });
        });
    });
    describe('width', function () {
        it('should be wide when content is string with length > 1', function () {
            var wrapper = createDriver(React.createElement(_1.CounterBadge, null, "12"));
            expect(wrapper.isWide()).toBe(true);
        });
        it('should not be wide when content is string with length <= 1', function () {
            var wrapper = createDriver(React.createElement(_1.CounterBadge, null, "1"));
            expect(wrapper.isWide()).toBe(false);
        });
        it('should not be wide when content is an icon', function () {
            var wrapper = createDriver(React.createElement(_1.CounterBadge, null,
                React.createElement(Email_1.default, null)));
            expect(wrapper.isWide()).toBe(false);
        });
    });
    describe('UIText', function () {
        it('should be rendered with T5 appearance', function () {
            var wrapper = createDriver(React.createElement(_1.CounterBadge, null, "12"));
            expect(wrapper.getUIText().getAppearance()).toBe('T5');
        });
    });
    describe('validations', function () {
        it.skip('should throw when children length is more than 2', function () {
            expect(function () { return enzyme_3.mount(React.createElement(_1.CounterBadge, null, "123")); }).toThrow('CounterBadge children max length can not be more than 2');
        });
    });
    describe('testkit', function () {
        it('should exist', function () {
            expect(vanilla_1.isTestkitExists(React.createElement(_1.CounterBadge, null, "12"), testkit_1.stylableCounterBadgeTestkitFactory)).toBe(true);
        });
    });
    describe('enzyme testkit', function () {
        it('should exist', function () {
            expect(enzyme_1.isEnzymeTestkitExists(React.createElement(_1.CounterBadge, null, "12"), enzyme_2.stylableCounterBadgeTestkitFactory, enzyme_3.mount)).toBe(true);
        });
    });
});
//# sourceMappingURL=CounterBadge.spec.js.map