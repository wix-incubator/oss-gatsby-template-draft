"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var Text_driver_1 = require("./Text.driver");
var _1 = require("./");
var constants_1 = require("./constants");
var driver_factory_1 = require("wix-ui-test-utils/driver-factory");
var testkit_1 = require("../../testkit");
var enzyme_1 = require("../../testkit/enzyme");
var testkitTests_1 = require("../../common/testkitTests");
var utils_1 = require("../../utils");
describe('Text', function () {
    var createDriver = driver_factory_1.createDriverFactory(Text_driver_1.textDriverFactory);
    describe('size prop', function () {
        it('should be medium by default', function () {
            var wrapper = createDriver(React.createElement(_1.Text, null, "Hello"));
            expect(wrapper.getSize()).toBe('medium');
        });
        utils_1.enumValues(constants_1.Size).forEach(function (size) {
            it("should be " + size, function () {
                var wrapper = createDriver(React.createElement(_1.Text, { size: size }, "Hello"));
                expect(wrapper.getSize()).toBe(size);
            });
        });
    });
    describe('secondary prop', function () {
        it('should be false by default', function () {
            var wrapper = createDriver(React.createElement(_1.Text, null, "Hello"));
            expect(wrapper.isSecondary()).toBe(false);
        });
        it("should be true", function () {
            var wrapper = createDriver(React.createElement(_1.Text, { secondary: true }, "Hello"));
            expect(wrapper.isSecondary()).toBe(true);
        });
    });
    describe('skin prop', function () {
        it('should be standard by default', function () {
            var wrapper = createDriver(React.createElement(_1.Text, null, "Hello"));
            expect(wrapper.getSkin()).toBe('standard');
        });
        utils_1.enumValues(constants_1.Skin).forEach(function (skin) {
            it("should be " + skin, function () {
                var wrapper = createDriver(React.createElement(_1.Text, { skin: skin }, "Hello"));
                expect(wrapper.getSkin()).toBe(skin);
            });
        });
    });
    describe('light prop', function () {
        it('should be dark by default', function () {
            var wrapper = createDriver(React.createElement(_1.Text, null, "Hello"));
            expect(wrapper.isLight()).toBe(false);
        });
        it('should be light', function () {
            var wrapper = createDriver(React.createElement(_1.Text, { light: true }, "Hello"));
            expect(wrapper.isLight()).toBe(true);
        });
        [constants_1.Skin.success, constants_1.Skin.error, constants_1.Skin.premium].forEach(function (skin) {
            it("should be dark when skin is " + skin, function () {
                var wrapper = createDriver(React.createElement(_1.Text, { skin: skin, light: true }, "Hello"));
                expect(wrapper.isLight()).toBe(false);
            });
        });
    });
    describe('bold prop', function () {
        it('should not be bold by default', function () {
            var wrapper = createDriver(React.createElement(_1.Text, null, "Hello"));
            expect(wrapper.isBold()).toBe(false);
        });
        it('should be bold', function () {
            var wrapper = createDriver(React.createElement(_1.Text, { bold: true }, "Hello"));
            expect(wrapper.isBold()).toBe(true);
        });
    });
    testkitTests_1.runTestkitExistsSuite({ Element: React.createElement(_1.Text, null), testkitFactory: testkit_1.textTestkitFactory, enzymeTestkitFactory: enzyme_1.textTestkitFactory });
});
//# sourceMappingURL=Text.spec.js.map