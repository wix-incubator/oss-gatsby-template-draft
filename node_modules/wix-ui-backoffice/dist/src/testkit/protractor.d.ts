import { CounterBadgeDriver } from '../components/CounterBadge/CounterBadge.protractor.driver';
export declare const counterBadgeTestkitFactory: (obj: {
    dataHook: string;
}) => CounterBadgeDriver;
export { CounterBadgeDriver };
import { ButtonDriver } from '../components/Button/Button.protractor.driver';
export declare const buttonTestkitFactory: (obj: {
    dataHook: string;
}) => ButtonDriver;
export { ButtonDriver };
import { CloseButtonDriver } from '../components/CloseButton/CloseButton.protractor.driver';
export declare const closeButtonTestkitFactory: (obj: {
    dataHook: string;
}) => ButtonDriver;
export { CloseButtonDriver };
import { FullTextViewDriver } from '../components/FullTextView/FullTextView.protractor.driver';
export declare const fullTextViewTestkitFactory: (obj: {
    dataHook: string;
}) => FullTextViewDriver;
export { FullTextViewDriver };
import { BadgeDriver } from '../components/Badge/Badge.protractor.driver';
export declare const badgeTestkitFactory: (obj: {
    dataHook: string;
}) => BadgeDriver;
export { BadgeDriver };
import { HeadingDriver } from '../components/Heading/Heading.protractor.driver';
export declare const headingTestkitFactory: (obj: {
    dataHook: string;
}) => HeadingDriver;
export { HeadingDriver };
import { UITextDriver } from '../components/StylableUIText/UIText.protractor.driver';
export declare const uiTextTestkitFactory: (obj: {
    dataHook: string;
}) => HeadingDriver;
export { UITextDriver };
import { TextDriver } from '../components/Text/Text.protractor.driver';
export declare const textTestkitFactory: (obj: {
    dataHook: string;
}) => HeadingDriver;
export { TextDriver };
import { AutocompleteDriver } from '../components/Autocomplete/Autocomplete.protractor.driver';
export declare const autocompleteTestkitFactory: (obj: {
    dataHook: string;
}) => AutocompleteDriver;
export { AutocompleteDriver };
import { ToggleSwitchDriver } from '../components/ToggleSwitch/ToggleSwitch.protractor.driver';
export declare const toggleSwitchTestkitFactory: (obj: {
    dataHook: string;
}) => ToggleSwitchDriver;
export { ToggleSwitchDriver };
import { BadgeDriver as StylableCounterBadgeDriver } from '../components/StylableCounterBadge/CounterBadge.protractor.driver';
export declare const stylableCounterBadgeTestkitFactory: (obj: {
    dataHook: string;
}) => BadgeDriver;
export { StylableCounterBadgeDriver };
import { LabelWithOptionsDriver } from '../components/LabelWithOptions/LabelWithOptions.protractor.driver';
export declare const labelWithOptionsTestkitFactory: (obj: {
    dataHook: string;
}) => LabelWithOptionsDriver;
export { LabelWithOptionsDriver };
import { LabelDriver } from '../components/Label/Label.protractor.driver';
export declare const labelTestkitFactory: (obj: {
    dataHook: string;
}) => LabelDriver;
export { LabelDriver };
import { FloatingHelperDriver } from '../components/FloatingHelper/FloatingHelper.protractor.driver';
export declare const floatingHelperTestkitFactory: (obj: {
    dataHook: string;
}) => FloatingHelperDriver;
export { FloatingHelperDriver };
import { ThumbnailDriver } from '../components/Thumbnail/Thumbnail.protractor.driver';
export declare const thumbnailTestkitFactory: (obj: {
    dataHook: string;
}) => ThumbnailDriver;
export { ThumbnailDriver };
import { LinearProgressBarDriver } from '../components/LinearProgressBar/LinearProgressBar.protractor.driver';
export declare const linearProgressBarTestkitFactory: (obj: {
    dataHook: string;
}) => LinearProgressBarDriver;
export { LinearProgressBarDriver };
import { CircularProgressBarDriver } from '../components/CircularProgressBar/CircularProgressBar.protractor.driver';
export declare const circularProgressBarTestkitFactory: (obj: {
    dataHook: string;
}) => CircularProgressBarDriver;
export { CircularProgressBarDriver };
export declare const hBoxTestkitFactory: (obj: {
    dataHook: string;
}) => {
    element: () => any;
};
export declare const vBoxTestkitFactory: (obj: {
    dataHook: string;
}) => {
    element: () => any;
};
export declare const addressInputTestkitFactory: (obj: {
    dataHook: string;
}) => AutocompleteDriver;
import { TimePickerDriver } from '../components/TimePicker/TimePicker.protractor.driver';
export declare const timePickerTestkitFactory: (obj: {
    dataHook: string;
}) => TimePickerDriver;
export { TimePickerDriver };
