"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var DropdownContent_driver_1 = require("./DropdownContent.driver");
var dom_test_container_1 = require("../../../test/dom-test-container");
var _1 = require("./");
var OptionsExample_1 = require("../DropdownOption/OptionsExample");
describe('DropdownContent', function () {
    var createDriver = new dom_test_container_1.ReactDOMTestContainer()
        .unmountAfterEachTest()
        .createLegacyRenderer(DropdownContent_driver_1.dropdownContentDriverFactory);
    var options = OptionsExample_1.generateOptions();
    var createDropdownContent = function (props) {
        if (props === void 0) { props = {}; }
        return (React.createElement(_1.DropdownContent, __assign({}, Object.assign({
            options: [],
            onOptionClick: function () { return null; },
            selectedIds: []
        }, props))));
    };
    it('should render default dropdown content', function () {
        var driver = createDriver(createDropdownContent());
        expect(driver.exists()).toBeTruthy();
    });
    describe('mouse events', function () {
        it('should select selectable options', function () {
            var onOptionClick = jest.fn();
            var driver = createDriver(createDropdownContent({ options: options, onOptionClick: onOptionClick }));
            driver.optionAt(0).click();
            expect(onOptionClick).toHaveBeenCalledWith(options[0]);
            driver.optionAt(1).click();
            expect(onOptionClick).toHaveBeenCalledWith(options[1]);
            driver.optionAt(4).click();
            expect(onOptionClick).toHaveBeenCalledWith(options[4]);
        });
        it('should not select non selectable options', function () {
            var onOptionClick = jest.fn();
            var driver = createDriver(createDropdownContent({ options: options, onOptionClick: onOptionClick }));
            driver.optionAt(2).click();
            expect(onOptionClick).not.toHaveBeenCalled();
            driver.optionAt(5).click();
            expect(onOptionClick).not.toHaveBeenCalled();
        });
    });
});
//# sourceMappingURL=DropdownContent.spec.js.map