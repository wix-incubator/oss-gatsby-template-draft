"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var _1 = require("./");
var DropdownOption_driver_1 = require("./DropdownOption.driver");
var dom_test_container_1 = require("../../../test/dom-test-container");
describe('DropdownOption', function () {
    var createDriver = new dom_test_container_1.ReactDOMTestContainer()
        .unmountAfterEachTest()
        .createLegacyRenderer(DropdownOption_driver_1.dropdownOptionDriverFactory);
    var onClickHandler = jest.fn();
    var onMouseEnterHandler = jest.fn();
    var createOption = function (isDisabled) {
        if (isDisabled === void 0) { isDisabled = false; }
        return ({
            id: 1,
            isDisabled: isDisabled,
            isSelectable: !isDisabled,
            value: 'value',
            render: function () { return 'value'; }
        });
    };
    var createDropdownOption = function (option) { return (React.createElement(_1.DropdownOption, { option: option, isHovered: true, isSelected: true, onClickHandler: onClickHandler, className: "className", onMouseEnterHandler: onMouseEnterHandler })); };
    it('should render default component', function () {
        var option = createOption();
        var driver = createDriver(createDropdownOption(option));
        expect(driver.exists()).toBeTruthy();
        expect(driver.className()).toContain('className');
    });
    it('should call on click handler', function () {
        var option = createOption();
        var driver = createDriver(createDropdownOption(option));
        driver.click();
        expect(onClickHandler).toHaveBeenCalled();
    });
    it('should call on mouse enter handler', function () {
        var option = createOption();
        var driver = createDriver(createDropdownOption(option));
        driver.mouseEnter();
        expect(onMouseEnterHandler).toHaveBeenCalled();
    });
    it('should be hovered and selected but not disabled', function () {
        var option = createOption();
        var driver = createDriver(createDropdownOption(option));
        expect(driver.isHovered()).toBeTruthy();
        expect(driver.isSelected()).toBeTruthy();
        expect(driver.isDisabled()).toBeFalsy();
    });
    it('should be disabled and not hovered and selected data attributes', function () {
        var option = createOption(true);
        var driver = createDriver(createDropdownOption(option));
        expect(driver.isHovered()).toBeFalsy();
        expect(driver.isSelected()).toBeFalsy();
        expect(driver.isDisabled()).toBeTruthy();
    });
});
//# sourceMappingURL=DropdownOption.spec.js.map