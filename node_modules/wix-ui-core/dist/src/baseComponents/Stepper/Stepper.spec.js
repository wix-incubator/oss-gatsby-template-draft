"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var dom_test_container_1 = require("../../../test/dom-test-container");
var Stepper_1 = require("./Stepper");
describe('Stepper', function () {
    var container = new dom_test_container_1.ReactDOMTestContainer().unmountAfterEachTest();
    var render = function (jsx) {
        return container.render(jsx)
            .then(function () { return container.componentNode; });
    };
    it('should mark a step as active', function () { return __awaiter(_this, void 0, void 0, function () {
        var root;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, render(React.createElement(Stepper_1.Stepper, { activeStep: 0 }, function (_a) {
                        var getStepProps = _a.getStepProps;
                        return React.createElement("div", null, getStepProps(0).active ? 'active' : 'inactive');
                    }))];
                case 1:
                    root = _a.sent();
                    expect(root.textContent).toEqual('active');
                    return [2 /*return*/];
            }
        });
    }); });
    it('should mark steps as inactive', function () { return __awaiter(_this, void 0, void 0, function () {
        var root, _a, first, second;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4 /*yield*/, render(React.createElement(Stepper_1.Stepper, { activeStep: 1 }, function (_a) {
                        var getStepProps = _a.getStepProps;
                        return React.createElement("div", null,
                            React.createElement("div", null, getStepProps(0).active ? 'active' : 'inactive'),
                            React.createElement("div", null, getStepProps(2).active ? 'active' : 'inactive'));
                    }))];
                case 1:
                    root = _b.sent();
                    _a = Array.from(root.getElementsByTagName('div')), first = _a[0], second = _a[1];
                    expect(first.textContent).toEqual('inactive');
                    expect(second.textContent).toEqual('inactive');
                    return [2 /*return*/];
            }
        });
    }); });
    it('should mark all previous steps as visited', function () { return __awaiter(_this, void 0, void 0, function () {
        var root, _a, first, second;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4 /*yield*/, render(React.createElement(Stepper_1.Stepper, { activeStep: 2 }, function (_a) {
                        var getStepProps = _a.getStepProps;
                        return React.createElement("div", null,
                            React.createElement("div", null, getStepProps(0).visited ? 'visited' : 'not visited'),
                            React.createElement("div", null, getStepProps(1).visited ? 'visited' : 'not visited'));
                    }))];
                case 1:
                    root = _b.sent();
                    _a = Array.from(root.getElementsByTagName('div')), first = _a[0], second = _a[1];
                    expect(first.textContent).toEqual('visited');
                    expect(second.textContent).toEqual('visited');
                    return [2 /*return*/];
            }
        });
    }); });
    it('should mark all next steps as not visited', function () { return __awaiter(_this, void 0, void 0, function () {
        var root, _a, first, second;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4 /*yield*/, render(React.createElement(Stepper_1.Stepper, { activeStep: 0 }, function (_a) {
                        var getStepProps = _a.getStepProps;
                        return React.createElement("div", null,
                            React.createElement("div", null, getStepProps(1).visited ? 'visited' : 'not visited'),
                            React.createElement("div", null, getStepProps(2).visited ? 'visited' : 'not visited'));
                    }))];
                case 1:
                    root = _b.sent();
                    _a = Array.from(root.getElementsByTagName('div')), first = _a[0], second = _a[1];
                    expect(first.textContent).toEqual('not visited');
                    expect(second.textContent).toEqual('not visited');
                    return [2 /*return*/];
            }
        });
    }); });
    it('should accecpt overrides for step props', function () { return __awaiter(_this, void 0, void 0, function () {
        var root;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, render(React.createElement(Stepper_1.Stepper, { activeStep: 0 }, function (_a) {
                        var getStepProps = _a.getStepProps;
                        var stepProps = getStepProps(0, { className: 'custom-step', active: false });
                        return (React.createElement("div", { className: stepProps.className }, stepProps.active ? 'active' : 'inactive'));
                    }))];
                case 1:
                    root = _a.sent();
                    expect(root.className).toBe('custom-step');
                    expect(root.textContent).toBe('inactive');
                    return [2 /*return*/];
            }
        });
    }); });
});
//# sourceMappingURL=Stepper.spec.js.map