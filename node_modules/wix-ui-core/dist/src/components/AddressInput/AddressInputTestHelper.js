"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var waitForCond = require("wait-for-cond");
var GoogleMapsClientStub_1 = require("./GoogleMapsClientStub");
var first = require('lodash/first');
exports.API_KEY = 'api-key';
exports.ADDRESS_DESC_1 = '1 East Broadway, New York, NY, USA';
exports.ADDRESS_DESC_2 = '114 N 6th St, Brooklyn, NY 11249, USA';
exports.ADDRESS_1 = GoogleMapsClientStub_1.createAddress(exports.ADDRESS_DESC_1);
exports.ADDRESS_2 = GoogleMapsClientStub_1.createAddress(exports.ADDRESS_DESC_2, ['airport']);
exports.GEOCODE_1 = GoogleMapsClientStub_1.createGeocode(exports.ADDRESS_1.place_id, exports.ADDRESS_1.description);
exports.GEOCODE_2 = GoogleMapsClientStub_1.createGeocode(exports.ADDRESS_2.place_id, exports.ADDRESS_2.description);
exports.PLACE_DETAILS_1 = GoogleMapsClientStub_1.createPlaceDetails(exports.ADDRESS_1.place_id, exports.ADDRESS_1.description);
exports.PLACE_DETAILS_2 = GoogleMapsClientStub_1.createPlaceDetails(exports.ADDRESS_2.place_id, exports.ADDRESS_2.description);
exports.INTERNAL_ADDRESS_GEOCODE_1 = {
    formatted: '1 East Broadway, New York, NY, USA',
    latLng: {
        lat: 40.7127753,
        lng: -74.0059728
    },
    approximate: true
};
exports.INTERNAL_ADDRESS_GEOCODE_2 = {
    formatted: '114 N 6th St, Brooklyn, NY 11249, USA',
    latLng: {
        lat: 40.7127753,
        lng: -74.0059728
    },
    approximate: true
};
exports.INTERNAL_ADDRESS_PLACE_DETAILS_1 = {
    formatted: '1 East Broadway, New York, NY, USA',
    latLng: {
        lat: 1,
        lng: -1
    },
    approximate: true
};
exports.INTERNAL_ADDRESS_PLACE_DETAILS_2 = {
    formatted: '114 N 6th St, Brooklyn, NY 11249, USA',
    latLng: {
        lat: 1,
        lng: -1
    },
    approximate: true
};
exports.waitForSingleOption = function (option, driver) {
    return waitForCond(function () {
        try {
            return first(exports.getOptionsText(driver)) === option && driver.getOptionsCount() === 1;
        }
        catch (e) {
            return false;
        }
    });
};
exports.getOptionsText = function (driver) {
    var indices = Array(driver.getOptionsCount()).fill(null).map(function (v, i) { return i; });
    return indices.map(function (index) { return driver.optionAt(index).getText(); });
};
//# sourceMappingURL=AddressInputTestHelper.js.map