"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var protractor_1 = require("../../testkit/protractor");
var protractor_2 = require("wix-ui-test-utils/protractor");
var protractor_3 = require("protractor");
var eyes = require("eyes.it");
describe('Pagination', function () {
    var storyUrl = protractor_2.getStoryUrl('Components', 'Pagination');
    beforeEach(function () { return protractor_3.browser.get(storyUrl); });
    eyes.it('has correct inline layout', function () { return __awaiter(_this, void 0, void 0, function () {
        var pagination, prevLoc, nextLoc, pageSelectionLoc, pageSelectionSize;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    pagination = protractor_1.paginationTestkitFactory({ dataHook: 'story-pagination' });
                    return [4 /*yield*/, protractor_2.waitForVisibilityOf(pagination.element(), 'Cannot find Pagination')];
                case 1:
                    _a.sent();
                    return [4 /*yield*/, pagination.getElementLocation('previous')];
                case 2:
                    prevLoc = _a.sent();
                    return [4 /*yield*/, pagination.getElementLocation('next')];
                case 3:
                    nextLoc = _a.sent();
                    return [4 /*yield*/, pagination.getElementLocation('page-strip')];
                case 4:
                    pageSelectionLoc = _a.sent();
                    return [4 /*yield*/, pagination.getElementSize('page-strip')];
                case 5:
                    pageSelectionSize = _a.sent();
                    expect(prevLoc.x).toBeLessThan(pageSelectionLoc.x);
                    expect(nextLoc.x).toBeGreaterThan(pageSelectionLoc.x + pageSelectionSize.width);
                    return [2 /*return*/];
            }
        });
    }); });
    it('supports showFirstPage and showLastPage', function () {
        var pagination = protractor_1.paginationTestkitFactory({ dataHook: 'story-pagination-show-first-and-last' });
        protractor_2.waitForVisibilityOf(pagination.element());
        expect(pagination.getPageList()).toEqual(['1', '...', '4', '5', '6', '...', '9']);
    });
    it('responds to rtl prop', function () { return __awaiter(_this, void 0, void 0, function () {
        var pagination, prevLoc, nextLoc, pageSelectionLoc, pageSelectionSize;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    pagination = protractor_1.paginationTestkitFactory({ dataHook: 'story-pagination-rtl' });
                    return [4 /*yield*/, protractor_2.waitForVisibilityOf(pagination.element(), 'Cannot find Pagination')];
                case 1:
                    _a.sent();
                    return [4 /*yield*/, pagination.getElementLocation('previous')];
                case 2:
                    prevLoc = _a.sent();
                    return [4 /*yield*/, pagination.getElementLocation('next')];
                case 3:
                    nextLoc = _a.sent();
                    return [4 /*yield*/, pagination.getElementLocation('page-strip')];
                case 4:
                    pageSelectionLoc = _a.sent();
                    return [4 /*yield*/, pagination.getElementSize('page-strip')];
                case 5:
                    pageSelectionSize = _a.sent();
                    expect(prevLoc.x).toBeGreaterThan(pageSelectionLoc.x + pageSelectionSize.width);
                    expect(nextLoc.x).toBeLessThan(pageSelectionLoc.x);
                    return [2 /*return*/];
            }
        });
    }); });
    describe('Responsiveness', function () {
        it("shows all pages if there's enough room", function () {
            var pagination = protractor_1.paginationTestkitFactory({ dataHook: 'responsive-full-range' });
            protractor_2.waitForVisibilityOf(pagination.element());
            expect(pagination.getPageList()).toEqual(['1', '2', '3', '4', '5', '6', '7', '8', '9']);
        });
        it("doesn't try to include the first and the last page when not explicitly asked to", function () {
            var pagination = protractor_1.paginationTestkitFactory({ dataHook: 'responsive-no-ellipsis' });
            protractor_2.waitForVisibilityOf(pagination.element());
            expect(pagination.getPageList()).toEqual(['2', '3', '4', '5', '6', '7', '8']);
        });
        it("show ellipsis before the last page if the current page is close to the beginning", function () {
            var pagination = protractor_1.paginationTestkitFactory({ dataHook: 'responsive-ellipsis-end' });
            protractor_2.waitForVisibilityOf(pagination.element());
            expect(pagination.getPageList()).toEqual(['1', '2', '3', '4', '5', '...', '9']);
        });
        it("show ellipsis after the first page if the current page is close to the end", function () {
            var pagination = protractor_1.paginationTestkitFactory({ dataHook: 'responsive-ellipsis-beginning' });
            protractor_2.waitForVisibilityOf(pagination.element());
            expect(pagination.getPageList()).toEqual(['1', '...', '5', '6', '7', '8', '9']);
        });
        it("show ellipsis on each side if the current page is somewhere in the middle", function () {
            var pagination = protractor_1.paginationTestkitFactory({ dataHook: 'responsive-ellipsis-beginning-end' });
            protractor_2.waitForVisibilityOf(pagination.element());
            expect(pagination.getPageList()).toEqual(['1', '...', '4', '5', '6', '...', '9']);
        });
        it("gives higher priority to first and last page than to prev and next", function () {
            var pagination = protractor_1.paginationTestkitFactory({ dataHook: 'responsive-no-space-for-ellipsis-and-prev-next' });
            protractor_2.waitForVisibilityOf(pagination.element());
            expect(pagination.getPageList()).toEqual(['1', '...', '5', '...', '9']);
        });
        it("doesn't show ellipses if there's too little space for them", function () {
            var pagination = protractor_1.paginationTestkitFactory({ dataHook: 'responsive-no-space-for-ellipsis' });
            protractor_2.waitForVisibilityOf(pagination.element());
            expect(pagination.getPageList()).toEqual(['4', '5', '6']);
        });
        it("always shows the current page even if there's not enough space for it", function () {
            var pagination = protractor_1.paginationTestkitFactory({ dataHook: 'responsive-no-space-for-current' });
            protractor_2.waitForVisibilityOf(pagination.element());
            expect(pagination.getPageList()).toEqual(['5']);
        });
    });
});
//# sourceMappingURL=Pagination.e2e.js.map