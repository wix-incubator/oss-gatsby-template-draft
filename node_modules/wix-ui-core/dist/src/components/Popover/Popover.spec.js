"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var test_utils_1 = require("react-dom/test-utils");
var dom_1 = require("wix-ui-test-utils/dom");
var _1 = require("./");
var dom_test_container_1 = require("../../../test/dom-test-container");
var eventually = require("wix-eventually");
var Popover_st_css_1 = require("./Popover.st.css");
var popoverWithProps = function (props) { return (React.createElement(_1.Popover, __assign({}, props),
    React.createElement(_1.Popover.Element, null,
        React.createElement("div", null, "Element")),
    React.createElement(_1.Popover.Content, null,
        React.createElement("div", null, "Content")))); };
// Since Popover.Content can render outside the component's root, let's query
// the entire document with the assumption that we don't render more than one
// popover at a time.
var queryPopoverElement = function () { return dom_1.queryHook(document, 'popover-element'); };
var queryPopoverContent = function () { return dom_1.queryHook(document, 'popover-content'); };
var queryPopoverArrow = function () { return dom_1.queryHook(document, 'popover-arrow'); };
var queryPopoverPortal = function () { return dom_1.queryHook(document, 'popover-portal'); };
describe('Popover', function () {
    var container = new dom_test_container_1.ReactDOMTestContainer().destroyAfterEachTest();
    describe('Display', function () {
        it("doesn't display popup when shown={false}", function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, container.render(popoverWithProps({
                            placement: 'bottom',
                            shown: false
                        }))];
                    case 1:
                        _a.sent();
                        expect(queryPopoverElement()).toBeTruthy();
                        expect(queryPopoverContent()).toBeNull();
                        return [2 /*return*/];
                }
            });
        }); });
        it("displays popup when shown={true}", function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, container.render(popoverWithProps({
                            placement: 'bottom',
                            shown: true
                        }))];
                    case 1:
                        _a.sent();
                        expect(queryPopoverContent()).toBeTruthy();
                        return [2 /*return*/];
                }
            });
        }); });
    });
    describe('Events', function () {
        it("calls mouseEnter and mouseLeave callbacks", function () { return __awaiter(_this, void 0, void 0, function () {
            var onMouseEnter, onMouseLeave;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        onMouseEnter = jest.fn();
                        onMouseLeave = jest.fn();
                        return [4 /*yield*/, container.render(popoverWithProps({
                                placement: 'bottom',
                                shown: false,
                                onMouseEnter: onMouseEnter,
                                onMouseLeave: onMouseLeave,
                            }))];
                    case 1:
                        _a.sent();
                        test_utils_1.Simulate.mouseEnter(container.componentNode);
                        test_utils_1.Simulate.mouseLeave(container.componentNode);
                        expect(onMouseEnter).toBeCalled();
                        expect(onMouseLeave).toBeCalled();
                        return [2 /*return*/];
                }
            });
        }); });
    });
    describe('Position', function () {
        it("offsets the popup arrow by specified amount", function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, container.render(popoverWithProps({
                            placement: 'bottom',
                            shown: true,
                            showArrow: true,
                            moveArrowTo: 10
                        }))];
                    case 1:
                        _a.sent();
                        expect(queryPopoverArrow().style.left).toBe('10px');
                        return [2 /*return*/];
                }
            });
        }); });
    });
    describe('Animation', function () {
        it("animates on close given a timeout", function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, container.render(popoverWithProps({ placement: 'bottom', shown: true, timeout: 10 }))];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, container.render(popoverWithProps({ placement: 'bottom', shown: false, timeout: 10 }))];
                    case 2:
                        _a.sent();
                        expect(queryPopoverContent()).toBeTruthy();
                        return [4 /*yield*/, eventually(function () {
                                expect(queryPopoverContent()).toBeNull();
                            }, { interval: 1 })];
                    case 3:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        }); });
        it("doesn't animate on close when timeout={0}", function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, container.render(popoverWithProps({ placement: 'bottom', shown: true, timeout: 0 }))];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, container.render(popoverWithProps({ placement: 'bottom', shown: false, timeout: 0 }))];
                    case 2:
                        _a.sent();
                        expect(queryPopoverContent()).toBeNull();
                        return [2 /*return*/];
                }
            });
        }); });
    });
    describe('Portal and containment', function () {
        var portalContainer = new dom_test_container_1.ReactDOMTestContainer().destroyAfterEachTest();
        it("renders the popup directly into the popover root by default", function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, container.render(popoverWithProps({
                            placement: 'bottom',
                            shown: true
                        }))];
                    case 1:
                        _a.sent();
                        expect(queryPopoverContent().parentElement).toBe(container.componentNode);
                        return [2 /*return*/];
                }
            });
        }); });
        it("renders the popup into a portal when given appendTo prop", function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, container.render(popoverWithProps({
                            placement: 'bottom',
                            shown: true,
                            appendTo: portalContainer.node
                        }))];
                    case 1:
                        _a.sent();
                        expect(queryPopoverContent().parentElement).toBe(queryPopoverPortal());
                        expect(queryPopoverPortal().parentElement).toBe(portalContainer.node);
                        expect(queryPopoverPortal().classList).toContain(Popover_st_css_1.default.root);
                        return [2 /*return*/];
                }
            });
        }); });
        it("renders an empty portal when closed", function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, container.render(popoverWithProps({
                            placement: 'bottom',
                            shown: false,
                            appendTo: portalContainer.node
                        }))];
                    case 1:
                        _a.sent();
                        expect(queryPopoverContent()).toBeNull();
                        expect(queryPopoverPortal().parentElement).toBe(portalContainer.node);
                        expect(queryPopoverPortal().classList).not.toContain(Popover_st_css_1.default.root);
                        return [2 /*return*/];
                }
            });
        }); });
        it("removes the portal on unmount", function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, container.render(popoverWithProps({
                            placement: 'bottom',
                            shown: true,
                            appendTo: portalContainer.node
                        }))];
                    case 1:
                        _a.sent();
                        expect(queryPopoverPortal()).toBeTruthy();
                        container.unmount();
                        expect(queryPopoverPortal()).toBeNull();
                        return [2 /*return*/];
                }
            });
        }); });
        it("adds the portal to the body when appendTo=\"window\"", function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, container.render(popoverWithProps({
                            placement: 'bottom',
                            shown: true,
                            appendTo: 'window'
                        }))];
                    case 1:
                        _a.sent();
                        expect(queryPopoverPortal().parentElement).toBe(document.body);
                        return [2 /*return*/];
                }
            });
        }); });
        it("adds the portal to the closest scrollable element when appendTo=\"scrollParent\"", function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, container.render(React.createElement("div", { style: { overflow: 'scroll' } },
                            React.createElement("div", { style: { overflow: 'visible' } }, popoverWithProps({
                                placement: 'bottom',
                                appendTo: 'scrollParent',
                                shown: true
                            }))))];
                    case 1:
                        _a.sent();
                        expect(queryPopoverPortal().parentElement).toBe(container.node.firstChild);
                        return [2 /*return*/];
                }
            });
        }); });
    });
});
//# sourceMappingURL=Popover.spec.js.map