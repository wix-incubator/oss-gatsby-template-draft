"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var RadioButton_st_css_1 = require("./RadioButton.st.css");
var noop = function () { return null; };
var RadioButton = /** @class */ (function (_super) {
    __extends(RadioButton, _super);
    function RadioButton() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.focusedByMouse = false;
        _this.state = {
            focused: false,
            focusVisible: false
        };
        _this.handleClick = function (event) {
            _this.focusedByMouse = true;
            _this.handleInputChange(event);
        };
        _this.handleInputChange = function (event) {
            if (!_this.props.disabled) {
                _this.props.onChange(__assign({ value: _this.props.value }, event));
                if (_this.radioRef) {
                    _this.radioRef.focus();
                }
            }
        };
        _this.onHover = function (event) {
            _this.props.onHover(__assign({ value: _this.props.value }, event));
        };
        _this.onFocus = function () {
            _this.setState({ focused: true, focusVisible: !_this.focusedByMouse });
        };
        _this.onInputBlur = function () {
            _this.setState({ focused: false, focusVisible: false });
            _this.focusedByMouse = false;
        };
        _this.handleInputKeyDown = function () {
            _this.setState({ focusVisible: true });
        };
        _this.radioRef = undefined;
        return _this;
    }
    RadioButton.prototype.render = function () {
        var _this = this;
        var _a = this.props, value = _a.value, name = _a.name, checkedIcon = _a.checkedIcon, uncheckedIcon = _a.uncheckedIcon, label = _a.label, checked = _a.checked, disabled = _a.disabled, required = _a.required, onIconBlur = _a.onIconBlur;
        var focused = this.state.focused;
        return (React.createElement("div", __assign({}, RadioButton_st_css_1.default('root', { checked: checked, disabled: disabled, focused: focused, 'focus-visible': this.state.focusVisible }, this.props), { onChange: this.handleInputChange, onClick: this.handleClick, role: "radio", "aria-checked": checked }),
            React.createElement("input", { type: "radio", className: RadioButton_st_css_1.default.hiddenRadio, disabled: disabled, required: required, onFocus: this.onFocus, onBlur: this.onInputBlur, checked: checked, value: value, name: name, onChange: function () { return null; }, onKeyDown: this.handleInputKeyDown, ref: function (radio) { return _this.radioRef = radio; } }),
            React.createElement("span", { className: RadioButton_st_css_1.default.icon, onMouseEnter: this.onHover, onMouseLeave: onIconBlur }, checked ? checkedIcon : uncheckedIcon),
            React.createElement("span", { className: RadioButton_st_css_1.default.label }, label)));
    };
    RadioButton.displayName = 'RadioButton';
    RadioButton.defaultProps = {
        onChange: noop,
        onHover: noop,
        onBlur: noop
    };
    return RadioButton;
}(React.Component));
exports.RadioButton = RadioButton;
//# sourceMappingURL=RadioButton.js.map