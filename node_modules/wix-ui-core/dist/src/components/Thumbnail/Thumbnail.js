"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var prop_types_1 = require("prop-types");
var Thumbnail_st_css_1 = require("./Thumbnail.st.css");
exports.Thumbnail = function (props) {
    var children = React.Children.only(props.children);
    var selected = props.selected, selectedIcon = props.selectedIcon, onClick = props.onClick, disabled = props.disabled;
    return (React.createElement("div", __assign({}, Thumbnail_st_css_1.default('root', { selected: selected, disabled: disabled }, props), { onClick: onClick }),
        children,
        React.createElement("div", { className: Thumbnail_st_css_1.default.selectedIcon, "data-hook": "selected-icon" }, selectedIcon)));
};
exports.Thumbnail.displayName = 'Thumbnail';
exports.Thumbnail.propTypes = {
    /** Is the thumbnail selected */
    selected: prop_types_1.bool,
    /** Callback when the element is clicked */
    onClick: prop_types_1.func,
    /** Icon to display in when thumbnail is selected */
    selectedIcon: prop_types_1.node,
    /** Item to sit inside the Thumbnail */
    children: prop_types_1.node,
    /** Is the thumbnail disabled */
    disabled: prop_types_1.bool
};
exports.Thumbnail.defaultProps = {
    onClick: function () { return null; },
    disabled: false
};
//# sourceMappingURL=Thumbnail.js.map