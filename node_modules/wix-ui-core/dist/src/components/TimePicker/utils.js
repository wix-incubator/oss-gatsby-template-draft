"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var constants_1 = require("./constants");
exports.leftpad = function (str) { return ('00' + str).slice(-2); };
exports.getFieldFromPos = function (pos) { return Math.floor(pos / 3) + 1; };
exports.parseTime = function (timeStr) { return ({
    hour: timeStr.substr(0, 2),
    minute: timeStr.substr(3, 5)
}); };
exports.isValidTime = function (timeStr, useAmPm) {
    if (useAmPm === void 0) { useAmPm = false; }
    // HH:MM with optional HH:MM:SS and optional HH:MM:SS.mmm
    var test12 = /^(0[1-9]|1[0-2]):([0-5][0-9])(:([0-5][0-9])(\.[0-9]{3})?)?$/;
    var test24 = /^([0-1][0-9]|2[0-3]):([0-5][0-9])(:([0-5][0-9])(\.[0-9]{3})?)?$/;
    return useAmPm
        ? test12.test(timeStr)
        : test24.test(timeStr);
};
var parseIntOrZero = function (str) { return parseInt(str) || 0; };
var changeTime = function (_a) {
    var value = _a.value, field = _a.field, _b = _a.step, step = _b === void 0 ? 1 : _b;
    var _c = exports.parseTime(value), hour = _c.hour, minute = _c.minute;
    switch (field) {
        case constants_1.FIELD.HOUR:
            hour = "" + (parseIntOrZero(hour) + 24 + Math.sign(step)) % 24;
            break;
        case constants_1.FIELD.AMPM:
            if (hour !== constants_1.BLANK) {
                hour = "" + (parseIntOrZero(hour) + 12) % 24;
            }
            break;
        case constants_1.FIELD.MINUTE:
            var nMinute = parseIntOrZero(minute);
            nMinute += step;
            if (nMinute > 59) {
                nMinute -= 60;
                if (hour !== constants_1.BLANK) {
                    hour = "" + (parseIntOrZero(hour) + 1) % 24;
                }
            }
            else if (nMinute < 0) {
                nMinute += 60;
                if (hour !== constants_1.BLANK) {
                    hour = "" + (parseIntOrZero(hour) + 23) % 24;
                }
            }
            minute = "" + nMinute;
            break;
        default:
    }
    return exports.leftpad(hour) + ":" + exports.leftpad(minute);
};
exports.increment = function (_a) {
    var value = _a.value, field = _a.field, _b = _a.step, step = _b === void 0 ? 1 : _b;
    return changeTime({
        value: value,
        field: field,
        step: +step
    });
};
exports.decrement = function (_a) {
    var value = _a.value, field = _a.field, _b = _a.step, step = _b === void 0 ? 1 : _b;
    return changeTime({
        value: value,
        field: field,
        step: -step
    });
};
exports.convertToAmPm = function (_a) {
    var value = _a.value, _b = _a.strings, strings = _b === void 0 ? { am: 'AM', pm: 'PM' } : _b;
    var _c = exports.parseTime(value), hour = _c.hour, minute = _c.minute;
    var ampm = strings.am;
    if (hour !== constants_1.BLANK) {
        var nHour = parseInt(hour);
        if (nHour > 11) {
            ampm = strings.pm;
        }
        nHour = nHour % 12;
        if (nHour === 0) {
            nHour = 12;
        }
        hour = exports.leftpad(nHour);
    }
    return hour + ":" + minute + " " + ampm;
};
//# sourceMappingURL=utils.js.map