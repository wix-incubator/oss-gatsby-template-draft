"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var test_utils_1 = require("stylable/test-utils");
var ToggleSwitch_st_css_1 = require("./ToggleSwitch.st.css");
exports.toggleSwitchDriverFactory = function (_a) {
    var element = _a.element, eventTrigger = _a.eventTrigger;
    var checkbox = element && element.querySelector('input');
    var stylableDOMUtil = new test_utils_1.StylableDOMUtil(ToggleSwitch_st_css_1.default);
    return {
        /** Checks if element exists */
        exists: function () { return !!element; },
        /** Triggers change */
        click: function () {
            // jsdom doesn't simulate checkboxes well: checkbox.click() updates .checked even
            // if the component is controlled, it also doesn't generate onChange() and doesn't
            // respect .disabled
            if (!checkbox.disabled) {
                eventTrigger.change(checkbox);
            }
        },
        /** Returns a boolean indicating if the toggleSwitch is checked */
        isChecked: function () { return checkbox.checked; },
        /** Returns a boolean indicating if the toggleSwitch is disabled */
        isDisabled: function () { return checkbox.disabled; },
        /** Returns the toggle icon inside the knob */
        getKnobIcon: function () { return element.querySelector(stylableDOMUtil.scopeSelector('.knobIcon')); },
        /** Returns whether the toggle has an icon */
        hasKnobIcon: function () { return !!element.querySelector(stylableDOMUtil.scopeSelector('.knobIcon')).innerHTML; },
        /** Returns the id of the input */
        getId: function () { return checkbox.id; },
        /** Returns the tab index */
        getTabIndex: function () { return checkbox.tabIndex; },
        /** Returns the computed styles object of the root component */
        getRootStyles: function () { return window.getComputedStyle(element); },
        /** Returns the computed styles object of the track */
        getTrackStyles: function () { return window.getComputedStyle(element.querySelector(stylableDOMUtil.scopeSelector('.track'))); },
        /** Returns the computed styles object of the knob */
        getKnobStyles: function () { return window.getComputedStyle(element.querySelector(stylableDOMUtil.scopeSelector('.knob'))); },
        /** Returns the computed styles object of the knob icon */
        getKnobIconStyles: function () { return window.getComputedStyle(element.querySelector(stylableDOMUtil.scopeSelector('.knobIcon'))); }
    };
};
//# sourceMappingURL=ToggleSwitch.driver.js.map