"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Private driver, will not be exposed in testkit
 */
var React = require("react");
var enzyme_1 = require("enzyme");
exports.createDriver = function (Component) {
    var player;
    var ClonedComponent = React.cloneElement(Component, {
        playableRef: function (r) { return player = r; },
    });
    var wrapper = enzyme_1.mount(ClonedComponent);
    var rootDOMNode = wrapper.getDOMNode();
    var companyLogoNode = rootDOMNode.querySelector('[data-hook="company-logo"]');
    var containerNode = rootDOMNode.querySelector('[data-hook="player-container"]');
    return {
        hasCover: function () { return wrapper.find('[data-hook="cover"]').length === 1; },
        getRootDOMNode: function () { return rootDOMNode; },
        getSrc: function () { return player.getSrc(); },
        getTitle: function () { return wrapper.find('[data-hook="title"]').text(); },
        getWidth: function () { return containerNode.style.width; },
        getHeight: function () { return containerNode.style.height; },
        getLogoSrc: function () { return companyLogoNode.getAttribute('src'); },
        isAutoPlaying: function () { return player.getAutoPlay(); },
        isMuted: function () { return player.getMute(); },
        setProp: function (prop, value) {
            return wrapper.setProps((_a = {}, _a[prop] = value, _a));
            var _a;
        },
        clickLogo: function () {
            var event = new MouseEvent('click', { bubbles: true });
            companyLogoNode.dispatchEvent(event);
        }
    };
};
//# sourceMappingURL=Video.driver.private.js.map