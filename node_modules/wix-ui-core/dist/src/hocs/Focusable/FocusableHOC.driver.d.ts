/// <reference types="react" />
import * as React from 'react';
declare global  {
    interface Window {
        Event: any;
    }
}
export interface IPureChildComponentProps {
    id: string;
    focusableOnFocus: any;
    focusableOnBlur: any;
}
export declare class PureChildComponent extends React.PureComponent<IPureChildComponentProps> {
    private id;
    constructor(props: any);
    static staticVariable: string;
    static staticMethod: () => string;
    unboundMethod: () => string;
    boundMethod: () => string;
    render(): JSX.Element;
}
export declare const createDriver: (Component: any) => {
    fireMouseDown: () => boolean;
    fireKeyDown: () => boolean;
    fireKeyUp: () => boolean;
    tabOut: () => void;
    tabIn: () => void;
    click: () => void;
    exists: () => boolean;
    focus: () => any;
    blur: () => any;
    hasFocusState: () => boolean;
    hasFocusVisibleState: () => boolean;
};
export declare const WithFocusableComp: any;
