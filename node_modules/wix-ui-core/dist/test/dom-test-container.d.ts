/// <reference types="react" />
import * as React from 'react';
import { Simulate } from 'react-dom/test-utils';
export declare function createDOMContainer(): HTMLElement;
export declare class ReactDOMTestContainer {
    node: HTMLElement;
    readonly componentNode: HTMLElement | null;
    create(): this;
    destroy(): this;
    render<P>(jsx: React.ReactElement<P>): Promise<void>;
    renderSync<P>(jsx: React.ReactElement<P>): void | Element | React.Component<P, React.ComponentState, any>;
    renderWithRef(jsx: JSX.Element): Promise<any>;
    unmount(): this;
    unmountAfterEachTest(): this;
    destroyAfterEachTest(): this;
    createLegacyRenderer<T>(driverFactory: (args: LegacyDriverArgs) => T): (element: JSX.Element) => T;
}
export interface LegacyDriverArgs {
    element: Element | null;
    wrapper: HTMLElement;
    component?: JSX.Element;
    eventTrigger: typeof Simulate;
}
