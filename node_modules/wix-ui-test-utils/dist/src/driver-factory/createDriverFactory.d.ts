/// <reference types="react" />
import * as React from 'react';
import { Simulate } from 'react-dom/test-utils';
import { ReactWrapper } from 'enzyme';
export declare type DriverFactory<TDriver extends BaseDriver> = (compFactory: ComponentFactory) => TDriver;
export interface BaseDriver {
    exists: () => boolean;
}
export interface ComponentFactory {
    element: Element | undefined;
    wrapper: HTMLElement | ReactWrapper;
    component?: React.ReactElement<any>;
    eventTrigger: typeof Simulate;
}
export declare function createDriverFactory<TDriver extends BaseDriver>(driverFactory: DriverFactory<TDriver>): (Component: React.ReactElement<any>) => TDriver;
