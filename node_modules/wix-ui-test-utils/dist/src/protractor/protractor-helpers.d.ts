import { promise, ElementFinder, WebElement } from 'protractor';
export interface StoryUrlParams {
    kind: string;
    story: string;
    withExamples?: boolean;
}
/**
 * @deprecated
 * @see createStoryUrl
 */
export declare const getStoryUrl: (kind: string, story: string) => string;
/**
 *
 * @param {StoryUrlParams} params withExamples defaults to true
 */
export declare const createStoryUrl: ({ kind, story, withExamples }: StoryUrlParams) => string;
export declare const scrollToElement: (element: ElementFinder) => promise.Promise<{}>;
export declare const hasEllipsis: (element: ElementFinder) => promise.Promise<{}>;
export declare const waitForVisibilityOf: (elements: ElementFinder | ElementFinder[], errorMsg?: string | undefined, timeout?: number) => promise.Promise<{}[]>;
export declare function isFocused(element: ElementFinder): promise.Promise<any>;
export declare const hasAttribute: (elementFinder: ElementFinder, attributeName: string) => promise.Promise<boolean>;
export interface ILocation {
    x: number;
    y: number;
}
export declare const mouseEnter: (element: WebElement | ILocation) => Promise<void>;
export declare const mouseLeave: () => Promise<void>;
