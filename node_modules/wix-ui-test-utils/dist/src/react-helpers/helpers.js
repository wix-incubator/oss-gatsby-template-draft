"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var test_utils_1 = require("react-dom/test-utils");
exports.isClassExists = function (element, className) {
    return !!element && !!element.className.match(new RegExp('\\b' + className + '\\b'));
};
exports.sleep = function (ms) {
    return new Promise(function (resolve) { return setTimeout(resolve, ms); });
};
// HOC that makes underlying component "controlled"
function makeControlled(Component) {
    return _a = /** @class */ (function (_super) {
            __extends(ControlledComponent, _super);
            function ControlledComponent() {
                var _this = _super !== null && _super.apply(this, arguments) || this;
                _this.state = { value: _this.props.value };
                _this._onChange = function (e) {
                    var onChange = _this.props.onChange;
                    _this.setState({
                        value: e.target.value
                    });
                    onChange && onChange(e);
                };
                return _this;
            }
            ControlledComponent.prototype.render = function () {
                var bindedPropMethods = {};
                for (var _i = 0, _a = Object.keys(this.props); _i < _a.length; _i++) {
                    var propName = _a[_i];
                    var propValue = this.props[propName];
                    if (typeof propValue === 'function') {
                        bindedPropMethods[propName] = this.props[propName].bind(this);
                    }
                }
                return (React.createElement(Component, __assign({}, this.props, bindedPropMethods, { value: this.state.value, onChange: this._onChange })));
            };
            return ControlledComponent;
        }(React.Component)),
        _a.defaultProps = {
            value: ''
        },
        _a;
    var _a;
}
exports.makeControlled = makeControlled;
exports.reactEventTrigger = function () { return test_utils_1.Simulate; };
//# sourceMappingURL=helpers.js.map