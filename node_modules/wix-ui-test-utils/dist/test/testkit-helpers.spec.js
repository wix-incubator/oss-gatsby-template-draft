"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var enzyme_1 = require("../src/enzyme");
var vanilla_1 = require("../src/vanilla");
var enzyme_2 = require("enzyme");
describe('isTestkitExists', function () {
    var MyComp = function () { return (React.createElement("div", null)); };
    var driver = function (element) {
        return {
            exists: function () { return !!element; }
        };
    };
    it('vanilla should exist', function () {
        expect(vanilla_1.isTestkitExists(React.createElement(MyComp, null), vanilla_1.testkitFactoryCreator(driver))).toEqual(true);
    });
    it('vanilla should exist using data-hook only', function () {
        expect(vanilla_1.isTestkitExists(React.createElement(MyComp, null), vanilla_1.testkitFactoryCreator(driver), { dataHookPropName: 'data-hook' })).toEqual(true);
    });
    it('enzyme should exist', function () {
        expect(enzyme_1.isEnzymeTestkitExists(React.createElement(MyComp, null), enzyme_1.enzymeTestkitFactoryCreator(driver), enzyme_2.mount)).toEqual(true);
    });
    it('enzyme should exist without data-hook value', function () {
        expect(enzyme_1.isEnzymeTestkitExists(React.createElement(MyComp, null), enzyme_1.enzymeTestkitFactoryCreator(driver), enzyme_2.mount, { withoutDataHook: true })).toEqual(true);
    });
    it('enzyme should exist using data-hook prop name only', function () {
        expect(enzyme_1.isEnzymeTestkitExists(React.createElement(MyComp, null), enzyme_1.enzymeTestkitFactoryCreator(driver), enzyme_2.mount, { dataHookPropName: 'data-hook' })).toEqual(true);
    });
});
//# sourceMappingURL=testkit-helpers.spec.js.map