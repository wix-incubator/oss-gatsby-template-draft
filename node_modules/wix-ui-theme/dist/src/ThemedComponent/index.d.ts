/// <reference types="react" />
import * as React from 'react';
import { ReactElement } from 'react';
export declare type Theme = ((props: any) => Object) | Object;
export interface ThemedComponentState {
    calculatedTheme: Object | undefined;
}
export interface ThemedComponentProps {
    theme?: Theme;
    children: ReactElement<any>;
    [propName: string]: any;
}
export declare class ThemedComponent extends React.PureComponent<ThemedComponentProps, ThemedComponentState> {
    static defaultProps: {
        theme: () => {};
    };
    constructor(props: ThemedComponentProps);
    componentWillReceiveProps(nextProps: ThemedComponentProps): void;
    render(): React.ReactElement<any>;
}
